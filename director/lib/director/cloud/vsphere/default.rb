require 'xsd/qname'

module Bosh; module Director; module CloudProviders; module VSphere


# {urn:vim25}DestroyPropertyFilterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyPropertyFilterRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateFilterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::PropertyFilterSpec
#   partialUpdates - SOAP::SOAPBoolean
class CreateFilterRequestType
  attr_accessor :spec
  attr_accessor :partialUpdates

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, partialUpdates = nil)
    @v__this = v__this
    @spec = spec
    @partialUpdates = partialUpdates
  end
end

# {urn:vim25}RetrievePropertiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   specSet - Bosh::Director::CloudProviders::VSphere::PropertyFilterSpec
class RetrievePropertiesRequestType
  attr_accessor :specSet

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, specSet = [])
    @v__this = v__this
    @specSet = specSet
  end
end

# {urn:vim25}CheckForUpdatesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   version - SOAP::SOAPString
class CheckForUpdatesRequestType
  attr_accessor :version

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, version = nil)
    @v__this = v__this
    @version = version
  end
end

# {urn:vim25}WaitForUpdatesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   version - SOAP::SOAPString
class WaitForUpdatesRequestType
  attr_accessor :version

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, version = nil)
    @v__this = v__this
    @version = version
  end
end

# {urn:vim25}CancelWaitForUpdatesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CancelWaitForUpdatesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}WaitForUpdatesExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   version - SOAP::SOAPString
#   options - Bosh::Director::CloudProviders::VSphere::WaitOptions
class WaitForUpdatesExRequestType
  attr_accessor :version
  attr_accessor :options

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, version = nil, options = nil)
    @v__this = v__this
    @version = version
    @options = options
  end
end

# {urn:vim25}RetrievePropertiesExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   specSet - Bosh::Director::CloudProviders::VSphere::PropertyFilterSpec
#   options - Bosh::Director::CloudProviders::VSphere::RetrieveOptions
class RetrievePropertiesExRequestType
  attr_accessor :specSet
  attr_accessor :options

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, specSet = [], options = nil)
    @v__this = v__this
    @specSet = specSet
    @options = options
  end
end

# {urn:vim25}ContinueRetrievePropertiesExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   token - SOAP::SOAPString
class ContinueRetrievePropertiesExRequestType
  attr_accessor :token

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, token = nil)
    @v__this = v__this
    @token = token
  end
end

# {urn:vim25}CancelRetrievePropertiesExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   token - SOAP::SOAPString
class CancelRetrievePropertiesExRequestType
  attr_accessor :token

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, token = nil)
    @v__this = v__this
    @token = token
  end
end

# {urn:vim25}CreatePropertyCollectorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreatePropertyCollectorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}DestroyPropertyCollectorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyPropertyCollectorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}DynamicArray
#   dynamicType - SOAP::SOAPString
#   val - (any)
class DynamicArray
  attr_accessor :dynamicType
  attr_accessor :val

  def initialize(dynamicType = nil, val = [])
    @dynamicType = dynamicType
    @val = val
  end
end

# {urn:vim25}DynamicData
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}KeyAnyValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - (any)
class KeyAnyValue < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}LocalizableMessage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   arg - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
#   message - SOAP::SOAPString
class LocalizableMessage < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :arg
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, arg = [], message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @arg = arg
    @message = message
  end
end

# {urn:vim25}LocalizedMethodFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fault - Bosh::Director::CloudProviders::VSphere::MethodFault
#   localizedMessage - SOAP::SOAPString
class LocalizedMethodFault < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fault
  attr_accessor :localizedMessage

  def initialize(dynamicType = nil, dynamicProperty = [], fault = nil, localizedMessage = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fault = fault
    @localizedMessage = localizedMessage
  end
end

# {urn:vim25}PropertyFilterSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   propSet - Bosh::Director::CloudProviders::VSphere::PropertySpec
#   objectSet - Bosh::Director::CloudProviders::VSphere::ObjectSpec
#   reportMissingObjectsInResults - SOAP::SOAPBoolean
class PropertyFilterSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :propSet
  attr_accessor :objectSet
  attr_accessor :reportMissingObjectsInResults

  def initialize(dynamicType = nil, dynamicProperty = [], propSet = [], objectSet = [], reportMissingObjectsInResults = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @propSet = propSet
    @objectSet = objectSet
    @reportMissingObjectsInResults = reportMissingObjectsInResults
  end
end

# {urn:vim25}PropertySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   all - SOAP::SOAPBoolean
#   pathSet - SOAP::SOAPString
class PropertySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :all
  attr_accessor :pathSet

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, all = nil, pathSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @all = all
    @pathSet = pathSet
  end
end

# {urn:vim25}ObjectSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   skip - SOAP::SOAPBoolean
#   selectSet - Bosh::Director::CloudProviders::VSphere::SelectionSpec
class ObjectSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :obj
  attr_accessor :skip
  attr_accessor :selectSet

  def initialize(dynamicType = nil, dynamicProperty = [], obj = nil, skip = nil, selectSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @obj = obj
    @skip = skip
    @selectSet = selectSet
  end
end

# {urn:vim25}SelectionSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
class SelectionSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
  end
end

# {urn:vim25}TraversalSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   type - SOAP::SOAPString
#   path - SOAP::SOAPString
#   skip - SOAP::SOAPBoolean
#   selectSet - Bosh::Director::CloudProviders::VSphere::SelectionSpec
class TraversalSpec < SelectionSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :type
  attr_accessor :path
  attr_accessor :skip
  attr_accessor :selectSet

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, type = nil, path = nil, skip = nil, selectSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @type = type
    @path = path
    @skip = skip
    @selectSet = selectSet
  end
end

# {urn:vim25}ObjectContent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   propSet - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   missingSet - Bosh::Director::CloudProviders::VSphere::MissingProperty
class ObjectContent < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :obj
  attr_accessor :propSet
  attr_accessor :missingSet

  def initialize(dynamicType = nil, dynamicProperty = [], obj = nil, propSet = [], missingSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @obj = obj
    @propSet = propSet
    @missingSet = missingSet
  end
end

# {urn:vim25}UpdateSet
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   version - SOAP::SOAPString
#   filterSet - Bosh::Director::CloudProviders::VSphere::PropertyFilterUpdate
#   truncated - SOAP::SOAPBoolean
class UpdateSet < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :version
  attr_accessor :filterSet
  attr_accessor :truncated

  def initialize(dynamicType = nil, dynamicProperty = [], version = nil, filterSet = [], truncated = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @version = version
    @filterSet = filterSet
    @truncated = truncated
  end
end

# {urn:vim25}PropertyFilterUpdate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   filter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   objectSet - Bosh::Director::CloudProviders::VSphere::ObjectUpdate
#   missingSet - Bosh::Director::CloudProviders::VSphere::MissingObject
class PropertyFilterUpdate < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :filter
  attr_accessor :objectSet
  attr_accessor :missingSet

  def initialize(dynamicType = nil, dynamicProperty = [], filter = nil, objectSet = [], missingSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @filter = filter
    @objectSet = objectSet
    @missingSet = missingSet
  end
end

# {urn:vim25}ObjectUpdate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   kind - Bosh::Director::CloudProviders::VSphere::ObjectUpdateKind
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   changeSet - Bosh::Director::CloudProviders::VSphere::PropertyChange
#   missingSet - Bosh::Director::CloudProviders::VSphere::MissingProperty
class ObjectUpdate < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :kind
  attr_accessor :obj
  attr_accessor :changeSet
  attr_accessor :missingSet

  def initialize(dynamicType = nil, dynamicProperty = [], kind = nil, obj = nil, changeSet = [], missingSet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @kind = kind
    @obj = obj
    @changeSet = changeSet
    @missingSet = missingSet
  end
end

# {urn:vim25}PropertyChange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   op - Bosh::Director::CloudProviders::VSphere::PropertyChangeOp
#   val - (any)
class PropertyChange < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :op
  attr_accessor :val

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, op = nil, val = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @op = op
    @val = val
  end
end

# {urn:vim25}MissingProperty
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class MissingProperty < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fault = fault
  end
end

# {urn:vim25}MissingObject
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class MissingObject < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :obj
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], obj = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @obj = obj
    @fault = fault
  end
end

# {urn:vim25}WaitOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   maxWaitSeconds - SOAP::SOAPInt
#   maxObjectUpdates - SOAP::SOAPInt
class WaitOptions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :maxWaitSeconds
  attr_accessor :maxObjectUpdates

  def initialize(dynamicType = nil, dynamicProperty = [], maxWaitSeconds = nil, maxObjectUpdates = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @maxWaitSeconds = maxWaitSeconds
    @maxObjectUpdates = maxObjectUpdates
  end
end

# {urn:vim25}RetrieveOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   maxObjects - SOAP::SOAPInt
class RetrieveOptions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :maxObjects

  def initialize(dynamicType = nil, dynamicProperty = [], maxObjects = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @maxObjects = maxObjects
  end
end

# {urn:vim25}RetrieveResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   token - SOAP::SOAPString
#   objects - Bosh::Director::CloudProviders::VSphere::ObjectContent
class RetrieveResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :token
  attr_accessor :objects

  def initialize(dynamicType = nil, dynamicProperty = [], token = nil, objects = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @token = token
    @objects = objects
  end
end

# {urn:vim25}AboutInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   fullName - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   localeVersion - SOAP::SOAPString
#   localeBuild - SOAP::SOAPString
#   osType - SOAP::SOAPString
#   productLineId - SOAP::SOAPString
#   apiType - SOAP::SOAPString
#   apiVersion - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
#   licenseProductName - SOAP::SOAPString
#   licenseProductVersion - SOAP::SOAPString
class AboutInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :fullName
  attr_accessor :vendor
  attr_accessor :version
  attr_accessor :build
  attr_accessor :localeVersion
  attr_accessor :localeBuild
  attr_accessor :osType
  attr_accessor :productLineId
  attr_accessor :apiType
  attr_accessor :apiVersion
  attr_accessor :instanceUuid
  attr_accessor :licenseProductName
  attr_accessor :licenseProductVersion

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, fullName = nil, vendor = nil, version = nil, build = nil, localeVersion = nil, localeBuild = nil, osType = nil, productLineId = nil, apiType = nil, apiVersion = nil, instanceUuid = nil, licenseProductName = nil, licenseProductVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @fullName = fullName
    @vendor = vendor
    @version = version
    @build = build
    @localeVersion = localeVersion
    @localeBuild = localeBuild
    @osType = osType
    @productLineId = productLineId
    @apiType = apiType
    @apiVersion = apiVersion
    @instanceUuid = instanceUuid
    @licenseProductName = licenseProductName
    @licenseProductVersion = licenseProductVersion
  end
end

# {urn:vim25}AuthorizationDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   privilege - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   privilegeGroup - Bosh::Director::CloudProviders::VSphere::ElementDescription
class AuthorizationDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :privilege
  attr_accessor :privilegeGroup

  def initialize(dynamicType = nil, dynamicProperty = [], privilege = [], privilegeGroup = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @privilege = privilege
    @privilegeGroup = privilegeGroup
  end
end

# {urn:vim25}Permission
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   principal - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
#   roleId - SOAP::SOAPInt
#   propagate - SOAP::SOAPBoolean
class Permission < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :principal
  attr_accessor :group
  attr_accessor :roleId
  attr_accessor :propagate

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, principal = nil, group = nil, roleId = nil, propagate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @principal = principal
    @group = group
    @roleId = roleId
    @propagate = propagate
  end
end

# {urn:vim25}AuthorizationRole
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   roleId - SOAP::SOAPInt
#   system - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   info - Bosh::Director::CloudProviders::VSphere::Description
#   privilege - SOAP::SOAPString
class AuthorizationRole < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :roleId
  attr_accessor :system
  attr_accessor :name
  attr_accessor :info
  attr_accessor :privilege

  def initialize(dynamicType = nil, dynamicProperty = [], roleId = nil, system = nil, name = nil, info = nil, privilege = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @roleId = roleId
    @system = system
    @name = name
    @info = info
    @privilege = privilege
  end
end

# {urn:vim25}AuthorizationPrivilege
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   privId - SOAP::SOAPString
#   onParent - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   privGroupName - SOAP::SOAPString
class AuthorizationPrivilege < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :privId
  attr_accessor :onParent
  attr_accessor :name
  attr_accessor :privGroupName

  def initialize(dynamicType = nil, dynamicProperty = [], privId = nil, onParent = nil, name = nil, privGroupName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @privId = privId
    @onParent = onParent
    @name = name
    @privGroupName = privGroupName
  end
end

# {urn:vim25}Capability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   provisioningSupported - SOAP::SOAPBoolean
#   multiHostSupported - SOAP::SOAPBoolean
#   userShellAccessSupported - SOAP::SOAPBoolean
#   supportedEVCMode - Bosh::Director::CloudProviders::VSphere::EVCMode
class Capability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :provisioningSupported
  attr_accessor :multiHostSupported
  attr_accessor :userShellAccessSupported
  attr_accessor :supportedEVCMode

  def initialize(dynamicType = nil, dynamicProperty = [], provisioningSupported = nil, multiHostSupported = nil, userShellAccessSupported = nil, supportedEVCMode = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @provisioningSupported = provisioningSupported
    @multiHostSupported = multiHostSupported
    @userShellAccessSupported = userShellAccessSupported
    @supportedEVCMode = supportedEVCMode
  end
end

# {urn:vim25}ComputeResourceSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   totalCpu - SOAP::SOAPInt
#   totalMemory - SOAP::SOAPLong
#   numCpuCores - SOAP::SOAPShort
#   numCpuThreads - SOAP::SOAPShort
#   effectiveCpu - SOAP::SOAPInt
#   effectiveMemory - SOAP::SOAPLong
#   numHosts - SOAP::SOAPInt
#   numEffectiveHosts - SOAP::SOAPInt
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
class ComputeResourceSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :totalCpu
  attr_accessor :totalMemory
  attr_accessor :numCpuCores
  attr_accessor :numCpuThreads
  attr_accessor :effectiveCpu
  attr_accessor :effectiveMemory
  attr_accessor :numHosts
  attr_accessor :numEffectiveHosts
  attr_accessor :overallStatus

  def initialize(dynamicType = nil, dynamicProperty = [], totalCpu = nil, totalMemory = nil, numCpuCores = nil, numCpuThreads = nil, effectiveCpu = nil, effectiveMemory = nil, numHosts = nil, numEffectiveHosts = nil, overallStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @totalCpu = totalCpu
    @totalMemory = totalMemory
    @numCpuCores = numCpuCores
    @numCpuThreads = numCpuThreads
    @effectiveCpu = effectiveCpu
    @effectiveMemory = effectiveMemory
    @numHosts = numHosts
    @numEffectiveHosts = numEffectiveHosts
    @overallStatus = overallStatus
  end
end

# {urn:vim25}ClusterComputeResourceSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   totalCpu - SOAP::SOAPInt
#   totalMemory - SOAP::SOAPLong
#   numCpuCores - SOAP::SOAPShort
#   numCpuThreads - SOAP::SOAPShort
#   effectiveCpu - SOAP::SOAPInt
#   effectiveMemory - SOAP::SOAPLong
#   numHosts - SOAP::SOAPInt
#   numEffectiveHosts - SOAP::SOAPInt
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   currentFailoverLevel - SOAP::SOAPInt
#   admissionControlInfo - Bosh::Director::CloudProviders::VSphere::ClusterDasAdmissionControlInfo
#   numVmotions - SOAP::SOAPInt
#   targetBalance - SOAP::SOAPInt
#   currentBalance - SOAP::SOAPInt
#   currentEVCModeKey - SOAP::SOAPString
class ClusterComputeResourceSummary < ComputeResourceSummary
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :totalCpu
  attr_accessor :totalMemory
  attr_accessor :numCpuCores
  attr_accessor :numCpuThreads
  attr_accessor :effectiveCpu
  attr_accessor :effectiveMemory
  attr_accessor :numHosts
  attr_accessor :numEffectiveHosts
  attr_accessor :overallStatus
  attr_accessor :currentFailoverLevel
  attr_accessor :admissionControlInfo
  attr_accessor :numVmotions
  attr_accessor :targetBalance
  attr_accessor :currentBalance
  attr_accessor :currentEVCModeKey

  def initialize(dynamicType = nil, dynamicProperty = [], totalCpu = nil, totalMemory = nil, numCpuCores = nil, numCpuThreads = nil, effectiveCpu = nil, effectiveMemory = nil, numHosts = nil, numEffectiveHosts = nil, overallStatus = nil, currentFailoverLevel = nil, admissionControlInfo = nil, numVmotions = nil, targetBalance = nil, currentBalance = nil, currentEVCModeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @totalCpu = totalCpu
    @totalMemory = totalMemory
    @numCpuCores = numCpuCores
    @numCpuThreads = numCpuThreads
    @effectiveCpu = effectiveCpu
    @effectiveMemory = effectiveMemory
    @numHosts = numHosts
    @numEffectiveHosts = numEffectiveHosts
    @overallStatus = overallStatus
    @currentFailoverLevel = currentFailoverLevel
    @admissionControlInfo = admissionControlInfo
    @numVmotions = numVmotions
    @targetBalance = targetBalance
    @currentBalance = currentBalance
    @currentEVCModeKey = currentEVCModeKey
  end
end

# {urn:vim25}ComputeResourceConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmSwapPlacement - SOAP::SOAPString
class ComputeResourceConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmSwapPlacement

  def initialize(dynamicType = nil, dynamicProperty = [], vmSwapPlacement = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmSwapPlacement = vmSwapPlacement
  end
end

# {urn:vim25}ClusterConfigInfoEx
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmSwapPlacement - SOAP::SOAPString
#   dasConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasConfigInfo
#   dasVmConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasVmConfigInfo
#   drsConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsConfigInfo
#   drsVmConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsVmConfigInfo
#   rule - Bosh::Director::CloudProviders::VSphere::ClusterRuleInfo
#   dpmConfigInfo - Bosh::Director::CloudProviders::VSphere::ClusterDpmConfigInfo
#   dpmHostConfig - Bosh::Director::CloudProviders::VSphere::ClusterDpmHostConfigInfo
#   group - Bosh::Director::CloudProviders::VSphere::ClusterGroupInfo
class ClusterConfigInfoEx < ComputeResourceConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmSwapPlacement
  attr_accessor :dasConfig
  attr_accessor :dasVmConfig
  attr_accessor :drsConfig
  attr_accessor :drsVmConfig
  attr_accessor :rule
  attr_accessor :dpmConfigInfo
  attr_accessor :dpmHostConfig
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], vmSwapPlacement = nil, dasConfig = nil, dasVmConfig = [], drsConfig = nil, drsVmConfig = [], rule = [], dpmConfigInfo = nil, dpmHostConfig = [], group = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmSwapPlacement = vmSwapPlacement
    @dasConfig = dasConfig
    @dasVmConfig = dasVmConfig
    @drsConfig = drsConfig
    @drsVmConfig = drsVmConfig
    @rule = rule
    @dpmConfigInfo = dpmConfigInfo
    @dpmHostConfig = dpmHostConfig
    @group = group
  end
end

# {urn:vim25}ComputeResourceConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmSwapPlacement - SOAP::SOAPString
class ComputeResourceConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmSwapPlacement

  def initialize(dynamicType = nil, dynamicProperty = [], vmSwapPlacement = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmSwapPlacement = vmSwapPlacement
  end
end

# {urn:vim25}ClusterConfigSpecEx
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmSwapPlacement - SOAP::SOAPString
#   dasConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasConfigInfo
#   dasVmConfigSpec - Bosh::Director::CloudProviders::VSphere::ClusterDasVmConfigSpec
#   drsConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsConfigInfo
#   drsVmConfigSpec - Bosh::Director::CloudProviders::VSphere::ClusterDrsVmConfigSpec
#   rulesSpec - Bosh::Director::CloudProviders::VSphere::ClusterRuleSpec
#   dpmConfig - Bosh::Director::CloudProviders::VSphere::ClusterDpmConfigInfo
#   dpmHostConfigSpec - Bosh::Director::CloudProviders::VSphere::ClusterDpmHostConfigSpec
#   groupSpec - Bosh::Director::CloudProviders::VSphere::ClusterGroupSpec
class ClusterConfigSpecEx < ComputeResourceConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmSwapPlacement
  attr_accessor :dasConfig
  attr_accessor :dasVmConfigSpec
  attr_accessor :drsConfig
  attr_accessor :drsVmConfigSpec
  attr_accessor :rulesSpec
  attr_accessor :dpmConfig
  attr_accessor :dpmHostConfigSpec
  attr_accessor :groupSpec

  def initialize(dynamicType = nil, dynamicProperty = [], vmSwapPlacement = nil, dasConfig = nil, dasVmConfigSpec = [], drsConfig = nil, drsVmConfigSpec = [], rulesSpec = [], dpmConfig = nil, dpmHostConfigSpec = [], groupSpec = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmSwapPlacement = vmSwapPlacement
    @dasConfig = dasConfig
    @dasVmConfigSpec = dasVmConfigSpec
    @drsConfig = drsConfig
    @drsVmConfigSpec = drsVmConfigSpec
    @rulesSpec = rulesSpec
    @dpmConfig = dpmConfig
    @dpmHostConfigSpec = dpmHostConfigSpec
    @groupSpec = groupSpec
  end
end

# {urn:vim25}CustomFieldDef
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   type - SOAP::SOAPString
#   managedObjectType - SOAP::SOAPString
#   fieldDefPrivileges - Bosh::Director::CloudProviders::VSphere::PrivilegePolicyDef
#   fieldInstancePrivileges - Bosh::Director::CloudProviders::VSphere::PrivilegePolicyDef
class CustomFieldDef < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :type
  attr_accessor :managedObjectType
  attr_accessor :fieldDefPrivileges
  attr_accessor :fieldInstancePrivileges

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, type = nil, managedObjectType = nil, fieldDefPrivileges = nil, fieldInstancePrivileges = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @type = type
    @managedObjectType = managedObjectType
    @fieldDefPrivileges = fieldDefPrivileges
    @fieldInstancePrivileges = fieldInstancePrivileges
  end
end

# {urn:vim25}CustomFieldValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
class CustomFieldValue < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
  end
end

# {urn:vim25}CustomFieldStringValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   value - SOAP::SOAPString
class CustomFieldStringValue < CustomFieldValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}CustomizationSpecInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   type - SOAP::SOAPString
#   changeVersion - SOAP::SOAPString
#   lastUpdateTime - SOAP::SOAPDateTime
class CustomizationSpecInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description
  attr_accessor :type
  attr_accessor :changeVersion
  attr_accessor :lastUpdateTime

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil, type = nil, changeVersion = nil, lastUpdateTime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
    @type = type
    @changeVersion = changeVersion
    @lastUpdateTime = lastUpdateTime
  end
end

# {urn:vim25}CustomizationSpecItem
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   info - Bosh::Director::CloudProviders::VSphere::CustomizationSpecInfo
#   spec - Bosh::Director::CloudProviders::VSphere::CustomizationSpec
class CustomizationSpecItem < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :info
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], info = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @info = info
    @spec = spec
  end
end

# {urn:vim25}DatastoreSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   freeSpace - SOAP::SOAPLong
#   uncommitted - SOAP::SOAPLong
#   accessible - SOAP::SOAPBoolean
#   multipleHostAccess - SOAP::SOAPBoolean
#   type - SOAP::SOAPString
class DatastoreSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :datastore
  attr_accessor :name
  attr_accessor :url
  attr_accessor :capacity
  attr_accessor :freeSpace
  attr_accessor :uncommitted
  attr_accessor :accessible
  attr_accessor :multipleHostAccess
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], datastore = nil, name = nil, url = nil, capacity = nil, freeSpace = nil, uncommitted = nil, accessible = nil, multipleHostAccess = nil, type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @datastore = datastore
    @name = name
    @url = url
    @capacity = capacity
    @freeSpace = freeSpace
    @uncommitted = uncommitted
    @accessible = accessible
    @multipleHostAccess = multipleHostAccess
    @type = type
  end
end

# {urn:vim25}DatastoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
#   freeSpace - SOAP::SOAPLong
#   maxFileSize - SOAP::SOAPLong
#   timestamp - SOAP::SOAPDateTime
class DatastoreInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :url
  attr_accessor :freeSpace
  attr_accessor :maxFileSize
  attr_accessor :timestamp

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, url = nil, freeSpace = nil, maxFileSize = nil, timestamp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @url = url
    @freeSpace = freeSpace
    @maxFileSize = maxFileSize
    @timestamp = timestamp
  end
end

# {urn:vim25}VmfsDatastoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
#   freeSpace - SOAP::SOAPLong
#   maxFileSize - SOAP::SOAPLong
#   timestamp - SOAP::SOAPDateTime
#   vmfs - Bosh::Director::CloudProviders::VSphere::HostVmfsVolume
class VmfsDatastoreInfo < DatastoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :url
  attr_accessor :freeSpace
  attr_accessor :maxFileSize
  attr_accessor :timestamp
  attr_accessor :vmfs

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, url = nil, freeSpace = nil, maxFileSize = nil, timestamp = nil, vmfs = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @url = url
    @freeSpace = freeSpace
    @maxFileSize = maxFileSize
    @timestamp = timestamp
    @vmfs = vmfs
  end
end

# {urn:vim25}NasDatastoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
#   freeSpace - SOAP::SOAPLong
#   maxFileSize - SOAP::SOAPLong
#   timestamp - SOAP::SOAPDateTime
#   nas - Bosh::Director::CloudProviders::VSphere::HostNasVolume
class NasDatastoreInfo < DatastoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :url
  attr_accessor :freeSpace
  attr_accessor :maxFileSize
  attr_accessor :timestamp
  attr_accessor :nas

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, url = nil, freeSpace = nil, maxFileSize = nil, timestamp = nil, nas = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @url = url
    @freeSpace = freeSpace
    @maxFileSize = maxFileSize
    @timestamp = timestamp
    @nas = nas
  end
end

# {urn:vim25}LocalDatastoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
#   freeSpace - SOAP::SOAPLong
#   maxFileSize - SOAP::SOAPLong
#   timestamp - SOAP::SOAPDateTime
#   path - SOAP::SOAPString
class LocalDatastoreInfo < DatastoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :url
  attr_accessor :freeSpace
  attr_accessor :maxFileSize
  attr_accessor :timestamp
  attr_accessor :path

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, url = nil, freeSpace = nil, maxFileSize = nil, timestamp = nil, path = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @url = url
    @freeSpace = freeSpace
    @maxFileSize = maxFileSize
    @timestamp = timestamp
    @path = path
  end
end

# {urn:vim25}DatastoreCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   directoryHierarchySupported - SOAP::SOAPBoolean
#   rawDiskMappingsSupported - SOAP::SOAPBoolean
#   perFileThinProvisioningSupported - SOAP::SOAPBoolean
#   storageIORMSupported - SOAP::SOAPBoolean
class DatastoreCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :directoryHierarchySupported
  attr_accessor :rawDiskMappingsSupported
  attr_accessor :perFileThinProvisioningSupported
  attr_accessor :storageIORMSupported

  def initialize(dynamicType = nil, dynamicProperty = [], directoryHierarchySupported = nil, rawDiskMappingsSupported = nil, perFileThinProvisioningSupported = nil, storageIORMSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @directoryHierarchySupported = directoryHierarchySupported
    @rawDiskMappingsSupported = rawDiskMappingsSupported
    @perFileThinProvisioningSupported = perFileThinProvisioningSupported
    @storageIORMSupported = storageIORMSupported
  end
end

# {urn:vim25}DatastoreHostMount
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   mountInfo - Bosh::Director::CloudProviders::VSphere::HostMountInfo
class DatastoreHostMount < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :mountInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, mountInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @mountInfo = mountInfo
  end
end

# {urn:vim25}DatastoreMountPathDatastorePair
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   oldMountPath - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatastoreMountPathDatastorePair < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :oldMountPath
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], oldMountPath = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @oldMountPath = oldMountPath
    @datastore = datastore
  end
end

# {urn:vim25}Description
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
class Description < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
  end
end

# {urn:vim25}ElementDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
class ElementDescription < Description
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
  end
end

# {urn:vim25}EVCMode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
#   guaranteedCPUFeatures - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
#   vendor - SOAP::SOAPString
#   track - SOAP::SOAPString
#   vendorTier - SOAP::SOAPInt
class EVCMode < ElementDescription
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key
  attr_accessor :guaranteedCPUFeatures
  attr_accessor :vendor
  attr_accessor :track
  attr_accessor :vendorTier

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil, guaranteedCPUFeatures = [], vendor = nil, track = [], vendorTier = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
    @guaranteedCPUFeatures = guaranteedCPUFeatures
    @vendor = vendor
    @track = track
    @vendorTier = vendorTier
  end
end

# {urn:vim25}ExtendedElementDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
#   messageCatalogKeyPrefix - SOAP::SOAPString
#   messageArg - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class ExtendedElementDescription < ElementDescription
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key
  attr_accessor :messageCatalogKeyPrefix
  attr_accessor :messageArg

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil, messageCatalogKeyPrefix = nil, messageArg = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
    @messageCatalogKeyPrefix = messageCatalogKeyPrefix
    @messageArg = messageArg
  end
end

# {urn:vim25}OptionDef
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
#   optionType - Bosh::Director::CloudProviders::VSphere::OptionType
class OptionDef < ElementDescription
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key
  attr_accessor :optionType

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil, optionType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
    @optionType = optionType
  end
end

# {urn:vim25}ExtendedDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   messageCatalogKeyPrefix - SOAP::SOAPString
#   messageArg - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class ExtendedDescription < Description
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :messageCatalogKeyPrefix
  attr_accessor :messageArg

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, messageCatalogKeyPrefix = nil, messageArg = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @messageCatalogKeyPrefix = messageCatalogKeyPrefix
    @messageArg = messageArg
  end
end

# {urn:vim25}MethodDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
class MethodDescription < Description
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
  end
end

# {urn:vim25}TypeDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
class TypeDescription < Description
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
  end
end

# {urn:vim25}ScheduledTaskDetail
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   label - SOAP::SOAPString
#   summary - SOAP::SOAPString
#   key - SOAP::SOAPString
#   frequency - SOAP::SOAPString
class ScheduledTaskDetail < TypeDescription
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :label
  attr_accessor :summary
  attr_accessor :key
  attr_accessor :frequency

  def initialize(dynamicType = nil, dynamicProperty = [], label = nil, summary = nil, key = nil, frequency = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @label = label
    @summary = summary
    @key = key
    @frequency = frequency
  end
end

# {urn:vim25}DiagnosticManagerLogDescriptor
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   fileName - SOAP::SOAPString
#   creator - SOAP::SOAPString
#   format - SOAP::SOAPString
#   mimeType - SOAP::SOAPString
#   info - Bosh::Director::CloudProviders::VSphere::Description
class DiagnosticManagerLogDescriptor < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :fileName
  attr_accessor :creator
  attr_accessor :format
  attr_accessor :mimeType
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, fileName = nil, creator = nil, format = nil, mimeType = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @fileName = fileName
    @creator = creator
    @format = format
    @mimeType = mimeType
    @info = info
  end
end

# {urn:vim25}DiagnosticManagerLogHeader
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   lineStart - SOAP::SOAPInt
#   lineEnd - SOAP::SOAPInt
#   lineText - SOAP::SOAPString
class DiagnosticManagerLogHeader < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :lineStart
  attr_accessor :lineEnd
  attr_accessor :lineText

  def initialize(dynamicType = nil, dynamicProperty = [], lineStart = nil, lineEnd = nil, lineText = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @lineStart = lineStart
    @lineEnd = lineEnd
    @lineText = lineText
  end
end

# {urn:vim25}DiagnosticManagerBundleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   system - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   url - SOAP::SOAPString
class DiagnosticManagerBundleInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :system
  attr_accessor :url

  def initialize(dynamicType = nil, dynamicProperty = [], system = nil, url = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @system = system
    @url = url
  end
end

# {urn:vim25}DVSContactInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   contact - SOAP::SOAPString
class DVSContactInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :contact

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, contact = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @contact = contact
  end
end

# {urn:vim25}DVSFeatureCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   networkResourceManagementSupported - SOAP::SOAPBoolean
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
#   nicTeamingPolicy - SOAP::SOAPString
#   networkResourcePoolHighShareValue - SOAP::SOAPInt
class DVSFeatureCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :networkResourceManagementSupported
  attr_accessor :vmDirectPathGen2Supported
  attr_accessor :nicTeamingPolicy
  attr_accessor :networkResourcePoolHighShareValue

  def initialize(dynamicType = nil, dynamicProperty = [], networkResourceManagementSupported = nil, vmDirectPathGen2Supported = nil, nicTeamingPolicy = [], networkResourcePoolHighShareValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @networkResourceManagementSupported = networkResourceManagementSupported
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
    @nicTeamingPolicy = nicTeamingPolicy
    @networkResourcePoolHighShareValue = networkResourcePoolHighShareValue
  end
end

# {urn:vim25}VMwareDVSFeatureCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   networkResourceManagementSupported - SOAP::SOAPBoolean
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
#   nicTeamingPolicy - SOAP::SOAPString
#   networkResourcePoolHighShareValue - SOAP::SOAPInt
class VMwareDVSFeatureCapability < DVSFeatureCapability
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :networkResourceManagementSupported
  attr_accessor :vmDirectPathGen2Supported
  attr_accessor :nicTeamingPolicy
  attr_accessor :networkResourcePoolHighShareValue

  def initialize(dynamicType = nil, dynamicProperty = [], networkResourceManagementSupported = nil, vmDirectPathGen2Supported = nil, nicTeamingPolicy = [], networkResourcePoolHighShareValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @networkResourceManagementSupported = networkResourceManagementSupported
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
    @nicTeamingPolicy = nicTeamingPolicy
    @networkResourcePoolHighShareValue = networkResourcePoolHighShareValue
  end
end

# {urn:vim25}DVSCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dvsOperationSupported - SOAP::SOAPBoolean
#   dvPortGroupOperationSupported - SOAP::SOAPBoolean
#   dvPortOperationSupported - SOAP::SOAPBoolean
#   compatibleHostComponentProductInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostProductSpec
#   featuresSupported - Bosh::Director::CloudProviders::VSphere::DVSFeatureCapability
class DVSCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dvsOperationSupported
  attr_accessor :dvPortGroupOperationSupported
  attr_accessor :dvPortOperationSupported
  attr_accessor :compatibleHostComponentProductInfo
  attr_accessor :featuresSupported

  def initialize(dynamicType = nil, dynamicProperty = [], dvsOperationSupported = nil, dvPortGroupOperationSupported = nil, dvPortOperationSupported = nil, compatibleHostComponentProductInfo = [], featuresSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dvsOperationSupported = dvsOperationSupported
    @dvPortGroupOperationSupported = dvPortGroupOperationSupported
    @dvPortOperationSupported = dvPortOperationSupported
    @compatibleHostComponentProductInfo = compatibleHostComponentProductInfo
    @featuresSupported = featuresSupported
  end
end

# {urn:vim25}DVSSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   numPorts - SOAP::SOAPInt
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   hostMember - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portgroupName - SOAP::SOAPString
#   description - SOAP::SOAPString
#   contact - Bosh::Director::CloudProviders::VSphere::DVSContactInfo
class DVSSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :uuid
  attr_accessor :numPorts
  attr_accessor :productInfo
  attr_accessor :hostMember
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :portgroupName
  attr_accessor :description
  attr_accessor :contact

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, uuid = nil, numPorts = nil, productInfo = nil, hostMember = [], vm = [], host = [], portgroupName = [], description = nil, contact = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @uuid = uuid
    @numPorts = numPorts
    @productInfo = productInfo
    @hostMember = hostMember
    @vm = vm
    @host = host
    @portgroupName = portgroupName
    @description = description
    @contact = contact
  end
end

# {urn:vim25}DVSPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   autoPreInstallAllowed - SOAP::SOAPBoolean
#   autoUpgradeAllowed - SOAP::SOAPBoolean
#   partialUpgradeAllowed - SOAP::SOAPBoolean
class DVSPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :autoPreInstallAllowed
  attr_accessor :autoUpgradeAllowed
  attr_accessor :partialUpgradeAllowed

  def initialize(dynamicType = nil, dynamicProperty = [], autoPreInstallAllowed = nil, autoUpgradeAllowed = nil, partialUpgradeAllowed = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @autoPreInstallAllowed = autoPreInstallAllowed
    @autoUpgradeAllowed = autoUpgradeAllowed
    @partialUpgradeAllowed = partialUpgradeAllowed
  end
end

# {urn:vim25}DVSUplinkPortPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class DVSUplinkPortPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}DVSNameArrayUplinkPortPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   uplinkPortName - SOAP::SOAPString
class DVSNameArrayUplinkPortPolicy < DVSUplinkPortPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :uplinkPortName

  def initialize(dynamicType = nil, dynamicProperty = [], uplinkPortName = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @uplinkPortName = uplinkPortName
  end
end

# {urn:vim25}DVSConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configVersion - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numStandalonePorts - SOAP::SOAPInt
#   maxPorts - SOAP::SOAPInt
#   uplinkPortPolicy - Bosh::Director::CloudProviders::VSphere::DVSUplinkPortPolicy
#   uplinkPortgroup - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   host - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberConfigSpec
#   extensionKey - SOAP::SOAPString
#   description - SOAP::SOAPString
#   policy - Bosh::Director::CloudProviders::VSphere::DVSPolicy
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   contact - Bosh::Director::CloudProviders::VSphere::DVSContactInfo
class DVSConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configVersion
  attr_accessor :name
  attr_accessor :numStandalonePorts
  attr_accessor :maxPorts
  attr_accessor :uplinkPortPolicy
  attr_accessor :uplinkPortgroup
  attr_accessor :defaultPortConfig
  attr_accessor :host
  attr_accessor :extensionKey
  attr_accessor :description
  attr_accessor :policy
  attr_accessor :vendorSpecificConfig
  attr_accessor :contact

  def initialize(dynamicType = nil, dynamicProperty = [], configVersion = nil, name = nil, numStandalonePorts = nil, maxPorts = nil, uplinkPortPolicy = nil, uplinkPortgroup = [], defaultPortConfig = nil, host = [], extensionKey = nil, description = nil, policy = nil, vendorSpecificConfig = [], contact = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configVersion = configVersion
    @name = name
    @numStandalonePorts = numStandalonePorts
    @maxPorts = maxPorts
    @uplinkPortPolicy = uplinkPortPolicy
    @uplinkPortgroup = uplinkPortgroup
    @defaultPortConfig = defaultPortConfig
    @host = host
    @extensionKey = extensionKey
    @description = description
    @policy = policy
    @vendorSpecificConfig = vendorSpecificConfig
    @contact = contact
  end
end

# {urn:vim25}VMwareDVSConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configVersion - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numStandalonePorts - SOAP::SOAPInt
#   maxPorts - SOAP::SOAPInt
#   uplinkPortPolicy - Bosh::Director::CloudProviders::VSphere::DVSUplinkPortPolicy
#   uplinkPortgroup - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   host - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberConfigSpec
#   extensionKey - SOAP::SOAPString
#   description - SOAP::SOAPString
#   policy - Bosh::Director::CloudProviders::VSphere::DVSPolicy
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   contact - Bosh::Director::CloudProviders::VSphere::DVSContactInfo
#   pvlanConfigSpec - Bosh::Director::CloudProviders::VSphere::VMwareDVSPvlanConfigSpec
#   maxMtu - SOAP::SOAPInt
#   linkDiscoveryProtocolConfig - Bosh::Director::CloudProviders::VSphere::LinkDiscoveryProtocolConfig
class VMwareDVSConfigSpec < DVSConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configVersion
  attr_accessor :name
  attr_accessor :numStandalonePorts
  attr_accessor :maxPorts
  attr_accessor :uplinkPortPolicy
  attr_accessor :uplinkPortgroup
  attr_accessor :defaultPortConfig
  attr_accessor :host
  attr_accessor :extensionKey
  attr_accessor :description
  attr_accessor :policy
  attr_accessor :vendorSpecificConfig
  attr_accessor :contact
  attr_accessor :pvlanConfigSpec
  attr_accessor :maxMtu
  attr_accessor :linkDiscoveryProtocolConfig

  def initialize(dynamicType = nil, dynamicProperty = [], configVersion = nil, name = nil, numStandalonePorts = nil, maxPorts = nil, uplinkPortPolicy = nil, uplinkPortgroup = [], defaultPortConfig = nil, host = [], extensionKey = nil, description = nil, policy = nil, vendorSpecificConfig = [], contact = nil, pvlanConfigSpec = [], maxMtu = nil, linkDiscoveryProtocolConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configVersion = configVersion
    @name = name
    @numStandalonePorts = numStandalonePorts
    @maxPorts = maxPorts
    @uplinkPortPolicy = uplinkPortPolicy
    @uplinkPortgroup = uplinkPortgroup
    @defaultPortConfig = defaultPortConfig
    @host = host
    @extensionKey = extensionKey
    @description = description
    @policy = policy
    @vendorSpecificConfig = vendorSpecificConfig
    @contact = contact
    @pvlanConfigSpec = pvlanConfigSpec
    @maxMtu = maxMtu
    @linkDiscoveryProtocolConfig = linkDiscoveryProtocolConfig
  end
end

# {urn:vim25}DVSCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configSpec - Bosh::Director::CloudProviders::VSphere::DVSConfigSpec
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   capability - Bosh::Director::CloudProviders::VSphere::DVSCapability
class DVSCreateSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configSpec
  attr_accessor :productInfo
  attr_accessor :capability

  def initialize(dynamicType = nil, dynamicProperty = [], configSpec = nil, productInfo = nil, capability = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configSpec = configSpec
    @productInfo = productInfo
    @capability = capability
  end
end

# {urn:vim25}DVSConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   uuid - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numStandalonePorts - SOAP::SOAPInt
#   numPorts - SOAP::SOAPInt
#   maxPorts - SOAP::SOAPInt
#   uplinkPortPolicy - Bosh::Director::CloudProviders::VSphere::DVSUplinkPortPolicy
#   uplinkPortgroup - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   host - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMember
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   targetInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   extensionKey - SOAP::SOAPString
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   policy - Bosh::Director::CloudProviders::VSphere::DVSPolicy
#   description - SOAP::SOAPString
#   configVersion - SOAP::SOAPString
#   contact - Bosh::Director::CloudProviders::VSphere::DVSContactInfo
#   createTime - SOAP::SOAPDateTime
#   networkResourceManagementEnabled - SOAP::SOAPBoolean
class DVSConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :uuid
  attr_accessor :name
  attr_accessor :numStandalonePorts
  attr_accessor :numPorts
  attr_accessor :maxPorts
  attr_accessor :uplinkPortPolicy
  attr_accessor :uplinkPortgroup
  attr_accessor :defaultPortConfig
  attr_accessor :host
  attr_accessor :productInfo
  attr_accessor :targetInfo
  attr_accessor :extensionKey
  attr_accessor :vendorSpecificConfig
  attr_accessor :policy
  attr_accessor :description
  attr_accessor :configVersion
  attr_accessor :contact
  attr_accessor :createTime
  attr_accessor :networkResourceManagementEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], uuid = nil, name = nil, numStandalonePorts = nil, numPorts = nil, maxPorts = nil, uplinkPortPolicy = nil, uplinkPortgroup = [], defaultPortConfig = nil, host = [], productInfo = nil, targetInfo = nil, extensionKey = nil, vendorSpecificConfig = [], policy = nil, description = nil, configVersion = nil, contact = nil, createTime = nil, networkResourceManagementEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @uuid = uuid
    @name = name
    @numStandalonePorts = numStandalonePorts
    @numPorts = numPorts
    @maxPorts = maxPorts
    @uplinkPortPolicy = uplinkPortPolicy
    @uplinkPortgroup = uplinkPortgroup
    @defaultPortConfig = defaultPortConfig
    @host = host
    @productInfo = productInfo
    @targetInfo = targetInfo
    @extensionKey = extensionKey
    @vendorSpecificConfig = vendorSpecificConfig
    @policy = policy
    @description = description
    @configVersion = configVersion
    @contact = contact
    @createTime = createTime
    @networkResourceManagementEnabled = networkResourceManagementEnabled
  end
end

# {urn:vim25}VMwareDVSConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   uuid - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numStandalonePorts - SOAP::SOAPInt
#   numPorts - SOAP::SOAPInt
#   maxPorts - SOAP::SOAPInt
#   uplinkPortPolicy - Bosh::Director::CloudProviders::VSphere::DVSUplinkPortPolicy
#   uplinkPortgroup - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   host - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMember
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   targetInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   extensionKey - SOAP::SOAPString
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   policy - Bosh::Director::CloudProviders::VSphere::DVSPolicy
#   description - SOAP::SOAPString
#   configVersion - SOAP::SOAPString
#   contact - Bosh::Director::CloudProviders::VSphere::DVSContactInfo
#   createTime - SOAP::SOAPDateTime
#   networkResourceManagementEnabled - SOAP::SOAPBoolean
#   pvlanConfig - Bosh::Director::CloudProviders::VSphere::VMwareDVSPvlanMapEntry
#   maxMtu - SOAP::SOAPInt
#   linkDiscoveryProtocolConfig - Bosh::Director::CloudProviders::VSphere::LinkDiscoveryProtocolConfig
class VMwareDVSConfigInfo < DVSConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :uuid
  attr_accessor :name
  attr_accessor :numStandalonePorts
  attr_accessor :numPorts
  attr_accessor :maxPorts
  attr_accessor :uplinkPortPolicy
  attr_accessor :uplinkPortgroup
  attr_accessor :defaultPortConfig
  attr_accessor :host
  attr_accessor :productInfo
  attr_accessor :targetInfo
  attr_accessor :extensionKey
  attr_accessor :vendorSpecificConfig
  attr_accessor :policy
  attr_accessor :description
  attr_accessor :configVersion
  attr_accessor :contact
  attr_accessor :createTime
  attr_accessor :networkResourceManagementEnabled
  attr_accessor :pvlanConfig
  attr_accessor :maxMtu
  attr_accessor :linkDiscoveryProtocolConfig

  def initialize(dynamicType = nil, dynamicProperty = [], uuid = nil, name = nil, numStandalonePorts = nil, numPorts = nil, maxPorts = nil, uplinkPortPolicy = nil, uplinkPortgroup = [], defaultPortConfig = nil, host = [], productInfo = nil, targetInfo = nil, extensionKey = nil, vendorSpecificConfig = [], policy = nil, description = nil, configVersion = nil, contact = nil, createTime = nil, networkResourceManagementEnabled = nil, pvlanConfig = [], maxMtu = nil, linkDiscoveryProtocolConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @uuid = uuid
    @name = name
    @numStandalonePorts = numStandalonePorts
    @numPorts = numPorts
    @maxPorts = maxPorts
    @uplinkPortPolicy = uplinkPortPolicy
    @uplinkPortgroup = uplinkPortgroup
    @defaultPortConfig = defaultPortConfig
    @host = host
    @productInfo = productInfo
    @targetInfo = targetInfo
    @extensionKey = extensionKey
    @vendorSpecificConfig = vendorSpecificConfig
    @policy = policy
    @description = description
    @configVersion = configVersion
    @contact = contact
    @createTime = createTime
    @networkResourceManagementEnabled = networkResourceManagementEnabled
    @pvlanConfig = pvlanConfig
    @maxMtu = maxMtu
    @linkDiscoveryProtocolConfig = linkDiscoveryProtocolConfig
  end
end

# {urn:vim25}EnumDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   tags - Bosh::Director::CloudProviders::VSphere::ElementDescription
class EnumDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :tags

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, tags = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @tags = tags
  end
end

# {urn:vim25}ExtensionServerInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   url - SOAP::SOAPString
#   description - Bosh::Director::CloudProviders::VSphere::Description
#   company - SOAP::SOAPString
#   type - SOAP::SOAPString
#   adminEmail - SOAP::SOAPString
#   serverThumbprint - SOAP::SOAPString
class ExtensionServerInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :url
  attr_accessor :description
  attr_accessor :company
  attr_accessor :type
  attr_accessor :adminEmail
  attr_accessor :serverThumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], url = nil, description = nil, company = nil, type = nil, adminEmail = [], serverThumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @url = url
    @description = description
    @company = company
    @type = type
    @adminEmail = adminEmail
    @serverThumbprint = serverThumbprint
  end
end

# {urn:vim25}ExtensionClientInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   version - SOAP::SOAPString
#   description - Bosh::Director::CloudProviders::VSphere::Description
#   company - SOAP::SOAPString
#   type - SOAP::SOAPString
#   url - SOAP::SOAPString
class ExtensionClientInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :version
  attr_accessor :description
  attr_accessor :company
  attr_accessor :type
  attr_accessor :url

  def initialize(dynamicType = nil, dynamicProperty = [], version = nil, description = nil, company = nil, type = nil, url = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @version = version
    @description = description
    @company = company
    @type = type
    @url = url
  end
end

# {urn:vim25}ExtensionTaskTypeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   taskID - SOAP::SOAPString
class ExtensionTaskTypeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :taskID

  def initialize(dynamicType = nil, dynamicProperty = [], taskID = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @taskID = taskID
  end
end

# {urn:vim25}ExtensionEventTypeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   eventID - SOAP::SOAPString
#   eventTypeSchema - SOAP::SOAPString
class ExtensionEventTypeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :eventID
  attr_accessor :eventTypeSchema

  def initialize(dynamicType = nil, dynamicProperty = [], eventID = nil, eventTypeSchema = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @eventID = eventID
    @eventTypeSchema = eventTypeSchema
  end
end

# {urn:vim25}ExtensionFaultTypeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultID - SOAP::SOAPString
class ExtensionFaultTypeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultID

  def initialize(dynamicType = nil, dynamicProperty = [], faultID = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultID = faultID
  end
end

# {urn:vim25}ExtensionPrivilegeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   privID - SOAP::SOAPString
#   privGroupName - SOAP::SOAPString
class ExtensionPrivilegeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :privID
  attr_accessor :privGroupName

  def initialize(dynamicType = nil, dynamicProperty = [], privID = nil, privGroupName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @privID = privID
    @privGroupName = privGroupName
  end
end

# {urn:vim25}ExtensionResourceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   locale - SOAP::SOAPString
#   m_module - SOAP::SOAPString
#   data - Bosh::Director::CloudProviders::VSphere::KeyValue
class ExtensionResourceInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :locale
  attr_accessor :data

  def m_module
    @v_module
  end

  def m_module=(value)
    @v_module = value
  end

  def initialize(dynamicType = nil, dynamicProperty = [], locale = nil, v_module = nil, data = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @locale = locale
    @v_module = v_module
    @data = data
  end
end

# {urn:vim25}ExtensionHealthInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   url - SOAP::SOAPString
class ExtensionHealthInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :url

  def initialize(dynamicType = nil, dynamicProperty = [], url = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @url = url
  end
end

# {urn:vim25}Extension
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   description - Bosh::Director::CloudProviders::VSphere::Description
#   key - SOAP::SOAPString
#   company - SOAP::SOAPString
#   type - SOAP::SOAPString
#   version - SOAP::SOAPString
#   subjectName - SOAP::SOAPString
#   server - Bosh::Director::CloudProviders::VSphere::ExtensionServerInfo
#   client - Bosh::Director::CloudProviders::VSphere::ExtensionClientInfo
#   taskList - Bosh::Director::CloudProviders::VSphere::ExtensionTaskTypeInfo
#   eventList - Bosh::Director::CloudProviders::VSphere::ExtensionEventTypeInfo
#   faultList - Bosh::Director::CloudProviders::VSphere::ExtensionFaultTypeInfo
#   privilegeList - Bosh::Director::CloudProviders::VSphere::ExtensionPrivilegeInfo
#   resourceList - Bosh::Director::CloudProviders::VSphere::ExtensionResourceInfo
#   lastHeartbeatTime - SOAP::SOAPDateTime
#   healthInfo - Bosh::Director::CloudProviders::VSphere::ExtensionHealthInfo
class Extension < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :description
  attr_accessor :key
  attr_accessor :company
  attr_accessor :type
  attr_accessor :version
  attr_accessor :subjectName
  attr_accessor :server
  attr_accessor :client
  attr_accessor :taskList
  attr_accessor :eventList
  attr_accessor :faultList
  attr_accessor :privilegeList
  attr_accessor :resourceList
  attr_accessor :lastHeartbeatTime
  attr_accessor :healthInfo

  def initialize(dynamicType = nil, dynamicProperty = [], description = nil, key = nil, company = nil, type = nil, version = nil, subjectName = nil, server = [], client = [], taskList = [], eventList = [], faultList = [], privilegeList = [], resourceList = [], lastHeartbeatTime = nil, healthInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @description = description
    @key = key
    @company = company
    @type = type
    @version = version
    @subjectName = subjectName
    @server = server
    @client = client
    @taskList = taskList
    @eventList = eventList
    @faultList = faultList
    @privilegeList = privilegeList
    @resourceList = resourceList
    @lastHeartbeatTime = lastHeartbeatTime
    @healthInfo = healthInfo
  end
end

# {urn:vim25}HostServiceTicket
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   sslThumbprint - SOAP::SOAPString
#   service - SOAP::SOAPString
#   serviceVersion - SOAP::SOAPString
#   sessionId - SOAP::SOAPString
class HostServiceTicket < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :port
  attr_accessor :sslThumbprint
  attr_accessor :service
  attr_accessor :serviceVersion
  attr_accessor :sessionId

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, port = nil, sslThumbprint = nil, service = nil, serviceVersion = nil, sessionId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @port = port
    @sslThumbprint = sslThumbprint
    @service = service
    @serviceVersion = serviceVersion
    @sessionId = sessionId
  end
end

# {urn:vim25}HttpNfcLeaseDatastoreLeaseInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   datastoreKey - SOAP::SOAPString
#   hosts - Bosh::Director::CloudProviders::VSphere::HttpNfcLeaseHostInfo
class HttpNfcLeaseDatastoreLeaseInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :datastoreKey
  attr_accessor :hosts

  def initialize(dynamicType = nil, dynamicProperty = [], datastoreKey = nil, hosts = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @datastoreKey = datastoreKey
    @hosts = hosts
  end
end

# {urn:vim25}HttpNfcLeaseHostInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   url - SOAP::SOAPString
#   sslThumbprint - SOAP::SOAPString
class HttpNfcLeaseHostInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :url
  attr_accessor :sslThumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], url = nil, sslThumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @url = url
    @sslThumbprint = sslThumbprint
  end
end

# {urn:vim25}HttpNfcLeaseInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   lease - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   deviceUrl - Bosh::Director::CloudProviders::VSphere::HttpNfcLeaseDeviceUrl
#   totalDiskCapacityInKB - SOAP::SOAPLong
#   leaseTimeout - SOAP::SOAPInt
#   hostMap - Bosh::Director::CloudProviders::VSphere::HttpNfcLeaseDatastoreLeaseInfo
class HttpNfcLeaseInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :lease
  attr_accessor :entity
  attr_accessor :deviceUrl
  attr_accessor :totalDiskCapacityInKB
  attr_accessor :leaseTimeout
  attr_accessor :hostMap

  def initialize(dynamicType = nil, dynamicProperty = [], lease = nil, entity = nil, deviceUrl = [], totalDiskCapacityInKB = nil, leaseTimeout = nil, hostMap = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @lease = lease
    @entity = entity
    @deviceUrl = deviceUrl
    @totalDiskCapacityInKB = totalDiskCapacityInKB
    @leaseTimeout = leaseTimeout
    @hostMap = hostMap
  end
end

# {urn:vim25}HttpNfcLeaseDeviceUrl
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   importKey - SOAP::SOAPString
#   url - SOAP::SOAPString
#   sslThumbprint - SOAP::SOAPString
#   disk - SOAP::SOAPBoolean
#   targetId - SOAP::SOAPString
#   datastoreKey - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
class HttpNfcLeaseDeviceUrl < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :importKey
  attr_accessor :url
  attr_accessor :sslThumbprint
  attr_accessor :disk
  attr_accessor :targetId
  attr_accessor :datastoreKey
  attr_accessor :fileSize

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, importKey = nil, url = nil, sslThumbprint = nil, disk = nil, targetId = nil, datastoreKey = nil, fileSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @importKey = importKey
    @url = url
    @sslThumbprint = sslThumbprint
    @disk = disk
    @targetId = targetId
    @datastoreKey = datastoreKey
    @fileSize = fileSize
  end
end

# {urn:vim25}HttpNfcLeaseManifestEntry
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   sha1 - SOAP::SOAPString
#   size - SOAP::SOAPLong
#   disk - SOAP::SOAPBoolean
#   capacity - SOAP::SOAPLong
#   populatedSize - SOAP::SOAPLong
class HttpNfcLeaseManifestEntry < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :sha1
  attr_accessor :size
  attr_accessor :disk
  attr_accessor :capacity
  attr_accessor :populatedSize

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, sha1 = nil, size = nil, disk = nil, capacity = nil, populatedSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @sha1 = sha1
    @size = size
    @disk = disk
    @capacity = capacity
    @populatedSize = populatedSize
  end
end

# {urn:vim25}ImportSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entityConfig - Bosh::Director::CloudProviders::VSphere::VAppEntityConfigInfo
class ImportSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entityConfig

  def initialize(dynamicType = nil, dynamicProperty = [], entityConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entityConfig = entityConfig
  end
end

# {urn:vim25}VirtualAppImportSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entityConfig - Bosh::Director::CloudProviders::VSphere::VAppEntityConfigInfo
#   name - SOAP::SOAPString
#   vAppConfigSpec - Bosh::Director::CloudProviders::VSphere::VAppConfigSpec
#   resourcePoolSpec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   child - Bosh::Director::CloudProviders::VSphere::ImportSpec
class VirtualAppImportSpec < ImportSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entityConfig
  attr_accessor :name
  attr_accessor :vAppConfigSpec
  attr_accessor :resourcePoolSpec
  attr_accessor :child

  def initialize(dynamicType = nil, dynamicProperty = [], entityConfig = nil, name = nil, vAppConfigSpec = nil, resourcePoolSpec = nil, child = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entityConfig = entityConfig
    @name = name
    @vAppConfigSpec = vAppConfigSpec
    @resourcePoolSpec = resourcePoolSpec
    @child = child
  end
end

# {urn:vim25}VirtualMachineImportSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entityConfig - Bosh::Director::CloudProviders::VSphere::VAppEntityConfigInfo
#   configSpec - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
#   resPoolEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualMachineImportSpec < ImportSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entityConfig
  attr_accessor :configSpec
  attr_accessor :resPoolEntity

  def initialize(dynamicType = nil, dynamicProperty = [], entityConfig = nil, configSpec = nil, resPoolEntity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entityConfig = entityConfig
    @configSpec = configSpec
    @resPoolEntity = resPoolEntity
  end
end

# {urn:vim25}InheritablePolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
class InheritablePolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
  end
end

# {urn:vim25}BoolPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   value - SOAP::SOAPBoolean
class BoolPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @value = value
  end
end

# {urn:vim25}IntPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   value - SOAP::SOAPInt
class IntPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @value = value
  end
end

# {urn:vim25}LongPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   value - SOAP::SOAPLong
class LongPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @value = value
  end
end

# {urn:vim25}StringPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   value - SOAP::SOAPString
class StringPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @value = value
  end
end

# {urn:vim25}DVSTrafficShapingPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   enabled - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   averageBandwidth - Bosh::Director::CloudProviders::VSphere::LongPolicy
#   peakBandwidth - Bosh::Director::CloudProviders::VSphere::LongPolicy
#   burstSize - Bosh::Director::CloudProviders::VSphere::LongPolicy
class DVSTrafficShapingPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :enabled
  attr_accessor :averageBandwidth
  attr_accessor :peakBandwidth
  attr_accessor :burstSize

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, enabled = nil, averageBandwidth = nil, peakBandwidth = nil, burstSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @enabled = enabled
    @averageBandwidth = averageBandwidth
    @peakBandwidth = peakBandwidth
    @burstSize = burstSize
  end
end

# {urn:vim25}DVSVendorSpecificConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   keyValue - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
class DVSVendorSpecificConfig < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :keyValue

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, keyValue = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @keyValue = keyValue
  end
end

# {urn:vim25}VMwareUplinkPortOrderPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   activeUplinkPort - SOAP::SOAPString
#   standbyUplinkPort - SOAP::SOAPString
class VMwareUplinkPortOrderPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :activeUplinkPort
  attr_accessor :standbyUplinkPort

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, activeUplinkPort = [], standbyUplinkPort = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @activeUplinkPort = activeUplinkPort
    @standbyUplinkPort = standbyUplinkPort
  end
end

# {urn:vim25}DVSFailureCriteria
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   checkSpeed - Bosh::Director::CloudProviders::VSphere::StringPolicy
#   speed - Bosh::Director::CloudProviders::VSphere::IntPolicy
#   checkDuplex - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   fullDuplex - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   checkErrorPercent - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   percentage - Bosh::Director::CloudProviders::VSphere::IntPolicy
#   checkBeacon - Bosh::Director::CloudProviders::VSphere::BoolPolicy
class DVSFailureCriteria < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :checkSpeed
  attr_accessor :speed
  attr_accessor :checkDuplex
  attr_accessor :fullDuplex
  attr_accessor :checkErrorPercent
  attr_accessor :percentage
  attr_accessor :checkBeacon

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, checkSpeed = nil, speed = nil, checkDuplex = nil, fullDuplex = nil, checkErrorPercent = nil, percentage = nil, checkBeacon = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @checkSpeed = checkSpeed
    @speed = speed
    @checkDuplex = checkDuplex
    @fullDuplex = fullDuplex
    @checkErrorPercent = checkErrorPercent
    @percentage = percentage
    @checkBeacon = checkBeacon
  end
end

# {urn:vim25}VmwareUplinkPortTeamingPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::StringPolicy
#   reversePolicy - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   notifySwitches - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   rollingOrder - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   failureCriteria - Bosh::Director::CloudProviders::VSphere::DVSFailureCriteria
#   uplinkPortOrder - Bosh::Director::CloudProviders::VSphere::VMwareUplinkPortOrderPolicy
class VmwareUplinkPortTeamingPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :policy
  attr_accessor :reversePolicy
  attr_accessor :notifySwitches
  attr_accessor :rollingOrder
  attr_accessor :failureCriteria
  attr_accessor :uplinkPortOrder

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, policy = nil, reversePolicy = nil, notifySwitches = nil, rollingOrder = nil, failureCriteria = nil, uplinkPortOrder = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @policy = policy
    @reversePolicy = reversePolicy
    @notifySwitches = notifySwitches
    @rollingOrder = rollingOrder
    @failureCriteria = failureCriteria
    @uplinkPortOrder = uplinkPortOrder
  end
end

# {urn:vim25}VmwareDistributedVirtualSwitchVlanSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
class VmwareDistributedVirtualSwitchVlanSpec < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
  end
end

# {urn:vim25}VmwareDistributedVirtualSwitchPvlanSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   pvlanId - SOAP::SOAPInt
class VmwareDistributedVirtualSwitchPvlanSpec < VmwareDistributedVirtualSwitchVlanSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :pvlanId

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, pvlanId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @pvlanId = pvlanId
  end
end

# {urn:vim25}VmwareDistributedVirtualSwitchVlanIdSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   vlanId - SOAP::SOAPInt
class VmwareDistributedVirtualSwitchVlanIdSpec < VmwareDistributedVirtualSwitchVlanSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :vlanId

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, vlanId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @vlanId = vlanId
  end
end

# {urn:vim25}VmwareDistributedVirtualSwitchTrunkVlanSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   vlanId - Bosh::Director::CloudProviders::VSphere::NumericRange
class VmwareDistributedVirtualSwitchTrunkVlanSpec < VmwareDistributedVirtualSwitchVlanSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :vlanId

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, vlanId = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @vlanId = vlanId
  end
end

# {urn:vim25}DVSSecurityPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inherited - SOAP::SOAPBoolean
#   allowPromiscuous - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   macChanges - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   forgedTransmits - Bosh::Director::CloudProviders::VSphere::BoolPolicy
class DVSSecurityPolicy < InheritablePolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inherited
  attr_accessor :allowPromiscuous
  attr_accessor :macChanges
  attr_accessor :forgedTransmits

  def initialize(dynamicType = nil, dynamicProperty = [], inherited = nil, allowPromiscuous = nil, macChanges = nil, forgedTransmits = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inherited = inherited
    @allowPromiscuous = allowPromiscuous
    @macChanges = macChanges
    @forgedTransmits = forgedTransmits
  end
end

# {urn:vim25}KeyValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - SOAP::SOAPString
class KeyValue < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}LicenseAssignmentManagerLicenseAssignment
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entityId - SOAP::SOAPString
#   scope - SOAP::SOAPString
#   entityDisplayName - SOAP::SOAPString
#   assignedLicense - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
#   properties - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class LicenseAssignmentManagerLicenseAssignment < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entityId
  attr_accessor :scope
  attr_accessor :entityDisplayName
  attr_accessor :assignedLicense
  attr_accessor :properties

  def initialize(dynamicType = nil, dynamicProperty = [], entityId = nil, scope = nil, entityDisplayName = nil, assignedLicense = nil, properties = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entityId = entityId
    @scope = scope
    @entityDisplayName = entityDisplayName
    @assignedLicense = assignedLicense
    @properties = properties
  end
end

# {urn:vim25}LicenseSource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class LicenseSource < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}LicenseServerSource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   licenseServer - SOAP::SOAPString
class LicenseServerSource < LicenseSource
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :licenseServer

  def initialize(dynamicType = nil, dynamicProperty = [], licenseServer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @licenseServer = licenseServer
  end
end

# {urn:vim25}LocalLicenseSource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   licenseKeys - SOAP::SOAPString
class LocalLicenseSource < LicenseSource
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :licenseKeys

  def initialize(dynamicType = nil, dynamicProperty = [], licenseKeys = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @licenseKeys = licenseKeys
  end
end

# {urn:vim25}EvaluationLicenseSource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   remainingHours - SOAP::SOAPLong
class EvaluationLicenseSource < LicenseSource
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :remainingHours

  def initialize(dynamicType = nil, dynamicProperty = [], remainingHours = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @remainingHours = remainingHours
  end
end

# {urn:vim25}LicenseFeatureInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   featureName - SOAP::SOAPString
#   featureDescription - SOAP::SOAPString
#   state - Bosh::Director::CloudProviders::VSphere::LicenseFeatureInfoState
#   costUnit - SOAP::SOAPString
#   sourceRestriction - SOAP::SOAPString
#   dependentKey - SOAP::SOAPString
#   edition - SOAP::SOAPBoolean
#   expiresOn - SOAP::SOAPDateTime
class LicenseFeatureInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :featureName
  attr_accessor :featureDescription
  attr_accessor :state
  attr_accessor :costUnit
  attr_accessor :sourceRestriction
  attr_accessor :dependentKey
  attr_accessor :edition
  attr_accessor :expiresOn

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, featureName = nil, featureDescription = nil, state = nil, costUnit = nil, sourceRestriction = nil, dependentKey = [], edition = nil, expiresOn = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @featureName = featureName
    @featureDescription = featureDescription
    @state = state
    @costUnit = costUnit
    @sourceRestriction = sourceRestriction
    @dependentKey = dependentKey
    @edition = edition
    @expiresOn = expiresOn
  end
end

# {urn:vim25}LicenseReservationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   state - Bosh::Director::CloudProviders::VSphere::LicenseReservationInfoState
#   required - SOAP::SOAPInt
class LicenseReservationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :state
  attr_accessor :required

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, state = nil, required = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @state = state
    @required = required
  end
end

# {urn:vim25}LicenseAvailabilityInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   feature - Bosh::Director::CloudProviders::VSphere::LicenseFeatureInfo
#   total - SOAP::SOAPInt
#   available - SOAP::SOAPInt
class LicenseAvailabilityInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :feature
  attr_accessor :total
  attr_accessor :available

  def initialize(dynamicType = nil, dynamicProperty = [], feature = nil, total = nil, available = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @feature = feature
    @total = total
    @available = available
  end
end

# {urn:vim25}LicenseDiagnostics
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   sourceLastChanged - SOAP::SOAPDateTime
#   sourceLost - SOAP::SOAPString
#   sourceLatency - SOAP::SOAPFloat
#   licenseRequests - SOAP::SOAPString
#   licenseRequestFailures - SOAP::SOAPString
#   licenseFeatureUnknowns - SOAP::SOAPString
#   opState - Bosh::Director::CloudProviders::VSphere::LicenseManagerState
#   lastStatusUpdate - SOAP::SOAPDateTime
#   opFailureMessage - SOAP::SOAPString
class LicenseDiagnostics < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :sourceLastChanged
  attr_accessor :sourceLost
  attr_accessor :sourceLatency
  attr_accessor :licenseRequests
  attr_accessor :licenseRequestFailures
  attr_accessor :licenseFeatureUnknowns
  attr_accessor :opState
  attr_accessor :lastStatusUpdate
  attr_accessor :opFailureMessage

  def initialize(dynamicType = nil, dynamicProperty = [], sourceLastChanged = nil, sourceLost = nil, sourceLatency = nil, licenseRequests = nil, licenseRequestFailures = nil, licenseFeatureUnknowns = nil, opState = nil, lastStatusUpdate = nil, opFailureMessage = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @sourceLastChanged = sourceLastChanged
    @sourceLost = sourceLost
    @sourceLatency = sourceLatency
    @licenseRequests = licenseRequests
    @licenseRequestFailures = licenseRequestFailures
    @licenseFeatureUnknowns = licenseFeatureUnknowns
    @opState = opState
    @lastStatusUpdate = lastStatusUpdate
    @opFailureMessage = opFailureMessage
  end
end

# {urn:vim25}LicenseUsageInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   source - Bosh::Director::CloudProviders::VSphere::LicenseSource
#   sourceAvailable - SOAP::SOAPBoolean
#   reservationInfo - Bosh::Director::CloudProviders::VSphere::LicenseReservationInfo
#   featureInfo - Bosh::Director::CloudProviders::VSphere::LicenseFeatureInfo
class LicenseUsageInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :source
  attr_accessor :sourceAvailable
  attr_accessor :reservationInfo
  attr_accessor :featureInfo

  def initialize(dynamicType = nil, dynamicProperty = [], source = nil, sourceAvailable = nil, reservationInfo = [], featureInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @source = source
    @sourceAvailable = sourceAvailable
    @reservationInfo = reservationInfo
    @featureInfo = featureInfo
  end
end

# {urn:vim25}LicenseManagerEvaluationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   properties - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class LicenseManagerEvaluationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :properties

  def initialize(dynamicType = nil, dynamicProperty = [], properties = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @properties = properties
  end
end

# {urn:vim25}LicenseManagerLicenseInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   licenseKey - SOAP::SOAPString
#   editionKey - SOAP::SOAPString
#   name - SOAP::SOAPString
#   total - SOAP::SOAPInt
#   used - SOAP::SOAPInt
#   costUnit - SOAP::SOAPString
#   properties - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
#   labels - Bosh::Director::CloudProviders::VSphere::KeyValue
class LicenseManagerLicenseInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :licenseKey
  attr_accessor :editionKey
  attr_accessor :name
  attr_accessor :total
  attr_accessor :used
  attr_accessor :costUnit
  attr_accessor :properties
  attr_accessor :labels

  def initialize(dynamicType = nil, dynamicProperty = [], licenseKey = nil, editionKey = nil, name = nil, total = nil, used = nil, costUnit = nil, properties = [], labels = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @licenseKey = licenseKey
    @editionKey = editionKey
    @name = name
    @total = total
    @used = used
    @costUnit = costUnit
    @properties = properties
    @labels = labels
  end
end

# {urn:vim25}LocalizationManagerMessageCatalog
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   moduleName - SOAP::SOAPString
#   catalogName - SOAP::SOAPString
#   locale - SOAP::SOAPString
#   catalogUri - SOAP::SOAPString
#   lastModified - SOAP::SOAPDateTime
#   md5sum - SOAP::SOAPString
class LocalizationManagerMessageCatalog < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :moduleName
  attr_accessor :catalogName
  attr_accessor :locale
  attr_accessor :catalogUri
  attr_accessor :lastModified
  attr_accessor :md5sum

  def initialize(dynamicType = nil, dynamicProperty = [], moduleName = nil, catalogName = nil, locale = nil, catalogUri = nil, lastModified = nil, md5sum = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @moduleName = moduleName
    @catalogName = catalogName
    @locale = locale
    @catalogUri = catalogUri
    @lastModified = lastModified
    @md5sum = md5sum
  end
end

# {urn:vim25}NetworkSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   accessible - SOAP::SOAPBoolean
#   ipPoolName - SOAP::SOAPString
class NetworkSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :name
  attr_accessor :accessible
  attr_accessor :ipPoolName

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, name = nil, accessible = nil, ipPoolName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @name = name
    @accessible = accessible
    @ipPoolName = ipPoolName
  end
end

# {urn:vim25}NumericRange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   start - SOAP::SOAPInt
#   m_end - SOAP::SOAPInt
class NumericRange < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :start

  def m_end
    @v_end
  end

  def m_end=(value)
    @v_end = value
  end

  def initialize(dynamicType = nil, dynamicProperty = [], start = nil, v_end = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @start = start
    @v_end = v_end
  end
end

# {urn:vim25}OvfDeploymentOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   label - SOAP::SOAPString
#   description - SOAP::SOAPString
class OvfDeploymentOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :label
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, label = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @label = label
    @description = description
  end
end

# {urn:vim25}OvfManagerCommonParams
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   locale - SOAP::SOAPString
#   deploymentOption - SOAP::SOAPString
#   msgBundle - Bosh::Director::CloudProviders::VSphere::KeyValue
class OvfManagerCommonParams < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :locale
  attr_accessor :deploymentOption
  attr_accessor :msgBundle

  def initialize(dynamicType = nil, dynamicProperty = [], locale = nil, deploymentOption = nil, msgBundle = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @locale = locale
    @deploymentOption = deploymentOption
    @msgBundle = msgBundle
  end
end

# {urn:vim25}OvfValidateHostParams
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   locale - SOAP::SOAPString
#   deploymentOption - SOAP::SOAPString
#   msgBundle - Bosh::Director::CloudProviders::VSphere::KeyValue
class OvfValidateHostParams < OvfManagerCommonParams
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :locale
  attr_accessor :deploymentOption
  attr_accessor :msgBundle

  def initialize(dynamicType = nil, dynamicProperty = [], locale = nil, deploymentOption = nil, msgBundle = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @locale = locale
    @deploymentOption = deploymentOption
    @msgBundle = msgBundle
  end
end

# {urn:vim25}OvfParseDescriptorParams
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   locale - SOAP::SOAPString
#   deploymentOption - SOAP::SOAPString
#   msgBundle - Bosh::Director::CloudProviders::VSphere::KeyValue
class OvfParseDescriptorParams < OvfManagerCommonParams
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :locale
  attr_accessor :deploymentOption
  attr_accessor :msgBundle

  def initialize(dynamicType = nil, dynamicProperty = [], locale = nil, deploymentOption = nil, msgBundle = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @locale = locale
    @deploymentOption = deploymentOption
    @msgBundle = msgBundle
  end
end

# {urn:vim25}OvfCreateImportSpecParams
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   locale - SOAP::SOAPString
#   deploymentOption - SOAP::SOAPString
#   msgBundle - Bosh::Director::CloudProviders::VSphere::KeyValue
#   entityName - SOAP::SOAPString
#   hostSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   networkMapping - Bosh::Director::CloudProviders::VSphere::OvfNetworkMapping
#   ipAllocationPolicy - SOAP::SOAPString
#   ipProtocol - SOAP::SOAPString
#   propertyMapping - Bosh::Director::CloudProviders::VSphere::KeyValue
#   resourceMapping - Bosh::Director::CloudProviders::VSphere::OvfResourceMap
#   diskProvisioning - SOAP::SOAPString
class OvfCreateImportSpecParams < OvfManagerCommonParams
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :locale
  attr_accessor :deploymentOption
  attr_accessor :msgBundle
  attr_accessor :entityName
  attr_accessor :hostSystem
  attr_accessor :networkMapping
  attr_accessor :ipAllocationPolicy
  attr_accessor :ipProtocol
  attr_accessor :propertyMapping
  attr_accessor :resourceMapping
  attr_accessor :diskProvisioning

  def initialize(dynamicType = nil, dynamicProperty = [], locale = nil, deploymentOption = nil, msgBundle = [], entityName = nil, hostSystem = nil, networkMapping = [], ipAllocationPolicy = nil, ipProtocol = nil, propertyMapping = [], resourceMapping = [], diskProvisioning = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @locale = locale
    @deploymentOption = deploymentOption
    @msgBundle = msgBundle
    @entityName = entityName
    @hostSystem = hostSystem
    @networkMapping = networkMapping
    @ipAllocationPolicy = ipAllocationPolicy
    @ipProtocol = ipProtocol
    @propertyMapping = propertyMapping
    @resourceMapping = resourceMapping
    @diskProvisioning = diskProvisioning
  end
end

# {urn:vim25}OvfValidateHostResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   downloadSize - SOAP::SOAPLong
#   flatDeploymentSize - SOAP::SOAPLong
#   sparseDeploymentSize - SOAP::SOAPLong
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   warning - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   supportedDiskProvisioning - SOAP::SOAPString
class OvfValidateHostResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :downloadSize
  attr_accessor :flatDeploymentSize
  attr_accessor :sparseDeploymentSize
  attr_accessor :error
  attr_accessor :warning
  attr_accessor :supportedDiskProvisioning

  def initialize(dynamicType = nil, dynamicProperty = [], downloadSize = nil, flatDeploymentSize = nil, sparseDeploymentSize = nil, error = [], warning = [], supportedDiskProvisioning = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @downloadSize = downloadSize
    @flatDeploymentSize = flatDeploymentSize
    @sparseDeploymentSize = sparseDeploymentSize
    @error = error
    @warning = warning
    @supportedDiskProvisioning = supportedDiskProvisioning
  end
end

# {urn:vim25}OvfParseDescriptorResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   eula - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::OvfNetworkInfo
#   ipAllocationScheme - SOAP::SOAPString
#   ipProtocols - SOAP::SOAPString
#   property - Bosh::Director::CloudProviders::VSphere::VAppPropertyInfo
#   productInfo - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
#   annotation - SOAP::SOAPString
#   approximateDownloadSize - SOAP::SOAPLong
#   approximateFlatDeploymentSize - SOAP::SOAPLong
#   approximateSparseDeploymentSize - SOAP::SOAPLong
#   defaultEntityName - SOAP::SOAPString
#   virtualApp - SOAP::SOAPBoolean
#   deploymentOption - Bosh::Director::CloudProviders::VSphere::OvfDeploymentOption
#   defaultDeploymentOption - SOAP::SOAPString
#   entityName - Bosh::Director::CloudProviders::VSphere::KeyValue
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   warning - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class OvfParseDescriptorResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :eula
  attr_accessor :network
  attr_accessor :ipAllocationScheme
  attr_accessor :ipProtocols
  attr_accessor :property
  attr_accessor :productInfo
  attr_accessor :annotation
  attr_accessor :approximateDownloadSize
  attr_accessor :approximateFlatDeploymentSize
  attr_accessor :approximateSparseDeploymentSize
  attr_accessor :defaultEntityName
  attr_accessor :virtualApp
  attr_accessor :deploymentOption
  attr_accessor :defaultDeploymentOption
  attr_accessor :entityName
  attr_accessor :error
  attr_accessor :warning

  def initialize(dynamicType = nil, dynamicProperty = [], eula = [], network = [], ipAllocationScheme = [], ipProtocols = [], property = [], productInfo = nil, annotation = nil, approximateDownloadSize = nil, approximateFlatDeploymentSize = nil, approximateSparseDeploymentSize = nil, defaultEntityName = nil, virtualApp = nil, deploymentOption = [], defaultDeploymentOption = nil, entityName = [], error = [], warning = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @eula = eula
    @network = network
    @ipAllocationScheme = ipAllocationScheme
    @ipProtocols = ipProtocols
    @property = property
    @productInfo = productInfo
    @annotation = annotation
    @approximateDownloadSize = approximateDownloadSize
    @approximateFlatDeploymentSize = approximateFlatDeploymentSize
    @approximateSparseDeploymentSize = approximateSparseDeploymentSize
    @defaultEntityName = defaultEntityName
    @virtualApp = virtualApp
    @deploymentOption = deploymentOption
    @defaultDeploymentOption = defaultDeploymentOption
    @entityName = entityName
    @error = error
    @warning = warning
  end
end

# {urn:vim25}OvfNetworkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
class OvfNetworkInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
  end
end

# {urn:vim25}OvfResourceMap
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   source - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resourceSpec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class OvfResourceMap < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :source
  attr_accessor :parent
  attr_accessor :resourceSpec
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], source = nil, parent = nil, resourceSpec = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @source = source
    @parent = parent
    @resourceSpec = resourceSpec
    @datastore = datastore
  end
end

# {urn:vim25}OvfNetworkMapping
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class OvfNetworkMapping < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @network = network
  end
end

# {urn:vim25}OvfCreateImportSpecResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   importSpec - Bosh::Director::CloudProviders::VSphere::ImportSpec
#   fileItem - Bosh::Director::CloudProviders::VSphere::OvfFileItem
#   warning - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class OvfCreateImportSpecResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :importSpec
  attr_accessor :fileItem
  attr_accessor :warning
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], importSpec = nil, fileItem = [], warning = [], error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @importSpec = importSpec
    @fileItem = fileItem
    @warning = warning
    @error = error
  end
end

# {urn:vim25}OvfFileItem
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceId - SOAP::SOAPString
#   path - SOAP::SOAPString
#   compressionMethod - SOAP::SOAPString
#   chunkSize - SOAP::SOAPLong
#   size - SOAP::SOAPLong
#   cimType - SOAP::SOAPInt
#   create - SOAP::SOAPBoolean
class OvfFileItem < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceId
  attr_accessor :path
  attr_accessor :compressionMethod
  attr_accessor :chunkSize
  attr_accessor :size
  attr_accessor :cimType
  attr_accessor :create

  def initialize(dynamicType = nil, dynamicProperty = [], deviceId = nil, path = nil, compressionMethod = nil, chunkSize = nil, size = nil, cimType = nil, create = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceId = deviceId
    @path = path
    @compressionMethod = compressionMethod
    @chunkSize = chunkSize
    @size = size
    @cimType = cimType
    @create = create
  end
end

# {urn:vim25}OvfCreateDescriptorParams
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ovfFiles - Bosh::Director::CloudProviders::VSphere::OvfFile
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   includeImageFiles - SOAP::SOAPBoolean
class OvfCreateDescriptorParams < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ovfFiles
  attr_accessor :name
  attr_accessor :description
  attr_accessor :includeImageFiles

  def initialize(dynamicType = nil, dynamicProperty = [], ovfFiles = [], name = nil, description = nil, includeImageFiles = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ovfFiles = ovfFiles
    @name = name
    @description = description
    @includeImageFiles = includeImageFiles
  end
end

# {urn:vim25}OvfCreateDescriptorResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ovfDescriptor - SOAP::SOAPString
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   warning - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   includeImageFiles - SOAP::SOAPBoolean
class OvfCreateDescriptorResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ovfDescriptor
  attr_accessor :error
  attr_accessor :warning
  attr_accessor :includeImageFiles

  def initialize(dynamicType = nil, dynamicProperty = [], ovfDescriptor = nil, error = [], warning = [], includeImageFiles = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ovfDescriptor = ovfDescriptor
    @error = error
    @warning = warning
    @includeImageFiles = includeImageFiles
  end
end

# {urn:vim25}OvfFile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceId - SOAP::SOAPString
#   path - SOAP::SOAPString
#   compressionMethod - SOAP::SOAPString
#   chunkSize - SOAP::SOAPLong
#   size - SOAP::SOAPLong
#   capacity - SOAP::SOAPLong
#   populatedSize - SOAP::SOAPLong
class OvfFile < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceId
  attr_accessor :path
  attr_accessor :compressionMethod
  attr_accessor :chunkSize
  attr_accessor :size
  attr_accessor :capacity
  attr_accessor :populatedSize

  def initialize(dynamicType = nil, dynamicProperty = [], deviceId = nil, path = nil, compressionMethod = nil, chunkSize = nil, size = nil, capacity = nil, populatedSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceId = deviceId
    @path = path
    @compressionMethod = compressionMethod
    @chunkSize = chunkSize
    @size = size
    @capacity = capacity
    @populatedSize = populatedSize
  end
end

# {urn:vim25}PasswordField
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   value - SOAP::SOAPString
class PasswordField < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @value = value
  end
end

# {urn:vim25}PerformanceDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   counterType - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   statsType - Bosh::Director::CloudProviders::VSphere::ElementDescription
class PerformanceDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :counterType
  attr_accessor :statsType

  def initialize(dynamicType = nil, dynamicProperty = [], counterType = [], statsType = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @counterType = counterType
    @statsType = statsType
  end
end

# {urn:vim25}PerfProviderSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   currentSupported - SOAP::SOAPBoolean
#   summarySupported - SOAP::SOAPBoolean
#   refreshRate - SOAP::SOAPInt
class PerfProviderSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :currentSupported
  attr_accessor :summarySupported
  attr_accessor :refreshRate

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, currentSupported = nil, summarySupported = nil, refreshRate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @currentSupported = currentSupported
    @summarySupported = summarySupported
    @refreshRate = refreshRate
  end
end

# {urn:vim25}PerfCounterInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   nameInfo - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   groupInfo - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   unitInfo - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   rollupType - Bosh::Director::CloudProviders::VSphere::PerfSummaryType
#   statsType - Bosh::Director::CloudProviders::VSphere::PerfStatsType
#   level - SOAP::SOAPInt
#   perDeviceLevel - SOAP::SOAPInt
#   associatedCounterId - SOAP::SOAPInt
class PerfCounterInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :nameInfo
  attr_accessor :groupInfo
  attr_accessor :unitInfo
  attr_accessor :rollupType
  attr_accessor :statsType
  attr_accessor :level
  attr_accessor :perDeviceLevel
  attr_accessor :associatedCounterId

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, nameInfo = nil, groupInfo = nil, unitInfo = nil, rollupType = nil, statsType = nil, level = nil, perDeviceLevel = nil, associatedCounterId = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @nameInfo = nameInfo
    @groupInfo = groupInfo
    @unitInfo = unitInfo
    @rollupType = rollupType
    @statsType = statsType
    @level = level
    @perDeviceLevel = perDeviceLevel
    @associatedCounterId = associatedCounterId
  end
end

# {urn:vim25}PerfMetricId
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   counterId - SOAP::SOAPInt
#   instance - SOAP::SOAPString
class PerfMetricId < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :counterId
  attr_accessor :instance

  def initialize(dynamicType = nil, dynamicProperty = [], counterId = nil, instance = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @counterId = counterId
    @instance = instance
  end
end

# {urn:vim25}PerfQuerySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   maxSample - SOAP::SOAPInt
#   metricId - Bosh::Director::CloudProviders::VSphere::PerfMetricId
#   intervalId - SOAP::SOAPInt
#   format - SOAP::SOAPString
class PerfQuerySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :maxSample
  attr_accessor :metricId
  attr_accessor :intervalId
  attr_accessor :format

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, startTime = nil, endTime = nil, maxSample = nil, metricId = [], intervalId = nil, format = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @startTime = startTime
    @endTime = endTime
    @maxSample = maxSample
    @metricId = metricId
    @intervalId = intervalId
    @format = format
  end
end

# {urn:vim25}PerfSampleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   timestamp - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
class PerfSampleInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :timestamp
  attr_accessor :interval

  def initialize(dynamicType = nil, dynamicProperty = [], timestamp = nil, interval = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @timestamp = timestamp
    @interval = interval
  end
end

# {urn:vim25}PerfMetricSeries
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::PerfMetricId
class PerfMetricSeries < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
  end
end

# {urn:vim25}PerfMetricIntSeries
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::PerfMetricId
#   value - SOAP::SOAPLong
class PerfMetricIntSeries < PerfMetricSeries
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, value = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @value = value
  end
end

# {urn:vim25}PerfMetricSeriesCSV
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::PerfMetricId
#   value - SOAP::SOAPString
class PerfMetricSeriesCSV < PerfMetricSeries
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @value = value
  end
end

# {urn:vim25}PerfEntityMetricBase
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PerfEntityMetricBase < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
  end
end

# {urn:vim25}PerfEntityMetric
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sampleInfo - Bosh::Director::CloudProviders::VSphere::PerfSampleInfo
#   value - Bosh::Director::CloudProviders::VSphere::PerfMetricSeries
class PerfEntityMetric < PerfEntityMetricBase
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :sampleInfo
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, sampleInfo = [], value = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @sampleInfo = sampleInfo
    @value = value
  end
end

# {urn:vim25}PerfEntityMetricCSV
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sampleInfoCSV - SOAP::SOAPString
#   value - Bosh::Director::CloudProviders::VSphere::PerfMetricSeriesCSV
class PerfEntityMetricCSV < PerfEntityMetricBase
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :sampleInfoCSV
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, sampleInfoCSV = nil, value = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @sampleInfoCSV = sampleInfoCSV
    @value = value
  end
end

# {urn:vim25}PerfCompositeMetric
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::PerfEntityMetricBase
#   childEntity - Bosh::Director::CloudProviders::VSphere::PerfEntityMetricBase
class PerfCompositeMetric < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :childEntity

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, childEntity = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @childEntity = childEntity
  end
end

# {urn:vim25}PerfInterval
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   samplingPeriod - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   length - SOAP::SOAPInt
#   level - SOAP::SOAPInt
#   enabled - SOAP::SOAPBoolean
class PerfInterval < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :samplingPeriod
  attr_accessor :name
  attr_accessor :length
  attr_accessor :level
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, samplingPeriod = nil, name = nil, length = nil, level = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @samplingPeriod = samplingPeriod
    @name = name
    @length = length
    @level = level
    @enabled = enabled
  end
end

# {urn:vim25}PrivilegePolicyDef
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   createPrivilege - SOAP::SOAPString
#   readPrivilege - SOAP::SOAPString
#   updatePrivilege - SOAP::SOAPString
#   deletePrivilege - SOAP::SOAPString
class PrivilegePolicyDef < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :createPrivilege
  attr_accessor :readPrivilege
  attr_accessor :updatePrivilege
  attr_accessor :deletePrivilege

  def initialize(dynamicType = nil, dynamicProperty = [], createPrivilege = nil, readPrivilege = nil, updatePrivilege = nil, deletePrivilege = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @createPrivilege = createPrivilege
    @readPrivilege = readPrivilege
    @updatePrivilege = updatePrivilege
    @deletePrivilege = deletePrivilege
  end
end

# {urn:vim25}ResourceAllocationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   reservation - SOAP::SOAPLong
#   expandableReservation - SOAP::SOAPBoolean
#   limit - SOAP::SOAPLong
#   shares - Bosh::Director::CloudProviders::VSphere::SharesInfo
#   overheadLimit - SOAP::SOAPLong
class ResourceAllocationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :reservation
  attr_accessor :expandableReservation
  attr_accessor :limit
  attr_accessor :shares
  attr_accessor :overheadLimit

  def initialize(dynamicType = nil, dynamicProperty = [], reservation = nil, expandableReservation = nil, limit = nil, shares = nil, overheadLimit = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @reservation = reservation
    @expandableReservation = expandableReservation
    @limit = limit
    @shares = shares
    @overheadLimit = overheadLimit
  end
end

# {urn:vim25}ResourceAllocationOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   sharesOption - Bosh::Director::CloudProviders::VSphere::SharesOption
class ResourceAllocationOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :sharesOption

  def initialize(dynamicType = nil, dynamicProperty = [], sharesOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @sharesOption = sharesOption
  end
end

# {urn:vim25}ResourceConfigOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   cpuAllocationOption - Bosh::Director::CloudProviders::VSphere::ResourceAllocationOption
#   memoryAllocationOption - Bosh::Director::CloudProviders::VSphere::ResourceAllocationOption
class ResourceConfigOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :cpuAllocationOption
  attr_accessor :memoryAllocationOption

  def initialize(dynamicType = nil, dynamicProperty = [], cpuAllocationOption = nil, memoryAllocationOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @cpuAllocationOption = cpuAllocationOption
    @memoryAllocationOption = memoryAllocationOption
  end
end

# {urn:vim25}ResourceConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   changeVersion - SOAP::SOAPString
#   lastModified - SOAP::SOAPDateTime
#   cpuAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
#   memoryAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
class ResourceConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :changeVersion
  attr_accessor :lastModified
  attr_accessor :cpuAllocation
  attr_accessor :memoryAllocation

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, changeVersion = nil, lastModified = nil, cpuAllocation = nil, memoryAllocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @changeVersion = changeVersion
    @lastModified = lastModified
    @cpuAllocation = cpuAllocation
    @memoryAllocation = memoryAllocation
  end
end

# {urn:vim25}DatabaseSizeParam
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inventoryDesc - Bosh::Director::CloudProviders::VSphere::InventoryDescription
#   perfStatsDesc - Bosh::Director::CloudProviders::VSphere::PerformanceStatisticsDescription
class DatabaseSizeParam < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inventoryDesc
  attr_accessor :perfStatsDesc

  def initialize(dynamicType = nil, dynamicProperty = [], inventoryDesc = nil, perfStatsDesc = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inventoryDesc = inventoryDesc
    @perfStatsDesc = perfStatsDesc
  end
end

# {urn:vim25}InventoryDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numHosts - SOAP::SOAPInt
#   numVirtualMachines - SOAP::SOAPInt
#   numResourcePools - SOAP::SOAPInt
#   numClusters - SOAP::SOAPInt
#   numCpuDev - SOAP::SOAPInt
#   numNetDev - SOAP::SOAPInt
#   numDiskDev - SOAP::SOAPInt
#   numvCpuDev - SOAP::SOAPInt
#   numvNetDev - SOAP::SOAPInt
#   numvDiskDev - SOAP::SOAPInt
class InventoryDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numHosts
  attr_accessor :numVirtualMachines
  attr_accessor :numResourcePools
  attr_accessor :numClusters
  attr_accessor :numCpuDev
  attr_accessor :numNetDev
  attr_accessor :numDiskDev
  attr_accessor :numvCpuDev
  attr_accessor :numvNetDev
  attr_accessor :numvDiskDev

  def initialize(dynamicType = nil, dynamicProperty = [], numHosts = nil, numVirtualMachines = nil, numResourcePools = nil, numClusters = nil, numCpuDev = nil, numNetDev = nil, numDiskDev = nil, numvCpuDev = nil, numvNetDev = nil, numvDiskDev = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numHosts = numHosts
    @numVirtualMachines = numVirtualMachines
    @numResourcePools = numResourcePools
    @numClusters = numClusters
    @numCpuDev = numCpuDev
    @numNetDev = numNetDev
    @numDiskDev = numDiskDev
    @numvCpuDev = numvCpuDev
    @numvNetDev = numvNetDev
    @numvDiskDev = numvDiskDev
  end
end

# {urn:vim25}PerformanceStatisticsDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   intervals - Bosh::Director::CloudProviders::VSphere::PerfInterval
class PerformanceStatisticsDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :intervals

  def initialize(dynamicType = nil, dynamicProperty = [], intervals = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @intervals = intervals
  end
end

# {urn:vim25}DatabaseSizeEstimate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   size - SOAP::SOAPLong
class DatabaseSizeEstimate < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :size

  def initialize(dynamicType = nil, dynamicProperty = [], size = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @size = size
  end
end

# {urn:vim25}ResourcePoolResourceUsage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   reservationUsed - SOAP::SOAPLong
#   reservationUsedForVm - SOAP::SOAPLong
#   unreservedForPool - SOAP::SOAPLong
#   unreservedForVm - SOAP::SOAPLong
#   overallUsage - SOAP::SOAPLong
#   maxUsage - SOAP::SOAPLong
class ResourcePoolResourceUsage < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :reservationUsed
  attr_accessor :reservationUsedForVm
  attr_accessor :unreservedForPool
  attr_accessor :unreservedForVm
  attr_accessor :overallUsage
  attr_accessor :maxUsage

  def initialize(dynamicType = nil, dynamicProperty = [], reservationUsed = nil, reservationUsedForVm = nil, unreservedForPool = nil, unreservedForVm = nil, overallUsage = nil, maxUsage = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @reservationUsed = reservationUsed
    @reservationUsedForVm = reservationUsedForVm
    @unreservedForPool = unreservedForPool
    @unreservedForVm = unreservedForVm
    @overallUsage = overallUsage
    @maxUsage = maxUsage
  end
end

# {urn:vim25}ResourcePoolRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   memory - Bosh::Director::CloudProviders::VSphere::ResourcePoolResourceUsage
#   cpu - Bosh::Director::CloudProviders::VSphere::ResourcePoolResourceUsage
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
class ResourcePoolRuntimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :memory
  attr_accessor :cpu
  attr_accessor :overallStatus

  def initialize(dynamicType = nil, dynamicProperty = [], memory = nil, cpu = nil, overallStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @memory = memory
    @cpu = cpu
    @overallStatus = overallStatus
  end
end

# {urn:vim25}ResourcePoolQuickStats
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   overallCpuUsage - SOAP::SOAPLong
#   overallCpuDemand - SOAP::SOAPLong
#   guestMemoryUsage - SOAP::SOAPLong
#   hostMemoryUsage - SOAP::SOAPLong
#   distributedCpuEntitlement - SOAP::SOAPLong
#   distributedMemoryEntitlement - SOAP::SOAPLong
#   staticCpuEntitlement - SOAP::SOAPInt
#   staticMemoryEntitlement - SOAP::SOAPInt
#   privateMemory - SOAP::SOAPLong
#   sharedMemory - SOAP::SOAPLong
#   swappedMemory - SOAP::SOAPLong
#   balloonedMemory - SOAP::SOAPLong
#   overheadMemory - SOAP::SOAPLong
#   consumedOverheadMemory - SOAP::SOAPLong
#   compressedMemory - SOAP::SOAPLong
class ResourcePoolQuickStats < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :overallCpuUsage
  attr_accessor :overallCpuDemand
  attr_accessor :guestMemoryUsage
  attr_accessor :hostMemoryUsage
  attr_accessor :distributedCpuEntitlement
  attr_accessor :distributedMemoryEntitlement
  attr_accessor :staticCpuEntitlement
  attr_accessor :staticMemoryEntitlement
  attr_accessor :privateMemory
  attr_accessor :sharedMemory
  attr_accessor :swappedMemory
  attr_accessor :balloonedMemory
  attr_accessor :overheadMemory
  attr_accessor :consumedOverheadMemory
  attr_accessor :compressedMemory

  def initialize(dynamicType = nil, dynamicProperty = [], overallCpuUsage = nil, overallCpuDemand = nil, guestMemoryUsage = nil, hostMemoryUsage = nil, distributedCpuEntitlement = nil, distributedMemoryEntitlement = nil, staticCpuEntitlement = nil, staticMemoryEntitlement = nil, privateMemory = nil, sharedMemory = nil, swappedMemory = nil, balloonedMemory = nil, overheadMemory = nil, consumedOverheadMemory = nil, compressedMemory = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @overallCpuUsage = overallCpuUsage
    @overallCpuDemand = overallCpuDemand
    @guestMemoryUsage = guestMemoryUsage
    @hostMemoryUsage = hostMemoryUsage
    @distributedCpuEntitlement = distributedCpuEntitlement
    @distributedMemoryEntitlement = distributedMemoryEntitlement
    @staticCpuEntitlement = staticCpuEntitlement
    @staticMemoryEntitlement = staticMemoryEntitlement
    @privateMemory = privateMemory
    @sharedMemory = sharedMemory
    @swappedMemory = swappedMemory
    @balloonedMemory = balloonedMemory
    @overheadMemory = overheadMemory
    @consumedOverheadMemory = consumedOverheadMemory
    @compressedMemory = compressedMemory
  end
end

# {urn:vim25}ResourcePoolSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   config - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   runtime - Bosh::Director::CloudProviders::VSphere::ResourcePoolRuntimeInfo
#   quickStats - Bosh::Director::CloudProviders::VSphere::ResourcePoolQuickStats
#   configuredMemoryMB - SOAP::SOAPInt
class ResourcePoolSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :config
  attr_accessor :runtime
  attr_accessor :quickStats
  attr_accessor :configuredMemoryMB

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, config = nil, runtime = nil, quickStats = nil, configuredMemoryMB = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @config = config
    @runtime = runtime
    @quickStats = quickStats
    @configuredMemoryMB = configuredMemoryMB
  end
end

# {urn:vim25}VirtualAppSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   config - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   runtime - Bosh::Director::CloudProviders::VSphere::ResourcePoolRuntimeInfo
#   quickStats - Bosh::Director::CloudProviders::VSphere::ResourcePoolQuickStats
#   configuredMemoryMB - SOAP::SOAPInt
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
#   vAppState - Bosh::Director::CloudProviders::VSphere::VirtualAppVAppState
#   suspended - SOAP::SOAPBoolean
#   installBootRequired - SOAP::SOAPBoolean
#   instanceUuid - SOAP::SOAPString
class VirtualAppSummary < ResourcePoolSummary
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :config
  attr_accessor :runtime
  attr_accessor :quickStats
  attr_accessor :configuredMemoryMB
  attr_accessor :product
  attr_accessor :vAppState
  attr_accessor :suspended
  attr_accessor :installBootRequired
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, config = nil, runtime = nil, quickStats = nil, configuredMemoryMB = nil, product = nil, vAppState = nil, suspended = nil, installBootRequired = nil, instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @config = config
    @runtime = runtime
    @quickStats = quickStats
    @configuredMemoryMB = configuredMemoryMB
    @product = product
    @vAppState = vAppState
    @suspended = suspended
    @installBootRequired = installBootRequired
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}HostVMotionCompatibility
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   compatibility - SOAP::SOAPString
class HostVMotionCompatibility < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :compatibility

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, compatibility = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @compatibility = compatibility
  end
end

# {urn:vim25}ProductComponentInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   name - SOAP::SOAPString
#   version - SOAP::SOAPString
#   release - SOAP::SOAPInt
class ProductComponentInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :name
  attr_accessor :version
  attr_accessor :release

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, name = nil, version = nil, release = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @name = name
    @version = version
    @release = release
  end
end

# {urn:vim25}ServiceContent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   rootFolder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   propertyCollector - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   viewManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   about - Bosh::Director::CloudProviders::VSphere::AboutInfo
#   setting - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userDirectory - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sessionManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   authorizationManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   perfManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   scheduledTaskManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   alarmManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   eventManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   taskManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   customizationSpecManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   customFieldsManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   accountManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diagnosticManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   searchIndex - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fileManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   virtualDiskManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   virtualizationManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   snmpSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmProvisioningChecker - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmCompatibilityChecker - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ovfManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ipPoolManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dvSwitchManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostProfileManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   clusterProfileManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   complianceManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   localizationManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   storageResourceManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ServiceContent < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :rootFolder
  attr_accessor :propertyCollector
  attr_accessor :viewManager
  attr_accessor :about
  attr_accessor :setting
  attr_accessor :userDirectory
  attr_accessor :sessionManager
  attr_accessor :authorizationManager
  attr_accessor :perfManager
  attr_accessor :scheduledTaskManager
  attr_accessor :alarmManager
  attr_accessor :eventManager
  attr_accessor :taskManager
  attr_accessor :extensionManager
  attr_accessor :customizationSpecManager
  attr_accessor :customFieldsManager
  attr_accessor :accountManager
  attr_accessor :diagnosticManager
  attr_accessor :licenseManager
  attr_accessor :searchIndex
  attr_accessor :fileManager
  attr_accessor :virtualDiskManager
  attr_accessor :virtualizationManager
  attr_accessor :snmpSystem
  attr_accessor :vmProvisioningChecker
  attr_accessor :vmCompatibilityChecker
  attr_accessor :ovfManager
  attr_accessor :ipPoolManager
  attr_accessor :dvSwitchManager
  attr_accessor :hostProfileManager
  attr_accessor :clusterProfileManager
  attr_accessor :complianceManager
  attr_accessor :localizationManager
  attr_accessor :storageResourceManager

  def initialize(dynamicType = nil, dynamicProperty = [], rootFolder = nil, propertyCollector = nil, viewManager = nil, about = nil, setting = nil, userDirectory = nil, sessionManager = nil, authorizationManager = nil, perfManager = nil, scheduledTaskManager = nil, alarmManager = nil, eventManager = nil, taskManager = nil, extensionManager = nil, customizationSpecManager = nil, customFieldsManager = nil, accountManager = nil, diagnosticManager = nil, licenseManager = nil, searchIndex = nil, fileManager = nil, virtualDiskManager = nil, virtualizationManager = nil, snmpSystem = nil, vmProvisioningChecker = nil, vmCompatibilityChecker = nil, ovfManager = nil, ipPoolManager = nil, dvSwitchManager = nil, hostProfileManager = nil, clusterProfileManager = nil, complianceManager = nil, localizationManager = nil, storageResourceManager = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @rootFolder = rootFolder
    @propertyCollector = propertyCollector
    @viewManager = viewManager
    @about = about
    @setting = setting
    @userDirectory = userDirectory
    @sessionManager = sessionManager
    @authorizationManager = authorizationManager
    @perfManager = perfManager
    @scheduledTaskManager = scheduledTaskManager
    @alarmManager = alarmManager
    @eventManager = eventManager
    @taskManager = taskManager
    @extensionManager = extensionManager
    @customizationSpecManager = customizationSpecManager
    @customFieldsManager = customFieldsManager
    @accountManager = accountManager
    @diagnosticManager = diagnosticManager
    @licenseManager = licenseManager
    @searchIndex = searchIndex
    @fileManager = fileManager
    @virtualDiskManager = virtualDiskManager
    @virtualizationManager = virtualizationManager
    @snmpSystem = snmpSystem
    @vmProvisioningChecker = vmProvisioningChecker
    @vmCompatibilityChecker = vmCompatibilityChecker
    @ovfManager = ovfManager
    @ipPoolManager = ipPoolManager
    @dvSwitchManager = dvSwitchManager
    @hostProfileManager = hostProfileManager
    @clusterProfileManager = clusterProfileManager
    @complianceManager = complianceManager
    @localizationManager = localizationManager
    @storageResourceManager = storageResourceManager
  end
end

# {urn:vim25}SessionManagerLocalTicket
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   userName - SOAP::SOAPString
#   passwordFilePath - SOAP::SOAPString
class SessionManagerLocalTicket < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :userName
  attr_accessor :passwordFilePath

  def initialize(dynamicType = nil, dynamicProperty = [], userName = nil, passwordFilePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @userName = userName
    @passwordFilePath = passwordFilePath
  end
end

# {urn:vim25}UserSession
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   userName - SOAP::SOAPString
#   fullName - SOAP::SOAPString
#   loginTime - SOAP::SOAPDateTime
#   lastActiveTime - SOAP::SOAPDateTime
#   locale - SOAP::SOAPString
#   messageLocale - SOAP::SOAPString
class UserSession < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :userName
  attr_accessor :fullName
  attr_accessor :loginTime
  attr_accessor :lastActiveTime
  attr_accessor :locale
  attr_accessor :messageLocale

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, userName = nil, fullName = nil, loginTime = nil, lastActiveTime = nil, locale = nil, messageLocale = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @userName = userName
    @fullName = fullName
    @loginTime = loginTime
    @lastActiveTime = lastActiveTime
    @locale = locale
    @messageLocale = messageLocale
  end
end

# {urn:vim25}SharesInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   shares - SOAP::SOAPInt
#   level - Bosh::Director::CloudProviders::VSphere::SharesLevel
class SharesInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :shares
  attr_accessor :level

  def initialize(dynamicType = nil, dynamicProperty = [], shares = nil, level = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @shares = shares
    @level = level
  end
end

# {urn:vim25}SharesOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   sharesOption - Bosh::Director::CloudProviders::VSphere::IntOption
#   defaultLevel - Bosh::Director::CloudProviders::VSphere::SharesLevel
class SharesOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :sharesOption
  attr_accessor :defaultLevel

  def initialize(dynamicType = nil, dynamicProperty = [], sharesOption = nil, defaultLevel = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @sharesOption = sharesOption
    @defaultLevel = defaultLevel
  end
end

# {urn:vim25}StorageIOAllocationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   limit - SOAP::SOAPLong
#   shares - Bosh::Director::CloudProviders::VSphere::SharesInfo
class StorageIOAllocationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :limit
  attr_accessor :shares

  def initialize(dynamicType = nil, dynamicProperty = [], limit = nil, shares = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @limit = limit
    @shares = shares
  end
end

# {urn:vim25}StorageIOAllocationOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   limitOption - Bosh::Director::CloudProviders::VSphere::LongOption
#   sharesOption - Bosh::Director::CloudProviders::VSphere::SharesOption
class StorageIOAllocationOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :limitOption
  attr_accessor :sharesOption

  def initialize(dynamicType = nil, dynamicProperty = [], limitOption = nil, sharesOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @limitOption = limitOption
    @sharesOption = sharesOption
  end
end

# {urn:vim25}StorageIORMInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   congestionThreshold - SOAP::SOAPInt
class StorageIORMInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :congestionThreshold

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, congestionThreshold = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @congestionThreshold = congestionThreshold
  end
end

# {urn:vim25}StorageIORMConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   congestionThreshold - SOAP::SOAPInt
class StorageIORMConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :congestionThreshold

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, congestionThreshold = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @congestionThreshold = congestionThreshold
  end
end

# {urn:vim25}StorageIORMConfigOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabledOption - Bosh::Director::CloudProviders::VSphere::BoolOption
#   congestionThresholdOption - Bosh::Director::CloudProviders::VSphere::IntOption
class StorageIORMConfigOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabledOption
  attr_accessor :congestionThresholdOption

  def initialize(dynamicType = nil, dynamicProperty = [], enabledOption = nil, congestionThresholdOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabledOption = enabledOption
    @congestionThresholdOption = congestionThresholdOption
  end
end

# {urn:vim25}Tag
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
class Tag < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
  end
end

# {urn:vim25}TaskDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   methodInfo - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   state - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   reason - Bosh::Director::CloudProviders::VSphere::TypeDescription
class TaskDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :methodInfo
  attr_accessor :state
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], methodInfo = [], state = [], reason = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @methodInfo = methodInfo
    @state = state
    @reason = reason
  end
end

# {urn:vim25}TaskFilterSpecByEntity
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   recursion - Bosh::Director::CloudProviders::VSphere::TaskFilterSpecRecursionOption
class TaskFilterSpecByEntity < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :recursion

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, recursion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @recursion = recursion
  end
end

# {urn:vim25}TaskFilterSpecByTime
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   timeType - Bosh::Director::CloudProviders::VSphere::TaskFilterSpecTimeOption
#   beginTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class TaskFilterSpecByTime < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :timeType
  attr_accessor :beginTime
  attr_accessor :endTime

  def initialize(dynamicType = nil, dynamicProperty = [], timeType = nil, beginTime = nil, endTime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @timeType = timeType
    @beginTime = beginTime
    @endTime = endTime
  end
end

# {urn:vim25}TaskFilterSpecByUsername
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   systemUser - SOAP::SOAPBoolean
#   userList - SOAP::SOAPString
class TaskFilterSpecByUsername < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :systemUser
  attr_accessor :userList

  def initialize(dynamicType = nil, dynamicProperty = [], systemUser = nil, userList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @systemUser = systemUser
    @userList = userList
  end
end

# {urn:vim25}TaskFilterSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::TaskFilterSpecByEntity
#   time - Bosh::Director::CloudProviders::VSphere::TaskFilterSpecByTime
#   userName - Bosh::Director::CloudProviders::VSphere::TaskFilterSpecByUsername
#   state - Bosh::Director::CloudProviders::VSphere::TaskInfoState
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   eventChainId - SOAP::SOAPInt
#   tag - SOAP::SOAPString
#   parentTaskKey - SOAP::SOAPString
#   rootTaskKey - SOAP::SOAPString
class TaskFilterSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :time
  attr_accessor :userName
  attr_accessor :state
  attr_accessor :alarm
  attr_accessor :scheduledTask
  attr_accessor :eventChainId
  attr_accessor :tag
  attr_accessor :parentTaskKey
  attr_accessor :rootTaskKey

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, time = nil, userName = nil, state = [], alarm = nil, scheduledTask = nil, eventChainId = [], tag = [], parentTaskKey = [], rootTaskKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @time = time
    @userName = userName
    @state = state
    @alarm = alarm
    @scheduledTask = scheduledTask
    @eventChainId = eventChainId
    @tag = tag
    @parentTaskKey = parentTaskKey
    @rootTaskKey = rootTaskKey
  end
end

# {urn:vim25}TaskInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   task - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   description - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   descriptionId - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entityName - SOAP::SOAPString
#   locked - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   state - Bosh::Director::CloudProviders::VSphere::TaskInfoState
#   cancelled - SOAP::SOAPBoolean
#   cancelable - SOAP::SOAPBoolean
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   result - (any)
#   progress - SOAP::SOAPInt
#   reason - Bosh::Director::CloudProviders::VSphere::TaskReason
#   queueTime - SOAP::SOAPDateTime
#   startTime - SOAP::SOAPDateTime
#   completeTime - SOAP::SOAPDateTime
#   eventChainId - SOAP::SOAPInt
#   changeTag - SOAP::SOAPString
#   parentTaskKey - SOAP::SOAPString
#   rootTaskKey - SOAP::SOAPString
class TaskInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :task
  attr_accessor :description
  attr_accessor :name
  attr_accessor :descriptionId
  attr_accessor :entity
  attr_accessor :entityName
  attr_accessor :locked
  attr_accessor :state
  attr_accessor :cancelled
  attr_accessor :cancelable
  attr_accessor :error
  attr_accessor :result
  attr_accessor :progress
  attr_accessor :reason
  attr_accessor :queueTime
  attr_accessor :startTime
  attr_accessor :completeTime
  attr_accessor :eventChainId
  attr_accessor :changeTag
  attr_accessor :parentTaskKey
  attr_accessor :rootTaskKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, task = nil, description = nil, name = nil, descriptionId = nil, entity = nil, entityName = nil, locked = [], state = nil, cancelled = nil, cancelable = nil, error = nil, result = nil, progress = nil, reason = nil, queueTime = nil, startTime = nil, completeTime = nil, eventChainId = nil, changeTag = nil, parentTaskKey = nil, rootTaskKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @task = task
    @description = description
    @name = name
    @descriptionId = descriptionId
    @entity = entity
    @entityName = entityName
    @locked = locked
    @state = state
    @cancelled = cancelled
    @cancelable = cancelable
    @error = error
    @result = result
    @progress = progress
    @reason = reason
    @queueTime = queueTime
    @startTime = startTime
    @completeTime = completeTime
    @eventChainId = eventChainId
    @changeTag = changeTag
    @parentTaskKey = parentTaskKey
    @rootTaskKey = rootTaskKey
  end
end

# {urn:vim25}TaskReason
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class TaskReason < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}TaskReasonSystem
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class TaskReasonSystem < TaskReason
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}TaskReasonUser
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   userName - SOAP::SOAPString
class TaskReasonUser < TaskReason
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :userName

  def initialize(dynamicType = nil, dynamicProperty = [], userName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @userName = userName
  end
end

# {urn:vim25}TaskReasonAlarm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   alarmName - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entityName - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TaskReasonAlarm < TaskReason
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :alarmName
  attr_accessor :alarm
  attr_accessor :entityName
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], alarmName = nil, alarm = nil, entityName = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @alarmName = alarmName
    @alarm = alarm
    @entityName = entityName
    @entity = entity
  end
end

# {urn:vim25}TaskReasonSchedule
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TaskReasonSchedule < TaskReason
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :scheduledTask

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, scheduledTask = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @scheduledTask = scheduledTask
  end
end

# {urn:vim25}UpdateVirtualMachineFilesResultFailedVmFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmFile - SOAP::SOAPString
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class UpdateVirtualMachineFilesResultFailedVmFileInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmFile
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], vmFile = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmFile = vmFile
    @fault = fault
  end
end

# {urn:vim25}UpdateVirtualMachineFilesResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   failedVmFile - Bosh::Director::CloudProviders::VSphere::UpdateVirtualMachineFilesResultFailedVmFileInfo
class UpdateVirtualMachineFilesResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :failedVmFile

  def initialize(dynamicType = nil, dynamicProperty = [], failedVmFile = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @failedVmFile = failedVmFile
  end
end

# {urn:vim25}UserSearchResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   principal - SOAP::SOAPString
#   fullName - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
class UserSearchResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :principal
  attr_accessor :fullName
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], principal = nil, fullName = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @principal = principal
    @fullName = fullName
    @group = group
  end
end

# {urn:vim25}PosixUserSearchResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   principal - SOAP::SOAPString
#   fullName - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
#   id - SOAP::SOAPInt
#   shellAccess - SOAP::SOAPBoolean
class PosixUserSearchResult < UserSearchResult
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :principal
  attr_accessor :fullName
  attr_accessor :group
  attr_accessor :id
  attr_accessor :shellAccess

  def initialize(dynamicType = nil, dynamicProperty = [], principal = nil, fullName = nil, group = nil, id = nil, shellAccess = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @principal = principal
    @fullName = fullName
    @group = group
    @id = id
    @shellAccess = shellAccess
  end
end

# {urn:vim25}VirtualAppLinkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destroyWithParent - SOAP::SOAPBoolean
class VirtualAppLinkInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :destroyWithParent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, destroyWithParent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @destroyWithParent = destroyWithParent
  end
end

# {urn:vim25}VirtualDiskSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskType - SOAP::SOAPString
#   adapterType - SOAP::SOAPString
class VirtualDiskSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskType
  attr_accessor :adapterType

  def initialize(dynamicType = nil, dynamicProperty = [], diskType = nil, adapterType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskType = diskType
    @adapterType = adapterType
  end
end

# {urn:vim25}FileBackedVirtualDiskSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskType - SOAP::SOAPString
#   adapterType - SOAP::SOAPString
#   capacityKb - SOAP::SOAPLong
class FileBackedVirtualDiskSpec < VirtualDiskSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskType
  attr_accessor :adapterType
  attr_accessor :capacityKb

  def initialize(dynamicType = nil, dynamicProperty = [], diskType = nil, adapterType = nil, capacityKb = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskType = diskType
    @adapterType = adapterType
    @capacityKb = capacityKb
  end
end

# {urn:vim25}DeviceBackedVirtualDiskSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskType - SOAP::SOAPString
#   adapterType - SOAP::SOAPString
#   device - SOAP::SOAPString
class DeviceBackedVirtualDiskSpec < VirtualDiskSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskType
  attr_accessor :adapterType
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], diskType = nil, adapterType = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskType = diskType
    @adapterType = adapterType
    @device = device
  end
end

# {urn:vim25}VirtualMachineTicket
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ticket - SOAP::SOAPString
#   cfgFile - SOAP::SOAPString
#   host - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   sslThumbprint - SOAP::SOAPString
class VirtualMachineTicket < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ticket
  attr_accessor :cfgFile
  attr_accessor :host
  attr_accessor :port
  attr_accessor :sslThumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], ticket = nil, cfgFile = nil, host = nil, port = nil, sslThumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ticket = ticket
    @cfgFile = cfgFile
    @host = host
    @port = port
    @sslThumbprint = sslThumbprint
  end
end

# {urn:vim25}VirtualMachineMksTicket
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ticket - SOAP::SOAPString
#   cfgFile - SOAP::SOAPString
#   host - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   sslThumbprint - SOAP::SOAPString
class VirtualMachineMksTicket < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ticket
  attr_accessor :cfgFile
  attr_accessor :host
  attr_accessor :port
  attr_accessor :sslThumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], ticket = nil, cfgFile = nil, host = nil, port = nil, sslThumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ticket = ticket
    @cfgFile = cfgFile
    @host = host
    @port = port
    @sslThumbprint = sslThumbprint
  end
end

# {urn:vim25}VirtualMachineDisplayTopology
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   x - SOAP::SOAPInt
#   y - SOAP::SOAPInt
#   width - SOAP::SOAPInt
#   height - SOAP::SOAPInt
class VirtualMachineDisplayTopology < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :x
  attr_accessor :y
  attr_accessor :width
  attr_accessor :height

  def initialize(dynamicType = nil, dynamicProperty = [], x = nil, y = nil, width = nil, height = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @x = x
    @y = y
    @width = width
    @height = height
  end
end

# {urn:vim25}DiskChangeExtent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   start - SOAP::SOAPLong
#   length - SOAP::SOAPLong
class DiskChangeExtent < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :start
  attr_accessor :length

  def initialize(dynamicType = nil, dynamicProperty = [], start = nil, length = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @start = start
    @length = length
  end
end

# {urn:vim25}DiskChangeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   startOffset - SOAP::SOAPLong
#   length - SOAP::SOAPLong
#   changedArea - Bosh::Director::CloudProviders::VSphere::DiskChangeExtent
class DiskChangeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :startOffset
  attr_accessor :length
  attr_accessor :changedArea

  def initialize(dynamicType = nil, dynamicProperty = [], startOffset = nil, length = nil, changedArea = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @startOffset = startOffset
    @length = length
    @changedArea = changedArea
  end
end

# {urn:vim25}Action
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class Action < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}MethodAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   argument - Bosh::Director::CloudProviders::VSphere::MethodActionArgument
class MethodAction < Action
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :argument

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, argument = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @argument = argument
  end
end

# {urn:vim25}SendEmailAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   toList - SOAP::SOAPString
#   ccList - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   body - SOAP::SOAPString
class SendEmailAction < Action
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :toList
  attr_accessor :ccList
  attr_accessor :subject
  attr_accessor :body

  def initialize(dynamicType = nil, dynamicProperty = [], toList = nil, ccList = nil, subject = nil, body = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @toList = toList
    @ccList = ccList
    @subject = subject
    @body = body
  end
end

# {urn:vim25}SendSNMPAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class SendSNMPAction < Action
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}RunScriptAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   script - SOAP::SOAPString
class RunScriptAction < Action
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :script

  def initialize(dynamicType = nil, dynamicProperty = [], script = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @script = script
  end
end

# {urn:vim25}CreateTaskAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   taskTypeId - SOAP::SOAPString
#   cancelable - SOAP::SOAPBoolean
class CreateTaskAction < Action
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :taskTypeId
  attr_accessor :cancelable

  def initialize(dynamicType = nil, dynamicProperty = [], taskTypeId = nil, cancelable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @taskTypeId = taskTypeId
    @cancelable = cancelable
  end
end

# {urn:vim25}MethodActionArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   value - (any)
class MethodActionArgument < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @value = value
  end
end

# {urn:vim25}AlarmAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class AlarmAction < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}AlarmTriggeringAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   action - Bosh::Director::CloudProviders::VSphere::Action
#   transitionSpecs - Bosh::Director::CloudProviders::VSphere::AlarmTriggeringActionTransitionSpec
#   green2yellow - SOAP::SOAPBoolean
#   yellow2red - SOAP::SOAPBoolean
#   red2yellow - SOAP::SOAPBoolean
#   yellow2green - SOAP::SOAPBoolean
class AlarmTriggeringAction < AlarmAction
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :action
  attr_accessor :transitionSpecs
  attr_accessor :green2yellow
  attr_accessor :yellow2red
  attr_accessor :red2yellow
  attr_accessor :yellow2green

  def initialize(dynamicType = nil, dynamicProperty = [], action = nil, transitionSpecs = [], green2yellow = nil, yellow2red = nil, red2yellow = nil, yellow2green = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @action = action
    @transitionSpecs = transitionSpecs
    @green2yellow = green2yellow
    @yellow2red = yellow2red
    @red2yellow = red2yellow
    @yellow2green = yellow2green
  end
end

# {urn:vim25}GroupAlarmAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   action - Bosh::Director::CloudProviders::VSphere::AlarmAction
class GroupAlarmAction < AlarmAction
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :action

  def initialize(dynamicType = nil, dynamicProperty = [], action = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @action = action
  end
end

# {urn:vim25}AlarmTriggeringActionTransitionSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   startState - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   finalState - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   repeats - SOAP::SOAPBoolean
class AlarmTriggeringActionTransitionSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :startState
  attr_accessor :finalState
  attr_accessor :repeats

  def initialize(dynamicType = nil, dynamicProperty = [], startState = nil, finalState = nil, repeats = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @startState = startState
    @finalState = finalState
    @repeats = repeats
  end
end

# {urn:vim25}AlarmDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expr - Bosh::Director::CloudProviders::VSphere::TypeDescription
#   stateOperator - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   metricOperator - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   hostSystemConnectionState - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   virtualMachinePowerState - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   datastoreConnectionState - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   hostSystemPowerState - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   virtualMachineGuestHeartbeatStatus - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   entityStatus - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   action - Bosh::Director::CloudProviders::VSphere::TypeDescription
class AlarmDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expr
  attr_accessor :stateOperator
  attr_accessor :metricOperator
  attr_accessor :hostSystemConnectionState
  attr_accessor :virtualMachinePowerState
  attr_accessor :datastoreConnectionState
  attr_accessor :hostSystemPowerState
  attr_accessor :virtualMachineGuestHeartbeatStatus
  attr_accessor :entityStatus
  attr_accessor :action

  def initialize(dynamicType = nil, dynamicProperty = [], expr = [], stateOperator = [], metricOperator = [], hostSystemConnectionState = [], virtualMachinePowerState = [], datastoreConnectionState = [], hostSystemPowerState = [], virtualMachineGuestHeartbeatStatus = [], entityStatus = [], action = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expr = expr
    @stateOperator = stateOperator
    @metricOperator = metricOperator
    @hostSystemConnectionState = hostSystemConnectionState
    @virtualMachinePowerState = virtualMachinePowerState
    @datastoreConnectionState = datastoreConnectionState
    @hostSystemPowerState = hostSystemPowerState
    @virtualMachineGuestHeartbeatStatus = virtualMachineGuestHeartbeatStatus
    @entityStatus = entityStatus
    @action = action
  end
end

# {urn:vim25}AlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class AlarmExpression < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}AndAlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expression - Bosh::Director::CloudProviders::VSphere::AlarmExpression
class AndAlarmExpression < AlarmExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expression

  def initialize(dynamicType = nil, dynamicProperty = [], expression = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expression = expression
  end
end

# {urn:vim25}OrAlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expression - Bosh::Director::CloudProviders::VSphere::AlarmExpression
class OrAlarmExpression < AlarmExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expression

  def initialize(dynamicType = nil, dynamicProperty = [], expression = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expression = expression
  end
end

# {urn:vim25}StateAlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operator - Bosh::Director::CloudProviders::VSphere::StateAlarmOperator
#   type - SOAP::SOAPString
#   statePath - SOAP::SOAPString
#   yellow - SOAP::SOAPString
#   red - SOAP::SOAPString
class StateAlarmExpression < AlarmExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operator
  attr_accessor :type
  attr_accessor :statePath
  attr_accessor :yellow
  attr_accessor :red

  def initialize(dynamicType = nil, dynamicProperty = [], operator = nil, type = nil, statePath = nil, yellow = nil, red = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operator = operator
    @type = type
    @statePath = statePath
    @yellow = yellow
    @red = red
  end
end

# {urn:vim25}EventAlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   comparisons - Bosh::Director::CloudProviders::VSphere::EventAlarmExpressionComparison
#   eventType - SOAP::SOAPString
#   eventTypeId - SOAP::SOAPString
#   objectType - SOAP::SOAPString
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
class EventAlarmExpression < AlarmExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :comparisons
  attr_accessor :eventType
  attr_accessor :eventTypeId
  attr_accessor :objectType
  attr_accessor :status

  def initialize(dynamicType = nil, dynamicProperty = [], comparisons = [], eventType = nil, eventTypeId = nil, objectType = nil, status = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @comparisons = comparisons
    @eventType = eventType
    @eventTypeId = eventTypeId
    @objectType = objectType
    @status = status
  end
end

# {urn:vim25}MetricAlarmExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operator - Bosh::Director::CloudProviders::VSphere::MetricAlarmOperator
#   type - SOAP::SOAPString
#   metric - Bosh::Director::CloudProviders::VSphere::PerfMetricId
#   yellow - SOAP::SOAPInt
#   yellowInterval - SOAP::SOAPInt
#   red - SOAP::SOAPInt
#   redInterval - SOAP::SOAPInt
class MetricAlarmExpression < AlarmExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operator
  attr_accessor :type
  attr_accessor :metric
  attr_accessor :yellow
  attr_accessor :yellowInterval
  attr_accessor :red
  attr_accessor :redInterval

  def initialize(dynamicType = nil, dynamicProperty = [], operator = nil, type = nil, metric = nil, yellow = nil, yellowInterval = nil, red = nil, redInterval = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operator = operator
    @type = type
    @metric = metric
    @yellow = yellow
    @yellowInterval = yellowInterval
    @red = red
    @redInterval = redInterval
  end
end

# {urn:vim25}EventAlarmExpressionComparison
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   attributeName - SOAP::SOAPString
#   operator - SOAP::SOAPString
#   value - SOAP::SOAPString
class EventAlarmExpressionComparison < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :attributeName
  attr_accessor :operator
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], attributeName = nil, operator = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @attributeName = attributeName
    @operator = operator
    @value = value
  end
end

# {urn:vim25}AlarmSetting
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   toleranceRange - SOAP::SOAPInt
#   reportingFrequency - SOAP::SOAPInt
class AlarmSetting < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :toleranceRange
  attr_accessor :reportingFrequency

  def initialize(dynamicType = nil, dynamicProperty = [], toleranceRange = nil, reportingFrequency = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @toleranceRange = toleranceRange
    @reportingFrequency = reportingFrequency
  end
end

# {urn:vim25}AlarmSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   expression - Bosh::Director::CloudProviders::VSphere::AlarmExpression
#   action - Bosh::Director::CloudProviders::VSphere::AlarmAction
#   actionFrequency - SOAP::SOAPInt
#   setting - Bosh::Director::CloudProviders::VSphere::AlarmSetting
class AlarmSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description
  attr_accessor :enabled
  attr_accessor :expression
  attr_accessor :action
  attr_accessor :actionFrequency
  attr_accessor :setting

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil, enabled = nil, expression = nil, action = nil, actionFrequency = nil, setting = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
    @enabled = enabled
    @expression = expression
    @action = action
    @actionFrequency = actionFrequency
    @setting = setting
  end
end

# {urn:vim25}AlarmInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   expression - Bosh::Director::CloudProviders::VSphere::AlarmExpression
#   action - Bosh::Director::CloudProviders::VSphere::AlarmAction
#   actionFrequency - SOAP::SOAPInt
#   setting - Bosh::Director::CloudProviders::VSphere::AlarmSetting
#   key - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   lastModifiedTime - SOAP::SOAPDateTime
#   lastModifiedUser - SOAP::SOAPString
#   creationEventId - SOAP::SOAPInt
class AlarmInfo < AlarmSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description
  attr_accessor :enabled
  attr_accessor :expression
  attr_accessor :action
  attr_accessor :actionFrequency
  attr_accessor :setting
  attr_accessor :key
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :lastModifiedTime
  attr_accessor :lastModifiedUser
  attr_accessor :creationEventId

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil, enabled = nil, expression = nil, action = nil, actionFrequency = nil, setting = nil, key = nil, alarm = nil, entity = nil, lastModifiedTime = nil, lastModifiedUser = nil, creationEventId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
    @enabled = enabled
    @expression = expression
    @action = action
    @actionFrequency = actionFrequency
    @setting = setting
    @key = key
    @alarm = alarm
    @entity = entity
    @lastModifiedTime = lastModifiedTime
    @lastModifiedUser = lastModifiedUser
    @creationEventId = creationEventId
  end
end

# {urn:vim25}AlarmState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   time - SOAP::SOAPDateTime
#   acknowledged - SOAP::SOAPBoolean
#   acknowledgedByUser - SOAP::SOAPString
#   acknowledgedTime - SOAP::SOAPDateTime
class AlarmState < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :entity
  attr_accessor :alarm
  attr_accessor :overallStatus
  attr_accessor :time
  attr_accessor :acknowledged
  attr_accessor :acknowledgedByUser
  attr_accessor :acknowledgedTime

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, entity = nil, alarm = nil, overallStatus = nil, time = nil, acknowledged = nil, acknowledgedByUser = nil, acknowledgedTime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @entity = entity
    @alarm = alarm
    @overallStatus = overallStatus
    @time = time
    @acknowledged = acknowledged
    @acknowledgedByUser = acknowledgedByUser
    @acknowledgedTime = acknowledgedTime
  end
end

# {urn:vim25}ClusterAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterAction < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :target

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, target = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @target = target
  end
end

# {urn:vim25}ClusterHostPowerAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   operationType - Bosh::Director::CloudProviders::VSphere::HostPowerOperationType
#   powerConsumptionWatt - SOAP::SOAPInt
#   cpuCapacityMHz - SOAP::SOAPInt
#   memCapacityMB - SOAP::SOAPInt
class ClusterHostPowerAction < ClusterAction
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :target
  attr_accessor :operationType
  attr_accessor :powerConsumptionWatt
  attr_accessor :cpuCapacityMHz
  attr_accessor :memCapacityMB

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, target = nil, operationType = nil, powerConsumptionWatt = nil, cpuCapacityMHz = nil, memCapacityMB = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @target = target
    @operationType = operationType
    @powerConsumptionWatt = powerConsumptionWatt
    @cpuCapacityMHz = cpuCapacityMHz
    @memCapacityMB = memCapacityMB
  end
end

# {urn:vim25}ClusterInitialPlacementAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   targetHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterInitialPlacementAction < ClusterAction
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :target
  attr_accessor :targetHost
  attr_accessor :pool

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, target = nil, targetHost = nil, pool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @target = target
    @targetHost = targetHost
    @pool = pool
  end
end

# {urn:vim25}ClusterMigrationAction
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   drsMigration - Bosh::Director::CloudProviders::VSphere::ClusterDrsMigration
class ClusterMigrationAction < ClusterAction
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :target
  attr_accessor :drsMigration

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, target = nil, drsMigration = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @target = target
    @drsMigration = drsMigration
  end
end

# {urn:vim25}ClusterActionHistory
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   action - Bosh::Director::CloudProviders::VSphere::ClusterAction
#   time - SOAP::SOAPDateTime
class ClusterActionHistory < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :action
  attr_accessor :time

  def initialize(dynamicType = nil, dynamicProperty = [], action = nil, time = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @action = action
    @time = time
  end
end

# {urn:vim25}ClusterAttemptedVmInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   task - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterAttemptedVmInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :task

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, task = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @task = task
  end
end

# {urn:vim25}ClusterConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dasConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasConfigInfo
#   dasVmConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasVmConfigInfo
#   drsConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsConfigInfo
#   drsVmConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsVmConfigInfo
#   rule - Bosh::Director::CloudProviders::VSphere::ClusterRuleInfo
class ClusterConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dasConfig
  attr_accessor :dasVmConfig
  attr_accessor :drsConfig
  attr_accessor :drsVmConfig
  attr_accessor :rule

  def initialize(dynamicType = nil, dynamicProperty = [], dasConfig = nil, dasVmConfig = [], drsConfig = nil, drsVmConfig = [], rule = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dasConfig = dasConfig
    @dasVmConfig = dasVmConfig
    @drsConfig = drsConfig
    @drsVmConfig = drsVmConfig
    @rule = rule
  end
end

# {urn:vim25}ClusterDrsConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   enableVmBehaviorOverrides - SOAP::SOAPBoolean
#   defaultVmBehavior - Bosh::Director::CloudProviders::VSphere::DrsBehavior
#   vmotionRate - SOAP::SOAPInt
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
class ClusterDrsConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :enableVmBehaviorOverrides
  attr_accessor :defaultVmBehavior
  attr_accessor :vmotionRate
  attr_accessor :option

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, enableVmBehaviorOverrides = nil, defaultVmBehavior = nil, vmotionRate = nil, option = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @enableVmBehaviorOverrides = enableVmBehaviorOverrides
    @defaultVmBehavior = defaultVmBehavior
    @vmotionRate = vmotionRate
    @option = option
  end
end

# {urn:vim25}ClusterDrsVmConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   enabled - SOAP::SOAPBoolean
#   behavior - Bosh::Director::CloudProviders::VSphere::DrsBehavior
class ClusterDrsVmConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :enabled
  attr_accessor :behavior

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, enabled = nil, behavior = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @enabled = enabled
    @behavior = behavior
  end
end

# {urn:vim25}ClusterDpmConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   defaultDpmBehavior - Bosh::Director::CloudProviders::VSphere::DpmBehavior
#   hostPowerActionRate - SOAP::SOAPInt
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
class ClusterDpmConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :defaultDpmBehavior
  attr_accessor :hostPowerActionRate
  attr_accessor :option

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, defaultDpmBehavior = nil, hostPowerActionRate = nil, option = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @defaultDpmBehavior = defaultDpmBehavior
    @hostPowerActionRate = hostPowerActionRate
    @option = option
  end
end

# {urn:vim25}ClusterDpmHostConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   enabled - SOAP::SOAPBoolean
#   behavior - Bosh::Director::CloudProviders::VSphere::DpmBehavior
class ClusterDpmHostConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :enabled
  attr_accessor :behavior

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, enabled = nil, behavior = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @enabled = enabled
    @behavior = behavior
  end
end

# {urn:vim25}ClusterConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dasConfig - Bosh::Director::CloudProviders::VSphere::ClusterDasConfigInfo
#   dasVmConfigSpec - Bosh::Director::CloudProviders::VSphere::ClusterDasVmConfigSpec
#   drsConfig - Bosh::Director::CloudProviders::VSphere::ClusterDrsConfigInfo
#   drsVmConfigSpec - Bosh::Director::CloudProviders::VSphere::ClusterDrsVmConfigSpec
#   rulesSpec - Bosh::Director::CloudProviders::VSphere::ClusterRuleSpec
class ClusterConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dasConfig
  attr_accessor :dasVmConfigSpec
  attr_accessor :drsConfig
  attr_accessor :drsVmConfigSpec
  attr_accessor :rulesSpec

  def initialize(dynamicType = nil, dynamicProperty = [], dasConfig = nil, dasVmConfigSpec = [], drsConfig = nil, drsVmConfigSpec = [], rulesSpec = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dasConfig = dasConfig
    @dasVmConfigSpec = dasVmConfigSpec
    @drsConfig = drsConfig
    @drsVmConfigSpec = drsVmConfigSpec
    @rulesSpec = rulesSpec
  end
end

# {urn:vim25}ClusterDasAamNodeState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   configState - SOAP::SOAPString
#   runtimeState - SOAP::SOAPString
class ClusterDasAamNodeState < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :name
  attr_accessor :configState
  attr_accessor :runtimeState

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, name = nil, configState = nil, runtimeState = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @name = name
    @configState = configState
    @runtimeState = runtimeState
  end
end

# {urn:vim25}ClusterDasAdmissionControlInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class ClusterDasAdmissionControlInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}ClusterFailoverHostAdmissionControlInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostStatus - Bosh::Director::CloudProviders::VSphere::ClusterFailoverHostAdmissionControlInfoHostStatus
class ClusterFailoverHostAdmissionControlInfo < ClusterDasAdmissionControlInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostStatus

  def initialize(dynamicType = nil, dynamicProperty = [], hostStatus = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostStatus = hostStatus
  end
end

# {urn:vim25}ClusterFailoverLevelAdmissionControlInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   currentFailoverLevel - SOAP::SOAPInt
class ClusterFailoverLevelAdmissionControlInfo < ClusterDasAdmissionControlInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :currentFailoverLevel

  def initialize(dynamicType = nil, dynamicProperty = [], currentFailoverLevel = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @currentFailoverLevel = currentFailoverLevel
  end
end

# {urn:vim25}ClusterFailoverResourcesAdmissionControlInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   currentCpuFailoverResourcesPercent - SOAP::SOAPInt
#   currentMemoryFailoverResourcesPercent - SOAP::SOAPInt
class ClusterFailoverResourcesAdmissionControlInfo < ClusterDasAdmissionControlInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :currentCpuFailoverResourcesPercent
  attr_accessor :currentMemoryFailoverResourcesPercent

  def initialize(dynamicType = nil, dynamicProperty = [], currentCpuFailoverResourcesPercent = nil, currentMemoryFailoverResourcesPercent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @currentCpuFailoverResourcesPercent = currentCpuFailoverResourcesPercent
    @currentMemoryFailoverResourcesPercent = currentMemoryFailoverResourcesPercent
  end
end

# {urn:vim25}ClusterDasAdmissionControlPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class ClusterDasAdmissionControlPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}ClusterFailoverHostAdmissionControlPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   failoverHosts - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterFailoverHostAdmissionControlPolicy < ClusterDasAdmissionControlPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :failoverHosts

  def initialize(dynamicType = nil, dynamicProperty = [], failoverHosts = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @failoverHosts = failoverHosts
  end
end

# {urn:vim25}ClusterFailoverLevelAdmissionControlPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   failoverLevel - SOAP::SOAPInt
class ClusterFailoverLevelAdmissionControlPolicy < ClusterDasAdmissionControlPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :failoverLevel

  def initialize(dynamicType = nil, dynamicProperty = [], failoverLevel = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @failoverLevel = failoverLevel
  end
end

# {urn:vim25}ClusterFailoverResourcesAdmissionControlPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   cpuFailoverResourcesPercent - SOAP::SOAPInt
#   memoryFailoverResourcesPercent - SOAP::SOAPInt
class ClusterFailoverResourcesAdmissionControlPolicy < ClusterDasAdmissionControlPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :cpuFailoverResourcesPercent
  attr_accessor :memoryFailoverResourcesPercent

  def initialize(dynamicType = nil, dynamicProperty = [], cpuFailoverResourcesPercent = nil, memoryFailoverResourcesPercent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @cpuFailoverResourcesPercent = cpuFailoverResourcesPercent
    @memoryFailoverResourcesPercent = memoryFailoverResourcesPercent
  end
end

# {urn:vim25}ClusterDasAdvancedRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dasHostInfo - Bosh::Director::CloudProviders::VSphere::ClusterDasHostInfo
class ClusterDasAdvancedRuntimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dasHostInfo

  def initialize(dynamicType = nil, dynamicProperty = [], dasHostInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dasHostInfo = dasHostInfo
  end
end

# {urn:vim25}ClusterDasFailoverLevelAdvancedRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dasHostInfo - Bosh::Director::CloudProviders::VSphere::ClusterDasHostInfo
#   slotInfo - Bosh::Director::CloudProviders::VSphere::ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo
#   totalSlots - SOAP::SOAPInt
#   usedSlots - SOAP::SOAPInt
#   unreservedSlots - SOAP::SOAPInt
#   totalVms - SOAP::SOAPInt
#   totalHosts - SOAP::SOAPInt
#   totalGoodHosts - SOAP::SOAPInt
#   hostSlots - Bosh::Director::CloudProviders::VSphere::ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots
class ClusterDasFailoverLevelAdvancedRuntimeInfo < ClusterDasAdvancedRuntimeInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dasHostInfo
  attr_accessor :slotInfo
  attr_accessor :totalSlots
  attr_accessor :usedSlots
  attr_accessor :unreservedSlots
  attr_accessor :totalVms
  attr_accessor :totalHosts
  attr_accessor :totalGoodHosts
  attr_accessor :hostSlots

  def initialize(dynamicType = nil, dynamicProperty = [], dasHostInfo = nil, slotInfo = nil, totalSlots = nil, usedSlots = nil, unreservedSlots = nil, totalVms = nil, totalHosts = nil, totalGoodHosts = nil, hostSlots = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dasHostInfo = dasHostInfo
    @slotInfo = slotInfo
    @totalSlots = totalSlots
    @usedSlots = usedSlots
    @unreservedSlots = unreservedSlots
    @totalVms = totalVms
    @totalHosts = totalHosts
    @totalGoodHosts = totalGoodHosts
    @hostSlots = hostSlots
  end
end

# {urn:vim25}ClusterDasConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   vmMonitoring - SOAP::SOAPString
#   hostMonitoring - SOAP::SOAPString
#   failoverLevel - SOAP::SOAPInt
#   admissionControlPolicy - Bosh::Director::CloudProviders::VSphere::ClusterDasAdmissionControlPolicy
#   admissionControlEnabled - SOAP::SOAPBoolean
#   defaultVmSettings - Bosh::Director::CloudProviders::VSphere::ClusterDasVmSettings
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
class ClusterDasConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :vmMonitoring
  attr_accessor :hostMonitoring
  attr_accessor :failoverLevel
  attr_accessor :admissionControlPolicy
  attr_accessor :admissionControlEnabled
  attr_accessor :defaultVmSettings
  attr_accessor :option

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, vmMonitoring = nil, hostMonitoring = nil, failoverLevel = nil, admissionControlPolicy = nil, admissionControlEnabled = nil, defaultVmSettings = nil, option = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @vmMonitoring = vmMonitoring
    @hostMonitoring = hostMonitoring
    @failoverLevel = failoverLevel
    @admissionControlPolicy = admissionControlPolicy
    @admissionControlEnabled = admissionControlEnabled
    @defaultVmSettings = defaultVmSettings
    @option = option
  end
end

# {urn:vim25}ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numVcpus - SOAP::SOAPInt
#   cpuMHz - SOAP::SOAPInt
#   memoryMB - SOAP::SOAPInt
class ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numVcpus
  attr_accessor :cpuMHz
  attr_accessor :memoryMB

  def initialize(dynamicType = nil, dynamicProperty = [], numVcpus = nil, cpuMHz = nil, memoryMB = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numVcpus = numVcpus
    @cpuMHz = cpuMHz
    @memoryMB = memoryMB
  end
end

# {urn:vim25}ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   slots - SOAP::SOAPInt
class ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :slots

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, slots = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @slots = slots
  end
end

# {urn:vim25}ClusterDasHostInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class ClusterDasHostInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}ClusterDasAamHostInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostDasState - Bosh::Director::CloudProviders::VSphere::ClusterDasAamNodeState
#   primaryHosts - SOAP::SOAPString
class ClusterDasAamHostInfo < ClusterDasHostInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostDasState
  attr_accessor :primaryHosts

  def initialize(dynamicType = nil, dynamicProperty = [], hostDasState = [], primaryHosts = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostDasState = hostDasState
    @primaryHosts = primaryHosts
  end
end

# {urn:vim25}ClusterDasHostRecommendation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   drsRating - SOAP::SOAPInt
class ClusterDasHostRecommendation < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :drsRating

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, drsRating = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @drsRating = drsRating
  end
end

# {urn:vim25}ClusterDasVmConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   restartPriority - Bosh::Director::CloudProviders::VSphere::DasVmPriority
#   powerOffOnIsolation - SOAP::SOAPBoolean
#   dasSettings - Bosh::Director::CloudProviders::VSphere::ClusterDasVmSettings
class ClusterDasVmConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :restartPriority
  attr_accessor :powerOffOnIsolation
  attr_accessor :dasSettings

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, restartPriority = nil, powerOffOnIsolation = nil, dasSettings = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @restartPriority = restartPriority
    @powerOffOnIsolation = powerOffOnIsolation
    @dasSettings = dasSettings
  end
end

# {urn:vim25}ClusterDasVmSettings
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   restartPriority - SOAP::SOAPString
#   isolationResponse - SOAP::SOAPString
#   vmToolsMonitoringSettings - Bosh::Director::CloudProviders::VSphere::ClusterVmToolsMonitoringSettings
class ClusterDasVmSettings < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :restartPriority
  attr_accessor :isolationResponse
  attr_accessor :vmToolsMonitoringSettings

  def initialize(dynamicType = nil, dynamicProperty = [], restartPriority = nil, isolationResponse = nil, vmToolsMonitoringSettings = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @restartPriority = restartPriority
    @isolationResponse = isolationResponse
    @vmToolsMonitoringSettings = vmToolsMonitoringSettings
  end
end

# {urn:vim25}ClusterDrsFaultsFaultsByVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class ClusterDrsFaultsFaultsByVm < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, fault = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @fault = fault
  end
end

# {urn:vim25}ClusterDrsFaults
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   reason - SOAP::SOAPString
#   faultsByVm - Bosh::Director::CloudProviders::VSphere::ClusterDrsFaultsFaultsByVm
class ClusterDrsFaults < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :reason
  attr_accessor :faultsByVm

  def initialize(dynamicType = nil, dynamicProperty = [], reason = nil, faultsByVm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @reason = reason
    @faultsByVm = faultsByVm
  end
end

# {urn:vim25}ClusterDrsMigration
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   time - SOAP::SOAPDateTime
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cpuLoad - SOAP::SOAPInt
#   memoryLoad - SOAP::SOAPLong
#   source - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sourceCpuLoad - SOAP::SOAPInt
#   sourceMemoryLoad - SOAP::SOAPLong
#   destination - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destinationCpuLoad - SOAP::SOAPInt
#   destinationMemoryLoad - SOAP::SOAPLong
class ClusterDrsMigration < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :time
  attr_accessor :vm
  attr_accessor :cpuLoad
  attr_accessor :memoryLoad
  attr_accessor :source
  attr_accessor :sourceCpuLoad
  attr_accessor :sourceMemoryLoad
  attr_accessor :destination
  attr_accessor :destinationCpuLoad
  attr_accessor :destinationMemoryLoad

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, time = nil, vm = nil, cpuLoad = nil, memoryLoad = nil, source = nil, sourceCpuLoad = nil, sourceMemoryLoad = nil, destination = nil, destinationCpuLoad = nil, destinationMemoryLoad = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @time = time
    @vm = vm
    @cpuLoad = cpuLoad
    @memoryLoad = memoryLoad
    @source = source
    @sourceCpuLoad = sourceCpuLoad
    @sourceMemoryLoad = sourceMemoryLoad
    @destination = destination
    @destinationCpuLoad = destinationCpuLoad
    @destinationMemoryLoad = destinationMemoryLoad
  end
end

# {urn:vim25}ClusterDrsRecommendation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   rating - SOAP::SOAPInt
#   reason - SOAP::SOAPString
#   reasonText - SOAP::SOAPString
#   migrationList - Bosh::Director::CloudProviders::VSphere::ClusterDrsMigration
class ClusterDrsRecommendation < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :rating
  attr_accessor :reason
  attr_accessor :reasonText
  attr_accessor :migrationList

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, rating = nil, reason = nil, reasonText = nil, migrationList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @rating = rating
    @reason = reason
    @reasonText = reasonText
    @migrationList = migrationList
  end
end

# {urn:vim25}ClusterFailoverHostAdmissionControlInfoHostStatus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
class ClusterFailoverHostAdmissionControlInfoHostStatus < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :status

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, status = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @status = status
  end
end

# {urn:vim25}ClusterGroupInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
class ClusterGroupInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
  end
end

# {urn:vim25}ClusterHostGroup
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterHostGroup < ClusterGroupInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, host = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @host = host
  end
end

# {urn:vim25}ClusterVmGroup
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterVmGroup < ClusterGroupInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, vm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @vm = vm
  end
end

# {urn:vim25}ClusterHostRecommendation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   rating - SOAP::SOAPInt
class ClusterHostRecommendation < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :rating

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, rating = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @rating = rating
  end
end

# {urn:vim25}ClusterNotAttemptedVmInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class ClusterNotAttemptedVmInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @fault = fault
  end
end

# {urn:vim25}ClusterPowerOnVmResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   attempted - Bosh::Director::CloudProviders::VSphere::ClusterAttemptedVmInfo
#   notAttempted - Bosh::Director::CloudProviders::VSphere::ClusterNotAttemptedVmInfo
#   recommendations - Bosh::Director::CloudProviders::VSphere::ClusterRecommendation
class ClusterPowerOnVmResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :attempted
  attr_accessor :notAttempted
  attr_accessor :recommendations

  def initialize(dynamicType = nil, dynamicProperty = [], attempted = [], notAttempted = [], recommendations = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @attempted = attempted
    @notAttempted = notAttempted
    @recommendations = recommendations
  end
end

# {urn:vim25}ClusterRecommendation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   type - SOAP::SOAPString
#   time - SOAP::SOAPDateTime
#   rating - SOAP::SOAPInt
#   reason - SOAP::SOAPString
#   reasonText - SOAP::SOAPString
#   prerequisite - SOAP::SOAPString
#   action - Bosh::Director::CloudProviders::VSphere::ClusterAction
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterRecommendation < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :type
  attr_accessor :time
  attr_accessor :rating
  attr_accessor :reason
  attr_accessor :reasonText
  attr_accessor :prerequisite
  attr_accessor :action
  attr_accessor :target

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, type = nil, time = nil, rating = nil, reason = nil, reasonText = nil, prerequisite = [], action = [], target = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @type = type
    @time = time
    @rating = rating
    @reason = reason
    @reasonText = reasonText
    @prerequisite = prerequisite
    @action = action
    @target = target
  end
end

# {urn:vim25}ClusterRuleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   enabled - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   mandatory - SOAP::SOAPBoolean
#   userCreated - SOAP::SOAPBoolean
#   inCompliance - SOAP::SOAPBoolean
class ClusterRuleInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :status
  attr_accessor :enabled
  attr_accessor :name
  attr_accessor :mandatory
  attr_accessor :userCreated
  attr_accessor :inCompliance

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, status = nil, enabled = nil, name = nil, mandatory = nil, userCreated = nil, inCompliance = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @status = status
    @enabled = enabled
    @name = name
    @mandatory = mandatory
    @userCreated = userCreated
    @inCompliance = inCompliance
  end
end

# {urn:vim25}ClusterAffinityRuleSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   enabled - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   mandatory - SOAP::SOAPBoolean
#   userCreated - SOAP::SOAPBoolean
#   inCompliance - SOAP::SOAPBoolean
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterAffinityRuleSpec < ClusterRuleInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :status
  attr_accessor :enabled
  attr_accessor :name
  attr_accessor :mandatory
  attr_accessor :userCreated
  attr_accessor :inCompliance
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, status = nil, enabled = nil, name = nil, mandatory = nil, userCreated = nil, inCompliance = nil, vm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @status = status
    @enabled = enabled
    @name = name
    @mandatory = mandatory
    @userCreated = userCreated
    @inCompliance = inCompliance
    @vm = vm
  end
end

# {urn:vim25}ClusterAntiAffinityRuleSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   enabled - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   mandatory - SOAP::SOAPBoolean
#   userCreated - SOAP::SOAPBoolean
#   inCompliance - SOAP::SOAPBoolean
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClusterAntiAffinityRuleSpec < ClusterRuleInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :status
  attr_accessor :enabled
  attr_accessor :name
  attr_accessor :mandatory
  attr_accessor :userCreated
  attr_accessor :inCompliance
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, status = nil, enabled = nil, name = nil, mandatory = nil, userCreated = nil, inCompliance = nil, vm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @status = status
    @enabled = enabled
    @name = name
    @mandatory = mandatory
    @userCreated = userCreated
    @inCompliance = inCompliance
    @vm = vm
  end
end

# {urn:vim25}ClusterVmHostRuleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   status - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   enabled - SOAP::SOAPBoolean
#   name - SOAP::SOAPString
#   mandatory - SOAP::SOAPBoolean
#   userCreated - SOAP::SOAPBoolean
#   inCompliance - SOAP::SOAPBoolean
#   vmGroupName - SOAP::SOAPString
#   affineHostGroupName - SOAP::SOAPString
#   antiAffineHostGroupName - SOAP::SOAPString
class ClusterVmHostRuleInfo < ClusterRuleInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :status
  attr_accessor :enabled
  attr_accessor :name
  attr_accessor :mandatory
  attr_accessor :userCreated
  attr_accessor :inCompliance
  attr_accessor :vmGroupName
  attr_accessor :affineHostGroupName
  attr_accessor :antiAffineHostGroupName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, status = nil, enabled = nil, name = nil, mandatory = nil, userCreated = nil, inCompliance = nil, vmGroupName = nil, affineHostGroupName = nil, antiAffineHostGroupName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @status = status
    @enabled = enabled
    @name = name
    @mandatory = mandatory
    @userCreated = userCreated
    @inCompliance = inCompliance
    @vmGroupName = vmGroupName
    @affineHostGroupName = affineHostGroupName
    @antiAffineHostGroupName = antiAffineHostGroupName
  end
end

# {urn:vim25}ClusterVmToolsMonitoringSettings
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   vmMonitoring - SOAP::SOAPString
#   clusterSettings - SOAP::SOAPBoolean
#   failureInterval - SOAP::SOAPInt
#   minUpTime - SOAP::SOAPInt
#   maxFailures - SOAP::SOAPInt
#   maxFailureWindow - SOAP::SOAPInt
class ClusterVmToolsMonitoringSettings < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :vmMonitoring
  attr_accessor :clusterSettings
  attr_accessor :failureInterval
  attr_accessor :minUpTime
  attr_accessor :maxFailures
  attr_accessor :maxFailureWindow

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, vmMonitoring = nil, clusterSettings = nil, failureInterval = nil, minUpTime = nil, maxFailures = nil, maxFailureWindow = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @vmMonitoring = vmMonitoring
    @clusterSettings = clusterSettings
    @failureInterval = failureInterval
    @minUpTime = minUpTime
    @maxFailures = maxFailures
    @maxFailureWindow = maxFailureWindow
  end
end

# {urn:vim25}DVPortConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - SOAP::SOAPString
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   description - SOAP::SOAPString
#   setting - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   configVersion - SOAP::SOAPString
class DVPortConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :key
  attr_accessor :name
  attr_accessor :scope
  attr_accessor :description
  attr_accessor :setting
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, key = nil, name = nil, scope = [], description = nil, setting = nil, configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @key = key
    @name = name
    @scope = scope
    @description = description
    @setting = setting
    @configVersion = configVersion
  end
end

# {urn:vim25}DVPortConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   description - SOAP::SOAPString
#   setting - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   configVersion - SOAP::SOAPString
class DVPortConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :scope
  attr_accessor :description
  attr_accessor :setting
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, scope = [], description = nil, setting = nil, configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @scope = scope
    @description = description
    @setting = setting
    @configVersion = configVersion
  end
end

# {urn:vim25}DVPortSetting
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   blocked - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   vmDirectPathGen2Allowed - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   inShapingPolicy - Bosh::Director::CloudProviders::VSphere::DVSTrafficShapingPolicy
#   outShapingPolicy - Bosh::Director::CloudProviders::VSphere::DVSTrafficShapingPolicy
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DVSVendorSpecificConfig
class DVPortSetting < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :blocked
  attr_accessor :vmDirectPathGen2Allowed
  attr_accessor :inShapingPolicy
  attr_accessor :outShapingPolicy
  attr_accessor :vendorSpecificConfig

  def initialize(dynamicType = nil, dynamicProperty = [], blocked = nil, vmDirectPathGen2Allowed = nil, inShapingPolicy = nil, outShapingPolicy = nil, vendorSpecificConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @blocked = blocked
    @vmDirectPathGen2Allowed = vmDirectPathGen2Allowed
    @inShapingPolicy = inShapingPolicy
    @outShapingPolicy = outShapingPolicy
    @vendorSpecificConfig = vendorSpecificConfig
  end
end

# {urn:vim25}VMwareDVSPortSetting
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   blocked - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   vmDirectPathGen2Allowed - Bosh::Director::CloudProviders::VSphere::BoolPolicy
#   inShapingPolicy - Bosh::Director::CloudProviders::VSphere::DVSTrafficShapingPolicy
#   outShapingPolicy - Bosh::Director::CloudProviders::VSphere::DVSTrafficShapingPolicy
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DVSVendorSpecificConfig
#   vlan - Bosh::Director::CloudProviders::VSphere::VmwareDistributedVirtualSwitchVlanSpec
#   qosTag - Bosh::Director::CloudProviders::VSphere::IntPolicy
#   uplinkTeamingPolicy - Bosh::Director::CloudProviders::VSphere::VmwareUplinkPortTeamingPolicy
#   securityPolicy - Bosh::Director::CloudProviders::VSphere::DVSSecurityPolicy
#   txUplink - Bosh::Director::CloudProviders::VSphere::BoolPolicy
class VMwareDVSPortSetting < DVPortSetting
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :blocked
  attr_accessor :vmDirectPathGen2Allowed
  attr_accessor :inShapingPolicy
  attr_accessor :outShapingPolicy
  attr_accessor :vendorSpecificConfig
  attr_accessor :vlan
  attr_accessor :qosTag
  attr_accessor :uplinkTeamingPolicy
  attr_accessor :securityPolicy
  attr_accessor :txUplink

  def initialize(dynamicType = nil, dynamicProperty = [], blocked = nil, vmDirectPathGen2Allowed = nil, inShapingPolicy = nil, outShapingPolicy = nil, vendorSpecificConfig = nil, vlan = nil, qosTag = nil, uplinkTeamingPolicy = nil, securityPolicy = nil, txUplink = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @blocked = blocked
    @vmDirectPathGen2Allowed = vmDirectPathGen2Allowed
    @inShapingPolicy = inShapingPolicy
    @outShapingPolicy = outShapingPolicy
    @vendorSpecificConfig = vendorSpecificConfig
    @vlan = vlan
    @qosTag = qosTag
    @uplinkTeamingPolicy = uplinkTeamingPolicy
    @securityPolicy = securityPolicy
    @txUplink = txUplink
  end
end

# {urn:vim25}DVPortStatus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   linkUp - SOAP::SOAPBoolean
#   blocked - SOAP::SOAPBoolean
#   vlanIds - Bosh::Director::CloudProviders::VSphere::NumericRange
#   trunkingMode - SOAP::SOAPBoolean
#   mtu - SOAP::SOAPInt
#   linkPeer - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   statusDetail - SOAP::SOAPString
#   vmDirectPathGen2Active - SOAP::SOAPBoolean
#   vmDirectPathGen2InactiveReasonNetwork - SOAP::SOAPString
#   vmDirectPathGen2InactiveReasonOther - SOAP::SOAPString
#   vmDirectPathGen2InactiveReasonExtended - SOAP::SOAPString
class DVPortStatus < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :linkUp
  attr_accessor :blocked
  attr_accessor :vlanIds
  attr_accessor :trunkingMode
  attr_accessor :mtu
  attr_accessor :linkPeer
  attr_accessor :macAddress
  attr_accessor :statusDetail
  attr_accessor :vmDirectPathGen2Active
  attr_accessor :vmDirectPathGen2InactiveReasonNetwork
  attr_accessor :vmDirectPathGen2InactiveReasonOther
  attr_accessor :vmDirectPathGen2InactiveReasonExtended

  def initialize(dynamicType = nil, dynamicProperty = [], linkUp = nil, blocked = nil, vlanIds = [], trunkingMode = nil, mtu = nil, linkPeer = nil, macAddress = nil, statusDetail = nil, vmDirectPathGen2Active = nil, vmDirectPathGen2InactiveReasonNetwork = [], vmDirectPathGen2InactiveReasonOther = [], vmDirectPathGen2InactiveReasonExtended = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @linkUp = linkUp
    @blocked = blocked
    @vlanIds = vlanIds
    @trunkingMode = trunkingMode
    @mtu = mtu
    @linkPeer = linkPeer
    @macAddress = macAddress
    @statusDetail = statusDetail
    @vmDirectPathGen2Active = vmDirectPathGen2Active
    @vmDirectPathGen2InactiveReasonNetwork = vmDirectPathGen2InactiveReasonNetwork
    @vmDirectPathGen2InactiveReasonOther = vmDirectPathGen2InactiveReasonOther
    @vmDirectPathGen2InactiveReasonExtended = vmDirectPathGen2InactiveReasonExtended
  end
end

# {urn:vim25}DVPortState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   runtimeInfo - Bosh::Director::CloudProviders::VSphere::DVPortStatus
#   stats - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortStatistics
#   vendorSpecificState - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
class DVPortState < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :runtimeInfo
  attr_accessor :stats
  attr_accessor :vendorSpecificState

  def initialize(dynamicType = nil, dynamicProperty = [], runtimeInfo = nil, stats = nil, vendorSpecificState = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @runtimeInfo = runtimeInfo
    @stats = stats
    @vendorSpecificState = vendorSpecificState
  end
end

# {urn:vim25}DistributedVirtualPort
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   config - Bosh::Director::CloudProviders::VSphere::DVPortConfigInfo
#   dvsUuid - SOAP::SOAPString
#   portgroupKey - SOAP::SOAPString
#   proxyHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   connectee - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnectee
#   conflict - SOAP::SOAPBoolean
#   conflictPortKey - SOAP::SOAPString
#   state - Bosh::Director::CloudProviders::VSphere::DVPortState
#   connectionCookie - SOAP::SOAPInt
#   lastStatusChange - SOAP::SOAPDateTime
class DistributedVirtualPort < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :config
  attr_accessor :dvsUuid
  attr_accessor :portgroupKey
  attr_accessor :proxyHost
  attr_accessor :connectee
  attr_accessor :conflict
  attr_accessor :conflictPortKey
  attr_accessor :state
  attr_accessor :connectionCookie
  attr_accessor :lastStatusChange

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, config = nil, dvsUuid = nil, portgroupKey = nil, proxyHost = nil, connectee = nil, conflict = nil, conflictPortKey = nil, state = nil, connectionCookie = nil, lastStatusChange = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @config = config
    @dvsUuid = dvsUuid
    @portgroupKey = portgroupKey
    @proxyHost = proxyHost
    @connectee = connectee
    @conflict = conflict
    @conflictPortKey = conflictPortKey
    @state = state
    @connectionCookie = connectionCookie
    @lastStatusChange = lastStatusChange
  end
end

# {urn:vim25}DVPortgroupPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   blockOverrideAllowed - SOAP::SOAPBoolean
#   shapingOverrideAllowed - SOAP::SOAPBoolean
#   vendorConfigOverrideAllowed - SOAP::SOAPBoolean
#   livePortMovingAllowed - SOAP::SOAPBoolean
#   portConfigResetAtDisconnect - SOAP::SOAPBoolean
class DVPortgroupPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :blockOverrideAllowed
  attr_accessor :shapingOverrideAllowed
  attr_accessor :vendorConfigOverrideAllowed
  attr_accessor :livePortMovingAllowed
  attr_accessor :portConfigResetAtDisconnect

  def initialize(dynamicType = nil, dynamicProperty = [], blockOverrideAllowed = nil, shapingOverrideAllowed = nil, vendorConfigOverrideAllowed = nil, livePortMovingAllowed = nil, portConfigResetAtDisconnect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @blockOverrideAllowed = blockOverrideAllowed
    @shapingOverrideAllowed = shapingOverrideAllowed
    @vendorConfigOverrideAllowed = vendorConfigOverrideAllowed
    @livePortMovingAllowed = livePortMovingAllowed
    @portConfigResetAtDisconnect = portConfigResetAtDisconnect
  end
end

# {urn:vim25}VMwareDVSPortgroupPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   blockOverrideAllowed - SOAP::SOAPBoolean
#   shapingOverrideAllowed - SOAP::SOAPBoolean
#   vendorConfigOverrideAllowed - SOAP::SOAPBoolean
#   livePortMovingAllowed - SOAP::SOAPBoolean
#   portConfigResetAtDisconnect - SOAP::SOAPBoolean
#   vlanOverrideAllowed - SOAP::SOAPBoolean
#   uplinkTeamingOverrideAllowed - SOAP::SOAPBoolean
#   securityPolicyOverrideAllowed - SOAP::SOAPBoolean
class VMwareDVSPortgroupPolicy < DVPortgroupPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :blockOverrideAllowed
  attr_accessor :shapingOverrideAllowed
  attr_accessor :vendorConfigOverrideAllowed
  attr_accessor :livePortMovingAllowed
  attr_accessor :portConfigResetAtDisconnect
  attr_accessor :vlanOverrideAllowed
  attr_accessor :uplinkTeamingOverrideAllowed
  attr_accessor :securityPolicyOverrideAllowed

  def initialize(dynamicType = nil, dynamicProperty = [], blockOverrideAllowed = nil, shapingOverrideAllowed = nil, vendorConfigOverrideAllowed = nil, livePortMovingAllowed = nil, portConfigResetAtDisconnect = nil, vlanOverrideAllowed = nil, uplinkTeamingOverrideAllowed = nil, securityPolicyOverrideAllowed = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @blockOverrideAllowed = blockOverrideAllowed
    @shapingOverrideAllowed = shapingOverrideAllowed
    @vendorConfigOverrideAllowed = vendorConfigOverrideAllowed
    @livePortMovingAllowed = livePortMovingAllowed
    @portConfigResetAtDisconnect = portConfigResetAtDisconnect
    @vlanOverrideAllowed = vlanOverrideAllowed
    @uplinkTeamingOverrideAllowed = uplinkTeamingOverrideAllowed
    @securityPolicyOverrideAllowed = securityPolicyOverrideAllowed
  end
end

# {urn:vim25}DVPortgroupConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configVersion - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numPorts - SOAP::SOAPInt
#   portNameFormat - SOAP::SOAPString
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   description - SOAP::SOAPString
#   type - SOAP::SOAPString
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   policy - Bosh::Director::CloudProviders::VSphere::DVPortgroupPolicy
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
class DVPortgroupConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configVersion
  attr_accessor :name
  attr_accessor :numPorts
  attr_accessor :portNameFormat
  attr_accessor :defaultPortConfig
  attr_accessor :description
  attr_accessor :type
  attr_accessor :scope
  attr_accessor :policy
  attr_accessor :vendorSpecificConfig

  def initialize(dynamicType = nil, dynamicProperty = [], configVersion = nil, name = nil, numPorts = nil, portNameFormat = nil, defaultPortConfig = nil, description = nil, type = nil, scope = [], policy = nil, vendorSpecificConfig = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configVersion = configVersion
    @name = name
    @numPorts = numPorts
    @portNameFormat = portNameFormat
    @defaultPortConfig = defaultPortConfig
    @description = description
    @type = type
    @scope = scope
    @policy = policy
    @vendorSpecificConfig = vendorSpecificConfig
  end
end

# {urn:vim25}DVPortgroupConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   numPorts - SOAP::SOAPInt
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPortConfig - Bosh::Director::CloudProviders::VSphere::DVPortSetting
#   description - SOAP::SOAPString
#   type - SOAP::SOAPString
#   policy - Bosh::Director::CloudProviders::VSphere::DVPortgroupPolicy
#   portNameFormat - SOAP::SOAPString
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   configVersion - SOAP::SOAPString
class DVPortgroupConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :numPorts
  attr_accessor :distributedVirtualSwitch
  attr_accessor :defaultPortConfig
  attr_accessor :description
  attr_accessor :type
  attr_accessor :policy
  attr_accessor :portNameFormat
  attr_accessor :scope
  attr_accessor :vendorSpecificConfig
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, numPorts = nil, distributedVirtualSwitch = nil, defaultPortConfig = nil, description = nil, type = nil, policy = nil, portNameFormat = nil, scope = [], vendorSpecificConfig = [], configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @numPorts = numPorts
    @distributedVirtualSwitch = distributedVirtualSwitch
    @defaultPortConfig = defaultPortConfig
    @description = description
    @type = type
    @policy = policy
    @portNameFormat = portNameFormat
    @scope = scope
    @vendorSpecificConfig = vendorSpecificConfig
    @configVersion = configVersion
  end
end

# {urn:vim25}DistributedVirtualPortgroupInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   switchName - SOAP::SOAPString
#   switchUuid - SOAP::SOAPString
#   portgroupName - SOAP::SOAPString
#   portgroupKey - SOAP::SOAPString
#   portgroupType - SOAP::SOAPString
#   uplinkPortgroup - SOAP::SOAPBoolean
#   portgroup - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DistributedVirtualPortgroupInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :switchName
  attr_accessor :switchUuid
  attr_accessor :portgroupName
  attr_accessor :portgroupKey
  attr_accessor :portgroupType
  attr_accessor :uplinkPortgroup
  attr_accessor :portgroup

  def initialize(dynamicType = nil, dynamicProperty = [], switchName = nil, switchUuid = nil, portgroupName = nil, portgroupKey = nil, portgroupType = nil, uplinkPortgroup = nil, portgroup = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @switchName = switchName
    @switchUuid = switchUuid
    @portgroupName = portgroupName
    @portgroupKey = portgroupKey
    @portgroupType = portgroupType
    @uplinkPortgroup = uplinkPortgroup
    @portgroup = portgroup
  end
end

# {urn:vim25}DistributedVirtualSwitchInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   switchName - SOAP::SOAPString
#   switchUuid - SOAP::SOAPString
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DistributedVirtualSwitchInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :switchName
  attr_accessor :switchUuid
  attr_accessor :distributedVirtualSwitch

  def initialize(dynamicType = nil, dynamicProperty = [], switchName = nil, switchUuid = nil, distributedVirtualSwitch = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @switchName = switchName
    @switchUuid = switchUuid
    @distributedVirtualSwitch = distributedVirtualSwitch
  end
end

# {urn:vim25}DVSManagerDvsConfigTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   distributedVirtualPortgroup - Bosh::Director::CloudProviders::VSphere::DistributedVirtualPortgroupInfo
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchInfo
class DVSManagerDvsConfigTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :distributedVirtualPortgroup
  attr_accessor :distributedVirtualSwitch

  def initialize(dynamicType = nil, dynamicProperty = [], distributedVirtualPortgroup = [], distributedVirtualSwitch = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @distributedVirtualPortgroup = distributedVirtualPortgroup
    @distributedVirtualSwitch = distributedVirtualSwitch
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerCompatibilityResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class DistributedVirtualSwitchManagerCompatibilityResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @error = error
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerHostContainer
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   container - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   recursive - SOAP::SOAPBoolean
class DistributedVirtualSwitchManagerHostContainer < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :container
  attr_accessor :recursive

  def initialize(dynamicType = nil, dynamicProperty = [], container = nil, recursive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @container = container
    @recursive = recursive
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerHostDvsFilterSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inclusive - SOAP::SOAPBoolean
class DistributedVirtualSwitchManagerHostDvsFilterSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inclusive

  def initialize(dynamicType = nil, dynamicProperty = [], inclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inclusive = inclusive
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerHostArrayFilter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inclusive - SOAP::SOAPBoolean
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DistributedVirtualSwitchManagerHostArrayFilter < DistributedVirtualSwitchManagerHostDvsFilterSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inclusive
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], inclusive = nil, host = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inclusive = inclusive
    @host = host
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerHostContainerFilter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inclusive - SOAP::SOAPBoolean
#   hostContainer - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchManagerHostContainer
class DistributedVirtualSwitchManagerHostContainerFilter < DistributedVirtualSwitchManagerHostDvsFilterSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inclusive
  attr_accessor :hostContainer

  def initialize(dynamicType = nil, dynamicProperty = [], inclusive = nil, hostContainer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inclusive = inclusive
    @hostContainer = hostContainer
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerHostDvsMembershipFilter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inclusive - SOAP::SOAPBoolean
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DistributedVirtualSwitchManagerHostDvsMembershipFilter < DistributedVirtualSwitchManagerHostDvsFilterSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inclusive
  attr_accessor :distributedVirtualSwitch

  def initialize(dynamicType = nil, dynamicProperty = [], inclusive = nil, distributedVirtualSwitch = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inclusive = inclusive
    @distributedVirtualSwitch = distributedVirtualSwitch
  end
end

# {urn:vim25}DistributedVirtualSwitchManagerDvsProductSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   newSwitchProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DistributedVirtualSwitchManagerDvsProductSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :newSwitchProductSpec
  attr_accessor :distributedVirtualSwitch

  def initialize(dynamicType = nil, dynamicProperty = [], newSwitchProductSpec = nil, distributedVirtualSwitch = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @newSwitchProductSpec = newSwitchProductSpec
    @distributedVirtualSwitch = distributedVirtualSwitch
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMemberConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   backing - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberBacking
#   maxProxySwitchPorts - SOAP::SOAPInt
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
class DistributedVirtualSwitchHostMemberConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :host
  attr_accessor :backing
  attr_accessor :maxProxySwitchPorts
  attr_accessor :vendorSpecificConfig

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, host = nil, backing = nil, maxProxySwitchPorts = nil, vendorSpecificConfig = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @host = host
    @backing = backing
    @maxProxySwitchPorts = maxProxySwitchPorts
    @vendorSpecificConfig = vendorSpecificConfig
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMemberPnicSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   pnicDevice - SOAP::SOAPString
#   uplinkPortKey - SOAP::SOAPString
#   uplinkPortgroupKey - SOAP::SOAPString
#   connectionCookie - SOAP::SOAPInt
class DistributedVirtualSwitchHostMemberPnicSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :pnicDevice
  attr_accessor :uplinkPortKey
  attr_accessor :uplinkPortgroupKey
  attr_accessor :connectionCookie

  def initialize(dynamicType = nil, dynamicProperty = [], pnicDevice = nil, uplinkPortKey = nil, uplinkPortgroupKey = nil, connectionCookie = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @pnicDevice = pnicDevice
    @uplinkPortKey = uplinkPortKey
    @uplinkPortgroupKey = uplinkPortgroupKey
    @connectionCookie = connectionCookie
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMemberBacking
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class DistributedVirtualSwitchHostMemberBacking < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMemberPnicBacking
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   pnicSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberPnicSpec
class DistributedVirtualSwitchHostMemberPnicBacking < DistributedVirtualSwitchHostMemberBacking
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :pnicSpec

  def initialize(dynamicType = nil, dynamicProperty = [], pnicSpec = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @pnicSpec = pnicSpec
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMemberConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxProxySwitchPorts - SOAP::SOAPInt
#   vendorSpecificConfig - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchKeyedOpaqueBlob
#   backing - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberBacking
class DistributedVirtualSwitchHostMemberConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :maxProxySwitchPorts
  attr_accessor :vendorSpecificConfig
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, maxProxySwitchPorts = nil, vendorSpecificConfig = [], backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @maxProxySwitchPorts = maxProxySwitchPorts
    @vendorSpecificConfig = vendorSpecificConfig
    @backing = backing
  end
end

# {urn:vim25}DistributedVirtualSwitchHostMember
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   config - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberConfigInfo
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
#   uplinkPortKey - SOAP::SOAPString
#   status - SOAP::SOAPString
#   statusDetail - SOAP::SOAPString
class DistributedVirtualSwitchHostMember < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :config
  attr_accessor :productInfo
  attr_accessor :uplinkPortKey
  attr_accessor :status
  attr_accessor :statusDetail

  def initialize(dynamicType = nil, dynamicProperty = [], config = nil, productInfo = nil, uplinkPortKey = [], status = nil, statusDetail = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @config = config
    @productInfo = productInfo
    @uplinkPortKey = uplinkPortKey
    @status = status
    @statusDetail = statusDetail
  end
end

# {urn:vim25}DistributedVirtualSwitchHostProductSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   productLineId - SOAP::SOAPString
#   version - SOAP::SOAPString
class DistributedVirtualSwitchHostProductSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :productLineId
  attr_accessor :version

  def initialize(dynamicType = nil, dynamicProperty = [], productLineId = nil, version = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @productLineId = productLineId
    @version = version
  end
end

# {urn:vim25}DistributedVirtualSwitchKeyedOpaqueBlob
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   opaqueData - SOAP::SOAPString
class DistributedVirtualSwitchKeyedOpaqueBlob < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :opaqueData

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, opaqueData = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @opaqueData = opaqueData
  end
end

# {urn:vim25}DVSNetworkResourcePoolAllocationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   limit - SOAP::SOAPLong
#   shares - Bosh::Director::CloudProviders::VSphere::SharesInfo
class DVSNetworkResourcePoolAllocationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :limit
  attr_accessor :shares

  def initialize(dynamicType = nil, dynamicProperty = [], limit = nil, shares = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @limit = limit
    @shares = shares
  end
end

# {urn:vim25}DVSNetworkResourcePoolConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   configVersion - SOAP::SOAPString
#   allocationInfo - Bosh::Director::CloudProviders::VSphere::DVSNetworkResourcePoolAllocationInfo
class DVSNetworkResourcePoolConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :configVersion
  attr_accessor :allocationInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, configVersion = nil, allocationInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @configVersion = configVersion
    @allocationInfo = allocationInfo
  end
end

# {urn:vim25}DVSNetworkResourcePool
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   configVersion - SOAP::SOAPString
#   allocationInfo - Bosh::Director::CloudProviders::VSphere::DVSNetworkResourcePoolAllocationInfo
class DVSNetworkResourcePool < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :description
  attr_accessor :configVersion
  attr_accessor :allocationInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, description = nil, configVersion = nil, allocationInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @description = description
    @configVersion = configVersion
    @allocationInfo = allocationInfo
  end
end

# {urn:vim25}DistributedVirtualSwitchPortConnectee
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   connectedEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   nicKey - SOAP::SOAPString
#   type - SOAP::SOAPString
#   addressHint - SOAP::SOAPString
class DistributedVirtualSwitchPortConnectee < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :connectedEntity
  attr_accessor :nicKey
  attr_accessor :type
  attr_accessor :addressHint

  def initialize(dynamicType = nil, dynamicProperty = [], connectedEntity = nil, nicKey = nil, type = nil, addressHint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @connectedEntity = connectedEntity
    @nicKey = nicKey
    @type = type
    @addressHint = addressHint
  end
end

# {urn:vim25}DistributedVirtualSwitchPortConnection
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   switchUuid - SOAP::SOAPString
#   portgroupKey - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   connectionCookie - SOAP::SOAPInt
class DistributedVirtualSwitchPortConnection < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :switchUuid
  attr_accessor :portgroupKey
  attr_accessor :portKey
  attr_accessor :connectionCookie

  def initialize(dynamicType = nil, dynamicProperty = [], switchUuid = nil, portgroupKey = nil, portKey = nil, connectionCookie = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @switchUuid = switchUuid
    @portgroupKey = portgroupKey
    @portKey = portKey
    @connectionCookie = connectionCookie
  end
end

# {urn:vim25}DistributedVirtualSwitchPortCriteria
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   connected - SOAP::SOAPBoolean
#   active - SOAP::SOAPBoolean
#   uplinkPort - SOAP::SOAPBoolean
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portgroupKey - SOAP::SOAPString
#   inside - SOAP::SOAPBoolean
#   portKey - SOAP::SOAPString
class DistributedVirtualSwitchPortCriteria < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :connected
  attr_accessor :active
  attr_accessor :uplinkPort
  attr_accessor :scope
  attr_accessor :portgroupKey
  attr_accessor :inside
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], connected = nil, active = nil, uplinkPort = nil, scope = nil, portgroupKey = [], inside = nil, portKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @connected = connected
    @active = active
    @uplinkPort = uplinkPort
    @scope = scope
    @portgroupKey = portgroupKey
    @inside = inside
    @portKey = portKey
  end
end

# {urn:vim25}DistributedVirtualSwitchPortStatistics
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   packetsInMulticast - SOAP::SOAPLong
#   packetsOutMulticast - SOAP::SOAPLong
#   bytesInMulticast - SOAP::SOAPLong
#   bytesOutMulticast - SOAP::SOAPLong
#   packetsInUnicast - SOAP::SOAPLong
#   packetsOutUnicast - SOAP::SOAPLong
#   bytesInUnicast - SOAP::SOAPLong
#   bytesOutUnicast - SOAP::SOAPLong
#   packetsInBroadcast - SOAP::SOAPLong
#   packetsOutBroadcast - SOAP::SOAPLong
#   bytesInBroadcast - SOAP::SOAPLong
#   bytesOutBroadcast - SOAP::SOAPLong
#   packetsInDropped - SOAP::SOAPLong
#   packetsOutDropped - SOAP::SOAPLong
#   packetsInException - SOAP::SOAPLong
#   packetsOutException - SOAP::SOAPLong
class DistributedVirtualSwitchPortStatistics < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :packetsInMulticast
  attr_accessor :packetsOutMulticast
  attr_accessor :bytesInMulticast
  attr_accessor :bytesOutMulticast
  attr_accessor :packetsInUnicast
  attr_accessor :packetsOutUnicast
  attr_accessor :bytesInUnicast
  attr_accessor :bytesOutUnicast
  attr_accessor :packetsInBroadcast
  attr_accessor :packetsOutBroadcast
  attr_accessor :bytesInBroadcast
  attr_accessor :bytesOutBroadcast
  attr_accessor :packetsInDropped
  attr_accessor :packetsOutDropped
  attr_accessor :packetsInException
  attr_accessor :packetsOutException

  def initialize(dynamicType = nil, dynamicProperty = [], packetsInMulticast = nil, packetsOutMulticast = nil, bytesInMulticast = nil, bytesOutMulticast = nil, packetsInUnicast = nil, packetsOutUnicast = nil, bytesInUnicast = nil, bytesOutUnicast = nil, packetsInBroadcast = nil, packetsOutBroadcast = nil, bytesInBroadcast = nil, bytesOutBroadcast = nil, packetsInDropped = nil, packetsOutDropped = nil, packetsInException = nil, packetsOutException = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @packetsInMulticast = packetsInMulticast
    @packetsOutMulticast = packetsOutMulticast
    @bytesInMulticast = bytesInMulticast
    @bytesOutMulticast = bytesOutMulticast
    @packetsInUnicast = packetsInUnicast
    @packetsOutUnicast = packetsOutUnicast
    @bytesInUnicast = bytesInUnicast
    @bytesOutUnicast = bytesOutUnicast
    @packetsInBroadcast = packetsInBroadcast
    @packetsOutBroadcast = packetsOutBroadcast
    @bytesInBroadcast = bytesInBroadcast
    @bytesOutBroadcast = bytesOutBroadcast
    @packetsInDropped = packetsInDropped
    @packetsOutDropped = packetsOutDropped
    @packetsInException = packetsInException
    @packetsOutException = packetsOutException
  end
end

# {urn:vim25}DistributedVirtualSwitchProductSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   forwardingClass - SOAP::SOAPString
#   bundleId - SOAP::SOAPString
#   bundleUrl - SOAP::SOAPString
class DistributedVirtualSwitchProductSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :vendor
  attr_accessor :version
  attr_accessor :build
  attr_accessor :forwardingClass
  attr_accessor :bundleId
  attr_accessor :bundleUrl

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, vendor = nil, version = nil, build = nil, forwardingClass = nil, bundleId = nil, bundleUrl = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @vendor = vendor
    @version = version
    @build = build
    @forwardingClass = forwardingClass
    @bundleId = bundleId
    @bundleUrl = bundleUrl
  end
end

# {urn:vim25}VMwareDVSPvlanConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   pvlanEntry - Bosh::Director::CloudProviders::VSphere::VMwareDVSPvlanMapEntry
#   operation - SOAP::SOAPString
class VMwareDVSPvlanConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :pvlanEntry
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], pvlanEntry = nil, operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @pvlanEntry = pvlanEntry
    @operation = operation
  end
end

# {urn:vim25}VMwareDVSPvlanMapEntry
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   primaryVlanId - SOAP::SOAPInt
#   secondaryVlanId - SOAP::SOAPInt
#   pvlanType - SOAP::SOAPString
class VMwareDVSPvlanMapEntry < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :primaryVlanId
  attr_accessor :secondaryVlanId
  attr_accessor :pvlanType

  def initialize(dynamicType = nil, dynamicProperty = [], primaryVlanId = nil, secondaryVlanId = nil, pvlanType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @primaryVlanId = primaryVlanId
    @secondaryVlanId = secondaryVlanId
    @pvlanType = pvlanType
  end
end

# {urn:vim25}Event
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class Event < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}EventEx
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   eventTypeId - SOAP::SOAPString
#   severity - SOAP::SOAPString
#   message - SOAP::SOAPString
#   arguments - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
#   objectId - SOAP::SOAPString
#   objectType - SOAP::SOAPString
#   objectName - SOAP::SOAPString
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class EventEx < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :eventTypeId
  attr_accessor :severity
  attr_accessor :message
  attr_accessor :arguments
  attr_accessor :objectId
  attr_accessor :objectType
  attr_accessor :objectName
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, eventTypeId = nil, severity = nil, message = nil, arguments = [], objectId = nil, objectType = nil, objectName = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @eventTypeId = eventTypeId
    @severity = severity
    @message = message
    @arguments = arguments
    @objectId = objectId
    @objectType = objectType
    @objectName = objectName
    @fault = fault
  end
end

# {urn:vim25}GeneralEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralHostInfoEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralHostInfoEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralHostWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralHostWarningEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralHostErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralHostErrorEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralVmInfoEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralVmInfoEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralVmWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralVmWarningEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralVmErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GeneralVmErrorEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}GeneralUserEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class GeneralUserEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
    @entity = entity
  end
end

# {urn:vim25}ExtendedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
#   eventTypeId - SOAP::SOAPString
#   managedObject - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   data - Bosh::Director::CloudProviders::VSphere::ExtendedEventPair
class ExtendedEvent < GeneralEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message
  attr_accessor :eventTypeId
  attr_accessor :managedObject
  attr_accessor :data

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil, eventTypeId = nil, managedObject = nil, data = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
    @eventTypeId = eventTypeId
    @managedObject = managedObject
    @data = data
  end
end

# {urn:vim25}HealthStatusChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   componentId - SOAP::SOAPString
#   oldStatus - SOAP::SOAPString
#   newStatus - SOAP::SOAPString
#   componentName - SOAP::SOAPString
class HealthStatusChangedEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :componentId
  attr_accessor :oldStatus
  attr_accessor :newStatus
  attr_accessor :componentName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, componentId = nil, oldStatus = nil, newStatus = nil, componentName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @componentId = componentId
    @oldStatus = oldStatus
    @newStatus = newStatus
    @componentName = componentName
  end
end

# {urn:vim25}HostInventoryUnreadableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostInventoryUnreadableEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DatacenterEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DatacenterEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DatacenterCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::FolderEventArgument
class DatacenterCreatedEvent < DatacenterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @parent = parent
  end
end

# {urn:vim25}DatacenterRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DatacenterRenamedEvent < DatacenterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}SessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class SessionEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ServerStartedSessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ServerStartedSessionEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}UserLoginSessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   locale - SOAP::SOAPString
#   sessionId - SOAP::SOAPString
class UserLoginSessionEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ipAddress
  attr_accessor :locale
  attr_accessor :sessionId

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ipAddress = nil, locale = nil, sessionId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ipAddress = ipAddress
    @locale = locale
    @sessionId = sessionId
  end
end

# {urn:vim25}UserLogoutSessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class UserLogoutSessionEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}BadUsernameSessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
class BadUsernameSessionEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ipAddress

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ipAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ipAddress = ipAddress
  end
end

# {urn:vim25}AlreadyAuthenticatedSessionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class AlreadyAuthenticatedSessionEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}NoAccessUserEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
class NoAccessUserEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ipAddress

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ipAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ipAddress = ipAddress
  end
end

# {urn:vim25}SessionTerminatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   sessionId - SOAP::SOAPString
#   terminatedUsername - SOAP::SOAPString
class SessionTerminatedEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :sessionId
  attr_accessor :terminatedUsername

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, sessionId = nil, terminatedUsername = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @sessionId = sessionId
    @terminatedUsername = terminatedUsername
  end
end

# {urn:vim25}GlobalMessageChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class GlobalMessageChangedEvent < SessionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}UpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class UpgradeEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}InfoUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class InfoUpgradeEvent < UpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}WarningUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class WarningUpgradeEvent < UpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}ErrorUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class ErrorUpgradeEvent < UpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}UserUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
class UserUpgradeEvent < UpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
  end
end

# {urn:vim25}HostEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostPrimaryAgentNotShortNameEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   primaryAgent - SOAP::SOAPString
class HostPrimaryAgentNotShortNameEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :primaryAgent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, primaryAgent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @primaryAgent = primaryAgent
  end
end

# {urn:vim25}HostNotInClusterEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostNotInClusterEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostIsolationIpPingFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   isolationIp - SOAP::SOAPString
class HostIsolationIpPingFailedEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :isolationIp

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, isolationIp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @isolationIp = isolationIp
  end
end

# {urn:vim25}HostShortNameInconsistentEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   shortName - SOAP::SOAPString
#   shortName2 - SOAP::SOAPString
class HostShortNameInconsistentEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :shortName
  attr_accessor :shortName2

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, shortName = nil, shortName2 = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @shortName = shortName
    @shortName2 = shortName2
  end
end

# {urn:vim25}HostNoRedundantManagementNetworkEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostNoRedundantManagementNetworkEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostNoAvailableNetworksEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ips - SOAP::SOAPString
class HostNoAvailableNetworksEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ips

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ips = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ips = ips
  end
end

# {urn:vim25}HostExtraNetworksEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ips - SOAP::SOAPString
class HostExtraNetworksEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ips

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ips = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ips = ips
  end
end

# {urn:vim25}HostNoHAEnabledPortGroupsEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostNoHAEnabledPortGroupsEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostMissingNetworksEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ips - SOAP::SOAPString
class HostMissingNetworksEvent < HostDasEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ips

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ips = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ips = ips
  end
end

# {urn:vim25}HostConnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostConnectedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDisconnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - SOAP::SOAPString
class HostDisconnectedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}HostSyncFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class HostSyncFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}HostConnectionLostEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostConnectionLostEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostReconnectionFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostReconnectionFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedNoConnectionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedNoConnectionEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedBadUsernameEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedBadUsernameEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedBadVersionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedBadVersionEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedAlreadyManagedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   serverName - SOAP::SOAPString
class HostCnxFailedAlreadyManagedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :serverName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, serverName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @serverName = serverName
  end
end

# {urn:vim25}HostCnxFailedNoLicenseEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedNoLicenseEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedNetworkErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedNetworkErrorEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostRemovedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedCcagentUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedCcagentUpgradeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedBadCcagentEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedBadCcagentEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedAccountFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedAccountFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedNoAccessEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedNoAccessEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostShutdownEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - SOAP::SOAPString
class HostShutdownEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}HostCnxFailedNotFoundEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedNotFoundEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCnxFailedTimeoutEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCnxFailedTimeoutEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostUpgradeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostUpgradeFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}EnteringMaintenanceModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class EnteringMaintenanceModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}EnteredMaintenanceModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class EnteredMaintenanceModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ExitMaintenanceModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ExitMaintenanceModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}CanceledHostOperationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class CanceledHostOperationEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}TimedOutHostOperationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class TimedOutHostOperationEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasEnabledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasDisabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasDisabledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasEnablingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasEnablingEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasDisablingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasDisablingEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostDasErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   message - SOAP::SOAPString
#   reason - SOAP::SOAPString
class HostDasErrorEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :message
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, message = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @message = message
    @reason = reason
  end
end

# {urn:vim25}HostDasOkEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostDasOkEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}VcAgentUpgradedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class VcAgentUpgradedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}VcAgentUninstalledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class VcAgentUninstalledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}VcAgentUpgradeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - SOAP::SOAPString
class VcAgentUpgradeFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}VcAgentUninstallFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - SOAP::SOAPString
class VcAgentUninstallFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}HostAddedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostAddedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostAddFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostname - SOAP::SOAPString
class HostAddFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostname

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostname = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostname = hostname
  end
end

# {urn:vim25}HostIpChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldIP - SOAP::SOAPString
#   newIP - SOAP::SOAPString
class HostIpChangedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldIP
  attr_accessor :newIP

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldIP = nil, newIP = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldIP = oldIP
    @newIP = newIP
  end
end

# {urn:vim25}EnteringStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class EnteringStandbyModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsEnteringStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsEnteringStandbyModeEvent < EnteringStandbyModeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}EnteredStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class EnteredStandbyModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsEnteredStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsEnteredStandbyModeEvent < EnteredStandbyModeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ExitingStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ExitingStandbyModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsExitingStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsExitingStandbyModeEvent < ExitingStandbyModeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ExitedStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ExitedStandbyModeEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsExitedStandbyModeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsExitedStandbyModeEvent < ExitedStandbyModeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ExitStandbyModeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ExitStandbyModeFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsExitStandbyModeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsExitStandbyModeFailedEvent < ExitStandbyModeFailedEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}UpdatedAgentBeingRestartedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class UpdatedAgentBeingRestartedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}AccountCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
#   group - SOAP::SOAPBoolean
class AccountCreatedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :spec
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, spec = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @spec = spec
    @group = group
  end
end

# {urn:vim25}AccountRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   account - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
class AccountRemovedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :account
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, account = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @account = account
    @group = group
  end
end

# {urn:vim25}UserPasswordChanged
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   userLogin - SOAP::SOAPString
class UserPasswordChanged < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :userLogin

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, userLogin = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @userLogin = userLogin
  end
end

# {urn:vim25}AccountUpdatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
#   group - SOAP::SOAPBoolean
class AccountUpdatedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :spec
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, spec = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @spec = spec
    @group = group
  end
end

# {urn:vim25}UserAssignedToGroup
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   userLogin - SOAP::SOAPString
#   group - SOAP::SOAPString
class UserAssignedToGroup < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :userLogin
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, userLogin = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @userLogin = userLogin
    @group = group
  end
end

# {urn:vim25}UserUnassignedFromGroup
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   userLogin - SOAP::SOAPString
#   group - SOAP::SOAPString
class UserUnassignedFromGroup < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :userLogin
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, userLogin = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @userLogin = userLogin
    @group = group
  end
end

# {urn:vim25}DatastorePrincipalConfigured
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastorePrincipal - SOAP::SOAPString
class DatastorePrincipalConfigured < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastorePrincipal

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastorePrincipal = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastorePrincipal = datastorePrincipal
  end
end

# {urn:vim25}VMFSDatastoreCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class VMFSDatastoreCreatedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}NASDatastoreCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class NASDatastoreCreatedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}LocalDatastoreCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class LocalDatastoreCreatedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}VMFSDatastoreExtendedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class VMFSDatastoreExtendedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}VMFSDatastoreExpandedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class VMFSDatastoreExpandedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreRemovedOnHostEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreRemovedOnHostEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreRenamedOnHostEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DatastoreRenamedOnHostEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}DuplicateIpDetectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   duplicateIP - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
class DuplicateIpDetectedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :duplicateIP
  attr_accessor :macAddress

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, duplicateIP = nil, macAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @duplicateIP = duplicateIP
    @macAddress = macAddress
  end
end

# {urn:vim25}DatastoreDiscoveredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreDiscoveredEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DrsResourceConfigureFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class DrsResourceConfigureFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @reason = reason
  end
end

# {urn:vim25}DrsResourceConfigureSyncedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsResourceConfigureSyncedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostGetShortNameFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostGetShortNameFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostShortNameToIpFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   shortName - SOAP::SOAPString
class HostShortNameToIpFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :shortName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, shortName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @shortName = shortName
  end
end

# {urn:vim25}HostIpToShortNameFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostIpToShortNameFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostIpInconsistentEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   ipAddress2 - SOAP::SOAPString
class HostIpInconsistentEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :ipAddress
  attr_accessor :ipAddress2

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, ipAddress = nil, ipAddress2 = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @ipAddress = ipAddress
    @ipAddress2 = ipAddress2
  end
end

# {urn:vim25}HostUserWorldSwapNotEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostUserWorldSwapNotEnabledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostNonCompliantEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostNonCompliantEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostCompliantEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostCompliantEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostComplianceCheckedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class HostComplianceCheckedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}HostConfigAppliedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostConfigAppliedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostProfileAppliedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class HostProfileAppliedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}HostVnicConnectedToCustomizedDVPortEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   vnic - Bosh::Director::CloudProviders::VSphere::VnicPortArgument
class HostVnicConnectedToCustomizedDVPortEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :vnic

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, vnic = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @vnic = vnic
  end
end

# {urn:vim25}GhostDvsProxySwitchDetectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   switchUuid - SOAP::SOAPString
class GhostDvsProxySwitchDetectedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :switchUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, switchUuid = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @switchUuid = switchUuid
  end
end

# {urn:vim25}GhostDvsProxySwitchRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   switchUuid - SOAP::SOAPString
class GhostDvsProxySwitchRemovedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :switchUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, switchUuid = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @switchUuid = switchUuid
  end
end

# {urn:vim25}HostWwnConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   conflictedVms - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   conflictedHosts - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   wwn - SOAP::SOAPLong
class HostWwnConflictEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :conflictedVms
  attr_accessor :conflictedHosts
  attr_accessor :wwn

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, conflictedVms = [], conflictedHosts = [], wwn = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @conflictedVms = conflictedVms
    @conflictedHosts = conflictedHosts
    @wwn = wwn
  end
end

# {urn:vim25}HostWwnChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldNodeWwns - SOAP::SOAPLong
#   oldPortWwns - SOAP::SOAPLong
#   newNodeWwns - SOAP::SOAPLong
#   newPortWwns - SOAP::SOAPLong
class HostWwnChangedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldNodeWwns
  attr_accessor :oldPortWwns
  attr_accessor :newNodeWwns
  attr_accessor :newPortWwns

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldNodeWwns = [], oldPortWwns = [], newNodeWwns = [], newPortWwns = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldNodeWwns = oldNodeWwns
    @oldPortWwns = oldPortWwns
    @newNodeWwns = newNodeWwns
    @newPortWwns = newPortWwns
  end
end

# {urn:vim25}HostAdminDisableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostAdminDisableEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostAdminEnableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostAdminEnableEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostEnableAdminFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   permissions - Bosh::Director::CloudProviders::VSphere::Permission
class HostEnableAdminFailedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :permissions

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, permissions = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @permissions = permissions
  end
end

# {urn:vim25}NoDatastoresConfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class NoDatastoresConfiguredEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}AdminPasswordNotChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class AdminPasswordNotChangedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}LocalTSMEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class LocalTSMEnabledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}RemoteTSMEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class RemoteTSMEnabledEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}VimAccountPasswordChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class VimAccountPasswordChangedEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}IScsiBootFailureEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class IScsiBootFailureEvent < HostEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ProfileEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}ProfileCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileCreatedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}ProfileRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileRemovedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}ProfileAssociatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileAssociatedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}ProfileDissociatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileDissociatedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}ProfileReferenceHostChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
#   referenceHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ProfileReferenceHostChangedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile
  attr_accessor :referenceHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil, referenceHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
    @referenceHost = referenceHost
  end
end

# {urn:vim25}ProfileChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ProfileChangedEvent < ProfileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}VmEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmPoweredOffEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmPoweredOffEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmPowerOffOnIsolationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   isolatedHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmPowerOffOnIsolationEvent < VmPoweredOffEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :isolatedHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, isolatedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @isolatedHost = isolatedHost
  end
end

# {urn:vim25}VmShutdownOnIsolationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   isolatedHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   shutdownResult - SOAP::SOAPString
class VmShutdownOnIsolationEvent < VmPoweredOffEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :isolatedHost
  attr_accessor :shutdownResult

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, isolatedHost = nil, shutdownResult = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @isolatedHost = isolatedHost
    @shutdownResult = shutdownResult
  end
end

# {urn:vim25}VmPoweredOnEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmPoweredOnEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}DrsVmPoweredOnEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class DrsVmPoweredOnEvent < VmPoweredOnEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRestartedOnAlternateHostEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   sourceHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmRestartedOnAlternateHostEvent < VmPoweredOnEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :sourceHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, sourceHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @sourceHost = sourceHost
  end
end

# {urn:vim25}VmSuspendedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSuspendedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmStartingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmStartingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmUnsupportedStartingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   guestId - SOAP::SOAPString
class VmUnsupportedStartingEvent < VmStartingEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :guestId

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, guestId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @guestId = guestId
  end
end

# {urn:vim25}VmStoppingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmStoppingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmSuspendingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSuspendingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmResumingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmResumingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmDisconnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDisconnectedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRemoteConsoleConnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRemoteConsoleConnectedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRemoteConsoleDisconnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRemoteConsoleDisconnectedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmDiscoveredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDiscoveredEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmOrphanedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmOrphanedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmBeingCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   configSpec - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
class VmBeingCreatedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :configSpec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, configSpec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @configSpec = configSpec
  end
end

# {urn:vim25}VmCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmCreatedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmStartRecordingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmStartRecordingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmEndRecordingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmEndRecordingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmStartReplayingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmStartReplayingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmEndReplayingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmEndReplayingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRegisteredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRegisteredEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmAutoRenameEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class VmAutoRenameEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}VmBeingHotMigratedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmBeingHotMigratedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
  end
end

# {urn:vim25}VmResettingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmResettingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmStaticMacConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   conflictedVm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   mac - SOAP::SOAPString
class VmStaticMacConflictEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :conflictedVm
  attr_accessor :mac

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, conflictedVm = nil, mac = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @conflictedVm = conflictedVm
    @mac = mac
  end
end

# {urn:vim25}VmMacConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   conflictedVm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   mac - SOAP::SOAPString
class VmMacConflictEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :conflictedVm
  attr_accessor :mac

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, conflictedVm = nil, mac = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @conflictedVm = conflictedVm
    @mac = mac
  end
end

# {urn:vim25}VmBeingDeployedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   srcTemplate - Bosh::Director::CloudProviders::VSphere::VmEventArgument
class VmBeingDeployedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :srcTemplate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, srcTemplate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @srcTemplate = srcTemplate
  end
end

# {urn:vim25}VmDeployFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destDatastore - Bosh::Director::CloudProviders::VSphere::EntityEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmDeployFailedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destDatastore
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destDatastore = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destDatastore = destDatastore
    @reason = reason
  end
end

# {urn:vim25}VmDeployedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   srcTemplate - Bosh::Director::CloudProviders::VSphere::VmEventArgument
class VmDeployedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :srcTemplate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, srcTemplate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @srcTemplate = srcTemplate
  end
end

# {urn:vim25}VmMacChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   adapter - SOAP::SOAPString
#   oldMac - SOAP::SOAPString
#   newMac - SOAP::SOAPString
class VmMacChangedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :adapter
  attr_accessor :oldMac
  attr_accessor :newMac

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, adapter = nil, oldMac = nil, newMac = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @adapter = adapter
    @oldMac = oldMac
    @newMac = newMac
  end
end

# {urn:vim25}VmMacAssignedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   adapter - SOAP::SOAPString
#   mac - SOAP::SOAPString
class VmMacAssignedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :adapter
  attr_accessor :mac

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, adapter = nil, mac = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @adapter = adapter
    @mac = mac
  end
end

# {urn:vim25}VmUuidConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   conflictedVm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   uuid - SOAP::SOAPString
class VmUuidConflictEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :conflictedVm
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, conflictedVm = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @conflictedVm = conflictedVm
    @uuid = uuid
  end
end

# {urn:vim25}VmInstanceUuidConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   conflictedVm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   instanceUuid - SOAP::SOAPString
class VmInstanceUuidConflictEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :conflictedVm
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, conflictedVm = nil, instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @conflictedVm = conflictedVm
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}VmBeingMigratedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmBeingMigratedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
  end
end

# {urn:vim25}VmFailedMigrateEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedMigrateEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
    @reason = reason
  end
end

# {urn:vim25}VmMigratedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   sourceHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmMigratedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :sourceHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, sourceHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @sourceHost = sourceHost
  end
end

# {urn:vim25}DrsVmMigratedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   sourceHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DrsVmMigratedEvent < VmMigratedEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :sourceHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, sourceHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @sourceHost = sourceHost
  end
end

# {urn:vim25}DrsRuleViolationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class DrsRuleViolationEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}DrsRuleComplianceEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class DrsRuleComplianceEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRelocateSpecEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRelocateSpecEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmBeingRelocatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmBeingRelocatedEvent < VmRelocateSpecEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
  end
end

# {urn:vim25}VmRelocatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   sourceHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmRelocatedEvent < VmRelocateSpecEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :sourceHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, sourceHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @sourceHost = sourceHost
  end
end

# {urn:vim25}VmRelocateFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmRelocateFailedEvent < VmRelocateSpecEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
    @reason = reason
  end
end

# {urn:vim25}VmEmigratingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmEmigratingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmCloneEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmCloneEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmBeingClonedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destFolder - Bosh::Director::CloudProviders::VSphere::FolderEventArgument
#   destName - SOAP::SOAPString
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmBeingClonedEvent < VmCloneEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destFolder
  attr_accessor :destName
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destFolder = nil, destName = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destFolder = destFolder
    @destName = destName
    @destHost = destHost
  end
end

# {urn:vim25}VmBeingClonedNoFolderEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destName - SOAP::SOAPString
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmBeingClonedNoFolderEvent < VmCloneEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destName
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destName = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destName = destName
    @destHost = destHost
  end
end

# {urn:vim25}VmCloneFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destFolder - Bosh::Director::CloudProviders::VSphere::FolderEventArgument
#   destName - SOAP::SOAPString
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmCloneFailedEvent < VmCloneEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destFolder
  attr_accessor :destName
  attr_accessor :destHost
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destFolder = nil, destName = nil, destHost = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destFolder = destFolder
    @destName = destName
    @destHost = destHost
    @reason = reason
  end
end

# {urn:vim25}VmClonedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   sourceVm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
class VmClonedEvent < VmCloneEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :sourceVm

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, sourceVm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @sourceVm = sourceVm
  end
end

# {urn:vim25}VmResourceReallocatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmResourceReallocatedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class VmRenamedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}VmDateRolledBackEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDateRolledBackEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmNoNetworkAccessEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   destHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class VmNoNetworkAccessEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :destHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, destHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @destHost = destHost
  end
end

# {urn:vim25}VmDiskFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   disk - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmDiskFailedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :disk
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, disk = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @disk = disk
    @reason = reason
  end
end

# {urn:vim25}VmFailedToPowerOnEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToPowerOnEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToPowerOffEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToPowerOffEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToSuspendEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToSuspendEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToResetEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToResetEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToShutdownGuestEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToShutdownGuestEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToRebootGuestEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToRebootGuestEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedToStandbyGuestEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedToStandbyGuestEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRemovedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmGuestShutdownEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmGuestShutdownEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmGuestRebootEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmGuestRebootEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmGuestStandbyEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmGuestStandbyEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmUpgradingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   version - SOAP::SOAPString
class VmUpgradingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :version

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, version = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @version = version
  end
end

# {urn:vim25}VmUpgradeCompleteEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   version - SOAP::SOAPString
class VmUpgradeCompleteEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :version

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, version = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @version = version
  end
end

# {urn:vim25}VmUpgradeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmUpgradeFailedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   configSpec - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
class VmReconfiguredEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :configSpec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, configSpec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @configSpec = configSpec
  end
end

# {urn:vim25}VmMessageEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   message - SOAP::SOAPString
#   messageInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineMessage
class VmMessageEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :message
  attr_accessor :messageInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, message = nil, messageInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @message = message
    @messageInfo = messageInfo
  end
end

# {urn:vim25}VmMessageWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   message - SOAP::SOAPString
#   messageInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineMessage
class VmMessageWarningEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :message
  attr_accessor :messageInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, message = nil, messageInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @message = message
    @messageInfo = messageInfo
  end
end

# {urn:vim25}VmMessageErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   message - SOAP::SOAPString
#   messageInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineMessage
class VmMessageErrorEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :message
  attr_accessor :messageInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, message = nil, messageInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @message = message
    @messageInfo = messageInfo
  end
end

# {urn:vim25}VmConfigMissingEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmConfigMissingEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFailoverFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailoverFailed < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmDasBeingResetEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
class VmDasBeingResetEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmDasBeingResetWithScreenshotEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
#   screenshotFilePath - SOAP::SOAPString
class VmDasBeingResetWithScreenshotEvent < VmDasBeingResetEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason
  attr_accessor :screenshotFilePath

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil, screenshotFilePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
    @screenshotFilePath = screenshotFilePath
  end
end

# {urn:vim25}VmDasResetFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDasResetFailedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmMaxRestartCountReached
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmMaxRestartCountReached < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmMaxFTRestartCountReached
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmMaxFTRestartCountReached < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}NotEnoughResourcesToStartVmEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class NotEnoughResourcesToStartVmEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmUuidAssignedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   uuid - SOAP::SOAPString
class VmUuidAssignedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @uuid = uuid
  end
end

# {urn:vim25}VmInstanceUuidAssignedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   instanceUuid - SOAP::SOAPString
class VmInstanceUuidAssignedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}VmUuidChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldUuid - SOAP::SOAPString
#   newUuid - SOAP::SOAPString
class VmUuidChangedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldUuid
  attr_accessor :newUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldUuid = nil, newUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldUuid = oldUuid
    @newUuid = newUuid
  end
end

# {urn:vim25}VmInstanceUuidChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldInstanceUuid - SOAP::SOAPString
#   newInstanceUuid - SOAP::SOAPString
class VmInstanceUuidChangedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldInstanceUuid
  attr_accessor :newInstanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldInstanceUuid = nil, newInstanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldInstanceUuid = oldInstanceUuid
    @newInstanceUuid = newInstanceUuid
  end
end

# {urn:vim25}VmWwnConflictEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   conflictedVms - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   conflictedHosts - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   wwn - SOAP::SOAPLong
class VmWwnConflictEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :conflictedVms
  attr_accessor :conflictedHosts
  attr_accessor :wwn

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, conflictedVms = [], conflictedHosts = [], wwn = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @conflictedVms = conflictedVms
    @conflictedHosts = conflictedHosts
    @wwn = wwn
  end
end

# {urn:vim25}VmAcquiredMksTicketEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmAcquiredMksTicketEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmAcquiredTicketEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   ticketType - SOAP::SOAPString
class VmAcquiredTicketEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :ticketType

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, ticketType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @ticketType = ticketType
  end
end

# {urn:vim25}VmWwnAssignedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   nodeWwns - SOAP::SOAPLong
#   portWwns - SOAP::SOAPLong
class VmWwnAssignedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :nodeWwns
  attr_accessor :portWwns

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, nodeWwns = [], portWwns = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @nodeWwns = nodeWwns
    @portWwns = portWwns
  end
end

# {urn:vim25}VmWwnChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldNodeWwns - SOAP::SOAPLong
#   oldPortWwns - SOAP::SOAPLong
#   newNodeWwns - SOAP::SOAPLong
#   newPortWwns - SOAP::SOAPLong
class VmWwnChangedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldNodeWwns
  attr_accessor :oldPortWwns
  attr_accessor :newNodeWwns
  attr_accessor :newPortWwns

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldNodeWwns = [], oldPortWwns = [], newNodeWwns = [], newPortWwns = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldNodeWwns = oldNodeWwns
    @oldPortWwns = oldPortWwns
    @newNodeWwns = newNodeWwns
    @newPortWwns = newPortWwns
  end
end

# {urn:vim25}VmSecondaryAddedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSecondaryAddedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFaultToleranceTurnedOffEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmFaultToleranceTurnedOffEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFaultToleranceStateChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldState - Bosh::Director::CloudProviders::VSphere::VirtualMachineFaultToleranceState
#   newState - Bosh::Director::CloudProviders::VSphere::VirtualMachineFaultToleranceState
class VmFaultToleranceStateChangedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldState
  attr_accessor :newState

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldState = nil, newState = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldState = oldState
    @newState = newState
  end
end

# {urn:vim25}VmSecondaryDisabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSecondaryDisabledEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmSecondaryDisabledBySystemEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmSecondaryDisabledBySystemEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmSecondaryEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSecondaryEnabledEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmStartingSecondaryEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmStartingSecondaryEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmSecondaryStartedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmSecondaryStartedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFailedUpdatingSecondaryConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmFailedUpdatingSecondaryConfig < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFailedStartingSecondaryEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
class VmFailedStartingSecondaryEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmTimedoutStartingSecondaryEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   timeout - SOAP::SOAPLong
class VmTimedoutStartingSecondaryEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :timeout

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, timeout = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @timeout = timeout
  end
end

# {urn:vim25}VmNoCompatibleHostForSecondaryEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmNoCompatibleHostForSecondaryEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmPrimaryFailoverEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
class VmPrimaryFailoverEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFaultToleranceVmTerminatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
class VmFaultToleranceVmTerminatedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmFailedRelayoutOnVmfs2DatastoreEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmFailedRelayoutOnVmfs2DatastoreEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmFailedRelayoutEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFailedRelayoutEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @reason = reason
  end
end

# {urn:vim25}VmRelayoutSuccessfulEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRelayoutSuccessfulEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmRelayoutUpToDateEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmRelayoutUpToDateEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmConnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmConnectedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmPoweringOnWithCustomizedDVPortEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   vnic - Bosh::Director::CloudProviders::VSphere::VnicPortArgument
class VmPoweringOnWithCustomizedDVPortEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :vnic

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, vnic = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @vnic = vnic
  end
end

# {urn:vim25}VmDasUpdateErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDasUpdateErrorEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}NoMaintenanceModeDrsRecommendationForVM
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class NoMaintenanceModeDrsRecommendationForVM < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}VmDasUpdateOkEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
class VmDasUpdateOkEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
  end
end

# {urn:vim25}MigrationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class MigrationEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
  end
end

# {urn:vim25}MigrationWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class MigrationWarningEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
  end
end

# {urn:vim25}MigrationErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class MigrationErrorEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
  end
end

# {urn:vim25}MigrationHostWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   dstHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class MigrationHostWarningEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault
  attr_accessor :dstHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil, dstHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
    @dstHost = dstHost
  end
end

# {urn:vim25}MigrationHostErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   dstHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class MigrationHostErrorEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault
  attr_accessor :dstHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil, dstHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
    @dstHost = dstHost
  end
end

# {urn:vim25}MigrationResourceWarningEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   dstPool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   dstHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class MigrationResourceWarningEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault
  attr_accessor :dstPool
  attr_accessor :dstHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil, dstPool = nil, dstHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
    @dstPool = dstPool
    @dstHost = dstHost
  end
end

# {urn:vim25}MigrationResourceErrorEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   dstPool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   dstHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class MigrationResourceErrorEvent < MigrationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :fault
  attr_accessor :dstPool
  attr_accessor :dstHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, fault = nil, dstPool = nil, dstHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @fault = fault
    @dstPool = dstPool
    @dstHost = dstHost
  end
end

# {urn:vim25}VmResourcePoolMovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   oldParent - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   newParent - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class VmResourcePoolMovedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :oldParent
  attr_accessor :newParent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, oldParent = nil, newParent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @oldParent = oldParent
    @newParent = newParent
  end
end

# {urn:vim25}CustomizationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationStartedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationStartedEvent < CustomizationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationSucceeded
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationSucceeded < CustomizationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationFailed < CustomizationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationUnknownFailure
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationUnknownFailure < CustomizationFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationSysprepFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
#   sysprepVersion - SOAP::SOAPString
#   systemVersion - SOAP::SOAPString
class CustomizationSysprepFailed < CustomizationFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation
  attr_accessor :sysprepVersion
  attr_accessor :systemVersion

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil, sysprepVersion = nil, systemVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
    @sysprepVersion = sysprepVersion
    @systemVersion = systemVersion
  end
end

# {urn:vim25}CustomizationLinuxIdentityFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationLinuxIdentityFailed < CustomizationFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}CustomizationNetworkSetupFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   logLocation - SOAP::SOAPString
class CustomizationNetworkSetupFailed < CustomizationFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :logLocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, logLocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @logLocation = logLocation
  end
end

# {urn:vim25}VmReloadFromPathEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   configPath - SOAP::SOAPString
class VmReloadFromPathEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :configPath

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, configPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @configPath = configPath
  end
end

# {urn:vim25}VmReloadFromPathFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   configPath - SOAP::SOAPString
class VmReloadFromPathFailedEvent < VmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :template
  attr_accessor :configPath

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, template = nil, configPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @template = template
    @configPath = configPath
  end
end

# {urn:vim25}ScheduledTaskEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskCreatedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskStartedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskStartedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskRemovedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskReconfiguredEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskCompletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class ScheduledTaskCompletedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
  end
end

# {urn:vim25}ScheduledTaskFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class ScheduledTaskFailedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
    @reason = reason
  end
end

# {urn:vim25}ScheduledTaskEmailCompletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   to - SOAP::SOAPString
class ScheduledTaskEmailCompletedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity
  attr_accessor :to

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil, to = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
    @to = to
  end
end

# {urn:vim25}ScheduledTaskEmailFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ScheduledTaskEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   to - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class ScheduledTaskEmailFailedEvent < ScheduledTaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :scheduledTask
  attr_accessor :entity
  attr_accessor :to
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, scheduledTask = nil, entity = nil, to = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @scheduledTask = scheduledTask
    @entity = entity
    @to = to
    @reason = reason
  end
end

# {urn:vim25}AlarmEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
class AlarmEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
  end
end

# {urn:vim25}AlarmCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class AlarmCreatedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
  end
end

# {urn:vim25}AlarmStatusChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   source - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   from - SOAP::SOAPString
#   to - SOAP::SOAPString
class AlarmStatusChangedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :source
  attr_accessor :entity
  attr_accessor :from
  attr_accessor :to

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, source = nil, entity = nil, from = nil, to = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @source = source
    @entity = entity
    @from = from
    @to = to
  end
end

# {urn:vim25}AlarmActionTriggeredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   source - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class AlarmActionTriggeredEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :source
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, source = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @source = source
    @entity = entity
  end
end

# {urn:vim25}AlarmEmailCompletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   to - SOAP::SOAPString
class AlarmEmailCompletedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :to

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil, to = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
    @to = to
  end
end

# {urn:vim25}AlarmEmailFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   to - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class AlarmEmailFailedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :to
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil, to = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
    @to = to
    @reason = reason
  end
end

# {urn:vim25}AlarmSnmpCompletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class AlarmSnmpCompletedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
  end
end

# {urn:vim25}AlarmSnmpFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class AlarmSnmpFailedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
    @reason = reason
  end
end

# {urn:vim25}AlarmScriptCompleteEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   script - SOAP::SOAPString
class AlarmScriptCompleteEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :script

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil, script = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
    @script = script
  end
end

# {urn:vim25}AlarmScriptFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   script - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class AlarmScriptFailedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity
  attr_accessor :script
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil, script = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
    @script = script
    @reason = reason
  end
end

# {urn:vim25}AlarmRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class AlarmRemovedEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
  end
end

# {urn:vim25}AlarmReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::AlarmEventArgument
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
class AlarmReconfiguredEvent < AlarmEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :alarm
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, alarm = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @alarm = alarm
    @entity = entity
  end
end

# {urn:vim25}CustomFieldEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class CustomFieldEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}CustomFieldDefEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   fieldKey - SOAP::SOAPInt
#   name - SOAP::SOAPString
class CustomFieldDefEvent < CustomFieldEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :fieldKey
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, fieldKey = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @fieldKey = fieldKey
    @name = name
  end
end

# {urn:vim25}CustomFieldDefAddedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   fieldKey - SOAP::SOAPInt
#   name - SOAP::SOAPString
class CustomFieldDefAddedEvent < CustomFieldDefEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :fieldKey
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, fieldKey = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @fieldKey = fieldKey
    @name = name
  end
end

# {urn:vim25}CustomFieldDefRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   fieldKey - SOAP::SOAPInt
#   name - SOAP::SOAPString
class CustomFieldDefRemovedEvent < CustomFieldDefEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :fieldKey
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, fieldKey = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @fieldKey = fieldKey
    @name = name
  end
end

# {urn:vim25}CustomFieldDefRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   fieldKey - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   newName - SOAP::SOAPString
class CustomFieldDefRenamedEvent < CustomFieldDefEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :fieldKey
  attr_accessor :name
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, fieldKey = nil, name = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @fieldKey = fieldKey
    @name = name
    @newName = newName
  end
end

# {urn:vim25}CustomFieldValueChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   fieldKey - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class CustomFieldValueChangedEvent < CustomFieldEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :entity
  attr_accessor :fieldKey
  attr_accessor :name
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, entity = nil, fieldKey = nil, name = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @entity = entity
    @fieldKey = fieldKey
    @name = name
    @value = value
  end
end

# {urn:vim25}AuthorizationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class AuthorizationEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}PermissionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   principal - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
class PermissionEvent < AuthorizationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :entity
  attr_accessor :principal
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, entity = nil, principal = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @entity = entity
    @principal = principal
    @group = group
  end
end

# {urn:vim25}PermissionAddedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   principal - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
#   propagate - SOAP::SOAPBoolean
class PermissionAddedEvent < PermissionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :entity
  attr_accessor :principal
  attr_accessor :group
  attr_accessor :role
  attr_accessor :propagate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, entity = nil, principal = nil, group = nil, role = nil, propagate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @entity = entity
    @principal = principal
    @group = group
    @role = role
    @propagate = propagate
  end
end

# {urn:vim25}PermissionUpdatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   principal - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
#   propagate - SOAP::SOAPBoolean
class PermissionUpdatedEvent < PermissionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :entity
  attr_accessor :principal
  attr_accessor :group
  attr_accessor :role
  attr_accessor :propagate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, entity = nil, principal = nil, group = nil, role = nil, propagate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @entity = entity
    @principal = principal
    @group = group
    @role = role
    @propagate = propagate
  end
end

# {urn:vim25}PermissionRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedEntityEventArgument
#   principal - SOAP::SOAPString
#   group - SOAP::SOAPBoolean
class PermissionRemovedEvent < PermissionEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :entity
  attr_accessor :principal
  attr_accessor :group

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, entity = nil, principal = nil, group = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @entity = entity
    @principal = principal
    @group = group
  end
end

# {urn:vim25}RoleEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
class RoleEvent < AuthorizationEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :role

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, role = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @role = role
  end
end

# {urn:vim25}RoleAddedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
#   privilegeList - SOAP::SOAPString
class RoleAddedEvent < RoleEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :role
  attr_accessor :privilegeList

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, role = nil, privilegeList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @role = role
    @privilegeList = privilegeList
  end
end

# {urn:vim25}RoleUpdatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
#   privilegeList - SOAP::SOAPString
class RoleUpdatedEvent < RoleEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :role
  attr_accessor :privilegeList

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, role = nil, privilegeList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @role = role
    @privilegeList = privilegeList
  end
end

# {urn:vim25}RoleRemovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   role - Bosh::Director::CloudProviders::VSphere::RoleEventArgument
class RoleRemovedEvent < RoleEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :role

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, role = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @role = role
  end
end

# {urn:vim25}DatastoreEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreDestroyedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreDestroyedEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DatastoreRenamedEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}DatastoreCapacityIncreasedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   oldCapacity - SOAP::SOAPLong
#   newCapacity - SOAP::SOAPLong
class DatastoreCapacityIncreasedEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :oldCapacity
  attr_accessor :newCapacity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, oldCapacity = nil, newCapacity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @oldCapacity = oldCapacity
    @newCapacity = newCapacity
  end
end

# {urn:vim25}DatastoreDuplicatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreDuplicatedEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreFileEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   targetFile - SOAP::SOAPString
class DatastoreFileEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :targetFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, targetFile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @targetFile = targetFile
  end
end

# {urn:vim25}DatastoreFileCopiedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   targetFile - SOAP::SOAPString
#   sourceDatastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   sourceFile - SOAP::SOAPString
class DatastoreFileCopiedEvent < DatastoreFileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :targetFile
  attr_accessor :sourceDatastore
  attr_accessor :sourceFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, targetFile = nil, sourceDatastore = nil, sourceFile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @targetFile = targetFile
    @sourceDatastore = sourceDatastore
    @sourceFile = sourceFile
  end
end

# {urn:vim25}DatastoreFileMovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   targetFile - SOAP::SOAPString
#   sourceDatastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   sourceFile - SOAP::SOAPString
class DatastoreFileMovedEvent < DatastoreFileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :targetFile
  attr_accessor :sourceDatastore
  attr_accessor :sourceFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, targetFile = nil, sourceDatastore = nil, sourceFile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @targetFile = targetFile
    @sourceDatastore = sourceDatastore
    @sourceFile = sourceFile
  end
end

# {urn:vim25}DatastoreFileDeletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   targetFile - SOAP::SOAPString
class DatastoreFileDeletedEvent < DatastoreFileEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore
  attr_accessor :targetFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil, targetFile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
    @targetFile = targetFile
  end
end

# {urn:vim25}NonVIWorkloadDetectedOnDatastoreEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class NonVIWorkloadDetectedOnDatastoreEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}DatastoreIORMReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class DatastoreIORMReconfiguredEvent < DatastoreEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}TaskEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   info - Bosh::Director::CloudProviders::VSphere::TaskInfo
class TaskEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @info = info
  end
end

# {urn:vim25}TaskTimeoutEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   info - Bosh::Director::CloudProviders::VSphere::TaskInfo
class TaskTimeoutEvent < TaskEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @info = info
  end
end

# {urn:vim25}LicenseEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class LicenseEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ServerLicenseExpiredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   product - SOAP::SOAPString
class ServerLicenseExpiredEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :product

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, product = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @product = product
  end
end

# {urn:vim25}HostLicenseExpiredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostLicenseExpiredEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}VMotionLicenseExpiredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class VMotionLicenseExpiredEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}NoLicenseEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   feature - Bosh::Director::CloudProviders::VSphere::LicenseFeatureInfo
class NoLicenseEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :feature

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, feature = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @feature = feature
  end
end

# {urn:vim25}LicenseServerUnavailableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   licenseServer - SOAP::SOAPString
class LicenseServerUnavailableEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :licenseServer

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, licenseServer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @licenseServer = licenseServer
  end
end

# {urn:vim25}LicenseServerAvailableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   licenseServer - SOAP::SOAPString
class LicenseServerAvailableEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :licenseServer

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, licenseServer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @licenseServer = licenseServer
  end
end

# {urn:vim25}InvalidEditionEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   feature - SOAP::SOAPString
class InvalidEditionEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :feature

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, feature = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @feature = feature
  end
end

# {urn:vim25}HostInventoryFullEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   capacity - SOAP::SOAPInt
class HostInventoryFullEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :capacity

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, capacity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @capacity = capacity
  end
end

# {urn:vim25}LicenseRestrictedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class LicenseRestrictedEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}IncorrectHostInformationEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class IncorrectHostInformationEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}UnlicensedVirtualMachinesEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   unlicensed - SOAP::SOAPInt
#   available - SOAP::SOAPInt
class UnlicensedVirtualMachinesEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :unlicensed
  attr_accessor :available

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, unlicensed = nil, available = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @unlicensed = unlicensed
    @available = available
  end
end

# {urn:vim25}UnlicensedVirtualMachinesFoundEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   available - SOAP::SOAPInt
class UnlicensedVirtualMachinesFoundEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :available

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, available = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @available = available
  end
end

# {urn:vim25}AllVirtualMachinesLicensedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class AllVirtualMachinesLicensedEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}LicenseNonComplianceEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   url - SOAP::SOAPString
class LicenseNonComplianceEvent < LicenseEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :url

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, url = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @url = url
  end
end

# {urn:vim25}LicenseExpiredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   feature - Bosh::Director::CloudProviders::VSphere::LicenseFeatureInfo
class LicenseExpiredEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :feature

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, feature = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @feature = feature
  end
end

# {urn:vim25}ClusterEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ClusterEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ClusterComplianceCheckedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   profile - Bosh::Director::CloudProviders::VSphere::ProfileEventArgument
class ClusterComplianceCheckedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :profile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, profile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @profile = profile
  end
end

# {urn:vim25}DasEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasEnabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasDisabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasDisabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasAdmissionControlDisabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasAdmissionControlDisabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasAdmissionControlEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasAdmissionControlEnabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasHostFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DasHostFailedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @failedHost = failedHost
  end
end

# {urn:vim25}DasHostIsolatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   isolatedHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DasHostIsolatedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :isolatedHost

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, isolatedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @isolatedHost = isolatedHost
  end
end

# {urn:vim25}DasClusterIsolatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasClusterIsolatedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasAgentUnavailableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasAgentUnavailableEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DasAgentFoundEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DasAgentFoundEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}InsufficientFailoverResourcesEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class InsufficientFailoverResourcesEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}FailoverLevelRestored
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class FailoverLevelRestored < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ClusterOvercommittedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ClusterOvercommittedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostOvercommittedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class HostOvercommittedEvent < ClusterOvercommittedEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ClusterStatusChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldStatus - SOAP::SOAPString
#   newStatus - SOAP::SOAPString
class ClusterStatusChangedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldStatus
  attr_accessor :newStatus

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldStatus = nil, newStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldStatus = oldStatus
    @newStatus = newStatus
  end
end

# {urn:vim25}HostStatusChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldStatus - SOAP::SOAPString
#   newStatus - SOAP::SOAPString
class HostStatusChangedEvent < ClusterStatusChangedEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldStatus
  attr_accessor :newStatus

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldStatus = nil, newStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldStatus = oldStatus
    @newStatus = newStatus
  end
end

# {urn:vim25}ClusterCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::FolderEventArgument
class ClusterCreatedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @parent = parent
  end
end

# {urn:vim25}ClusterDestroyedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ClusterDestroyedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsEnabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   behavior - SOAP::SOAPString
class DrsEnabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :behavior

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, behavior = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @behavior = behavior
  end
end

# {urn:vim25}DrsDisabledEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsDisabledEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ClusterReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class ClusterReconfiguredEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}HostMonitoringStateChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   state - SOAP::SOAPString
class HostMonitoringStateChangedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :state

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, state = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @state = state
  end
end

# {urn:vim25}VmHealthMonitoringStateChangedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   state - SOAP::SOAPString
class VmHealthMonitoringStateChangedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :state

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, state = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @state = state
  end
end

# {urn:vim25}DrsInvocationFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsInvocationFailedEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DrsRecoveredFromFailureEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DrsRecoveredFromFailureEvent < ClusterEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ResourcePoolEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourcePoolEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
  end
end

# {urn:vim25}ResourcePoolCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   parent - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourcePoolCreatedEvent < ResourcePoolEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
    @parent = parent
  end
end

# {urn:vim25}ResourcePoolDestroyedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourcePoolDestroyedEvent < ResourcePoolEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
  end
end

# {urn:vim25}ResourcePoolMovedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   oldParent - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
#   newParent - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourcePoolMovedEvent < ResourcePoolEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool
  attr_accessor :oldParent
  attr_accessor :newParent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil, oldParent = nil, newParent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
    @oldParent = oldParent
    @newParent = newParent
  end
end

# {urn:vim25}ResourcePoolReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourcePoolReconfiguredEvent < ResourcePoolEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
  end
end

# {urn:vim25}ResourceViolatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolEventArgument
class ResourceViolatedEvent < ResourcePoolEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :resourcePool

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, resourcePool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @resourcePool = resourcePool
  end
end

# {urn:vim25}TemplateUpgradeEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   legacyTemplate - SOAP::SOAPString
class TemplateUpgradeEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :legacyTemplate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, legacyTemplate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @legacyTemplate = legacyTemplate
  end
end

# {urn:vim25}TemplateBeingUpgradedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   legacyTemplate - SOAP::SOAPString
class TemplateBeingUpgradedEvent < TemplateUpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :legacyTemplate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, legacyTemplate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @legacyTemplate = legacyTemplate
  end
end

# {urn:vim25}TemplateUpgradeFailedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   legacyTemplate - SOAP::SOAPString
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class TemplateUpgradeFailedEvent < TemplateUpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :legacyTemplate
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, legacyTemplate = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @legacyTemplate = legacyTemplate
    @reason = reason
  end
end

# {urn:vim25}TemplateUpgradedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   legacyTemplate - SOAP::SOAPString
class TemplateUpgradedEvent < TemplateUpgradeEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :legacyTemplate

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, legacyTemplate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @legacyTemplate = legacyTemplate
  end
end

# {urn:vim25}LockerMisconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class LockerMisconfiguredEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @datastore = datastore
  end
end

# {urn:vim25}LockerReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldDatastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   newDatastore - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
class LockerReconfiguredEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldDatastore
  attr_accessor :newDatastore

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldDatastore = nil, newDatastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldDatastore = oldDatastore
    @newDatastore = newDatastore
  end
end

# {urn:vim25}DvsEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DvsEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DvsCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::FolderEventArgument
class DvsCreatedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @parent = parent
  end
end

# {urn:vim25}DvsRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DvsRenamedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}DvsReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   configSpec - Bosh::Director::CloudProviders::VSphere::DVSConfigSpec
class DvsReconfiguredEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :configSpec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, configSpec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @configSpec = configSpec
  end
end

# {urn:vim25}DvsUpgradeAvailableEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class DvsUpgradeAvailableEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :productInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, productInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @productInfo = productInfo
  end
end

# {urn:vim25}DvsUpgradeInProgressEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class DvsUpgradeInProgressEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :productInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, productInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @productInfo = productInfo
  end
end

# {urn:vim25}DvsUpgradeRejectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class DvsUpgradeRejectedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :productInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, productInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @productInfo = productInfo
  end
end

# {urn:vim25}DvsUpgradedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   productInfo - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class DvsUpgradedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :productInfo

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, productInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @productInfo = productInfo
  end
end

# {urn:vim25}DvsHostJoinedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostJoined - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DvsHostJoinedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostJoined

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostJoined = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostJoined = hostJoined
  end
end

# {urn:vim25}DvsHostLeftEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostLeft - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DvsHostLeftEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostLeft

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostLeft = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostLeft = hostLeft
  end
end

# {urn:vim25}OutOfSyncDvsHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostOutOfSync - Bosh::Director::CloudProviders::VSphere::DvsOutOfSyncHostArgument
class OutOfSyncDvsHost < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostOutOfSync

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostOutOfSync = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostOutOfSync = hostOutOfSync
  end
end

# {urn:vim25}DvsHostWentOutOfSyncEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostOutOfSync - Bosh::Director::CloudProviders::VSphere::DvsOutOfSyncHostArgument
class DvsHostWentOutOfSyncEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostOutOfSync

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostOutOfSync = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostOutOfSync = hostOutOfSync
  end
end

# {urn:vim25}DvsHostBackInSyncEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostBackInSync - Bosh::Director::CloudProviders::VSphere::HostEventArgument
class DvsHostBackInSyncEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostBackInSync

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostBackInSync = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostBackInSync = hostBackInSync
  end
end

# {urn:vim25}DvsHostStatusUpdated
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   hostMember - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   oldStatus - SOAP::SOAPString
#   newStatus - SOAP::SOAPString
#   oldStatusDetail - SOAP::SOAPString
#   newStatusDetail - SOAP::SOAPString
class DvsHostStatusUpdated < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :hostMember
  attr_accessor :oldStatus
  attr_accessor :newStatus
  attr_accessor :oldStatusDetail
  attr_accessor :newStatusDetail

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, hostMember = nil, oldStatus = nil, newStatus = nil, oldStatusDetail = nil, newStatusDetail = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @hostMember = hostMember
    @oldStatus = oldStatus
    @newStatus = newStatus
    @oldStatusDetail = oldStatusDetail
    @newStatusDetail = newStatusDetail
  end
end

# {urn:vim25}DvsPortCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortCreatedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortReconfiguredEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortDeletedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortDeletedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortConnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   connectee - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnectee
class DvsPortConnectedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey
  attr_accessor :connectee

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil, connectee = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
    @connectee = connectee
  end
end

# {urn:vim25}DvsPortDisconnectedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   connectee - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnectee
class DvsPortDisconnectedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey
  attr_accessor :connectee

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil, connectee = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
    @connectee = connectee
  end
end

# {urn:vim25}DvsPortLinkUpEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortLinkUpEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortLinkDownEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortLinkDownEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortJoinPortgroupEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   portgroupKey - SOAP::SOAPString
#   portgroupName - SOAP::SOAPString
class DvsPortJoinPortgroupEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey
  attr_accessor :portgroupKey
  attr_accessor :portgroupName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil, portgroupKey = nil, portgroupName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
    @portgroupKey = portgroupKey
    @portgroupName = portgroupName
  end
end

# {urn:vim25}DvsPortLeavePortgroupEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   portgroupKey - SOAP::SOAPString
#   portgroupName - SOAP::SOAPString
class DvsPortLeavePortgroupEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey
  attr_accessor :portgroupKey
  attr_accessor :portgroupName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil, portgroupKey = nil, portgroupName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
    @portgroupKey = portgroupKey
    @portgroupName = portgroupName
  end
end

# {urn:vim25}DvsPortBlockedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
#   statusDetail - SOAP::SOAPString
class DvsPortBlockedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey
  attr_accessor :statusDetail

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil, statusDetail = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
    @statusDetail = statusDetail
  end
end

# {urn:vim25}DvsPortUnblockedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortUnblockedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortEnteredPassthruEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortEnteredPassthruEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsPortExitedPassthruEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   portKey - SOAP::SOAPString
class DvsPortExitedPassthruEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :portKey

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, portKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @portKey = portKey
  end
end

# {urn:vim25}DvsDestroyedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DvsDestroyedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DvsMergedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   sourceDvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   destinationDvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
class DvsMergedEvent < DvsEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :sourceDvs
  attr_accessor :destinationDvs

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, sourceDvs = nil, destinationDvs = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @sourceDvs = sourceDvs
    @destinationDvs = destinationDvs
  end
end

# {urn:vim25}DVPortgroupEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DVPortgroupEvent < Event
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DVPortgroupCreatedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DVPortgroupCreatedEvent < DVPortgroupEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}DVPortgroupRenamedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   oldName - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DVPortgroupRenamedEvent < DVPortgroupEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :oldName
  attr_accessor :newName

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, oldName = nil, newName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @oldName = oldName
    @newName = newName
  end
end

# {urn:vim25}DVPortgroupReconfiguredEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
#   configSpec - Bosh::Director::CloudProviders::VSphere::DVPortgroupConfigSpec
class DVPortgroupReconfiguredEvent < DVPortgroupEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag
  attr_accessor :configSpec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil, configSpec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
    @configSpec = configSpec
  end
end

# {urn:vim25}DVPortgroupDestroyedEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chainId - SOAP::SOAPInt
#   createdTime - SOAP::SOAPDateTime
#   userName - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::DatacenterEventArgument
#   computeResource - Bosh::Director::CloudProviders::VSphere::ComputeResourceEventArgument
#   host - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   vm - Bosh::Director::CloudProviders::VSphere::VmEventArgument
#   ds - Bosh::Director::CloudProviders::VSphere::DatastoreEventArgument
#   net - Bosh::Director::CloudProviders::VSphere::NetworkEventArgument
#   dvs - Bosh::Director::CloudProviders::VSphere::DvsEventArgument
#   fullFormattedMessage - SOAP::SOAPString
#   changeTag - SOAP::SOAPString
class DVPortgroupDestroyedEvent < DVPortgroupEvent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chainId
  attr_accessor :createdTime
  attr_accessor :userName
  attr_accessor :datacenter
  attr_accessor :computeResource
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :ds
  attr_accessor :net
  attr_accessor :dvs
  attr_accessor :fullFormattedMessage
  attr_accessor :changeTag

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chainId = nil, createdTime = nil, userName = nil, datacenter = nil, computeResource = nil, host = nil, vm = nil, ds = nil, net = nil, dvs = nil, fullFormattedMessage = nil, changeTag = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chainId = chainId
    @createdTime = createdTime
    @userName = userName
    @datacenter = datacenter
    @computeResource = computeResource
    @host = host
    @vm = vm
    @ds = ds
    @net = net
    @dvs = dvs
    @fullFormattedMessage = fullFormattedMessage
    @changeTag = changeTag
  end
end

# {urn:vim25}ExtendedEventPair
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - SOAP::SOAPString
class ExtendedEventPair < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}VnicPortArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vnic - SOAP::SOAPString
#   port - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnection
class VnicPortArgument < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vnic
  attr_accessor :port

  def initialize(dynamicType = nil, dynamicProperty = [], vnic = nil, port = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vnic = vnic
    @port = port
  end
end

# {urn:vim25}DvsOutOfSyncHostArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   outOfSyncHost - Bosh::Director::CloudProviders::VSphere::HostEventArgument
#   configParamters - SOAP::SOAPString
class DvsOutOfSyncHostArgument < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :outOfSyncHost
  attr_accessor :configParamters

  def initialize(dynamicType = nil, dynamicProperty = [], outOfSyncHost = nil, configParamters = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @outOfSyncHost = outOfSyncHost
    @configParamters = configParamters
  end
end

# {urn:vim25}EventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class EventArgument < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}RoleEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   roleId - SOAP::SOAPInt
#   name - SOAP::SOAPString
class RoleEventArgument < EventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :roleId
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], roleId = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @roleId = roleId
    @name = name
  end
end

# {urn:vim25}EntityEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
class EntityEventArgument < EventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
  end
end

# {urn:vim25}ManagedEntityEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ManagedEntityEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @entity = entity
  end
end

# {urn:vim25}FolderEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   folder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FolderEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :folder

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, folder = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @folder = folder
  end
end

# {urn:vim25}DatacenterEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatacenterEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :datacenter

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, datacenter = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}ComputeResourceEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   computeResource - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ComputeResourceEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :computeResource

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, computeResource = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @computeResource = computeResource
  end
end

# {urn:vim25}ResourcePoolEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResourcePoolEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :resourcePool

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, resourcePool = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @resourcePool = resourcePool
  end
end

# {urn:vim25}HostEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HostEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @host = host
  end
end

# {urn:vim25}VmEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VmEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, vm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @vm = vm
  end
end

# {urn:vim25}DatastoreEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatastoreEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @datastore = datastore
  end
end

# {urn:vim25}NetworkEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class NetworkEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @network = network
  end
end

# {urn:vim25}AlarmEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AlarmEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :alarm

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, alarm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @alarm = alarm
  end
end

# {urn:vim25}ScheduledTaskEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ScheduledTaskEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :scheduledTask

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, scheduledTask = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @scheduledTask = scheduledTask
  end
end

# {urn:vim25}DvsEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   dvs - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DvsEventArgument < EntityEventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :dvs

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, dvs = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @dvs = dvs
  end
end

# {urn:vim25}ProfileEventArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   profile - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class ProfileEventArgument < EventArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :profile
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], profile = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @profile = profile
    @name = name
  end
end

# {urn:vim25}EventArgDesc
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   type - SOAP::SOAPString
#   description - Bosh::Director::CloudProviders::VSphere::ElementDescription
class EventArgDesc < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :type
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, type = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @type = type
    @description = description
  end
end

# {urn:vim25}EventDescriptionEventDetail
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   description - SOAP::SOAPString
#   category - SOAP::SOAPString
#   formatOnDatacenter - SOAP::SOAPString
#   formatOnComputeResource - SOAP::SOAPString
#   formatOnHost - SOAP::SOAPString
#   formatOnVm - SOAP::SOAPString
#   fullFormat - SOAP::SOAPString
#   longDescription - SOAP::SOAPString
class EventDescriptionEventDetail < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :description
  attr_accessor :category
  attr_accessor :formatOnDatacenter
  attr_accessor :formatOnComputeResource
  attr_accessor :formatOnHost
  attr_accessor :formatOnVm
  attr_accessor :fullFormat
  attr_accessor :longDescription

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, description = nil, category = nil, formatOnDatacenter = nil, formatOnComputeResource = nil, formatOnHost = nil, formatOnVm = nil, fullFormat = nil, longDescription = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @description = description
    @category = category
    @formatOnDatacenter = formatOnDatacenter
    @formatOnComputeResource = formatOnComputeResource
    @formatOnHost = formatOnHost
    @formatOnVm = formatOnVm
    @fullFormat = fullFormat
    @longDescription = longDescription
  end
end

# {urn:vim25}EventDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   category - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   eventInfo - Bosh::Director::CloudProviders::VSphere::EventDescriptionEventDetail
#   enumeratedTypes - Bosh::Director::CloudProviders::VSphere::EnumDescription
class EventDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :category
  attr_accessor :eventInfo
  attr_accessor :enumeratedTypes

  def initialize(dynamicType = nil, dynamicProperty = [], category = [], eventInfo = [], enumeratedTypes = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @category = category
    @eventInfo = eventInfo
    @enumeratedTypes = enumeratedTypes
  end
end

# {urn:vim25}EventFilterSpecByEntity
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   recursion - Bosh::Director::CloudProviders::VSphere::EventFilterSpecRecursionOption
class EventFilterSpecByEntity < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :recursion

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, recursion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @recursion = recursion
  end
end

# {urn:vim25}EventFilterSpecByTime
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   beginTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class EventFilterSpecByTime < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :beginTime
  attr_accessor :endTime

  def initialize(dynamicType = nil, dynamicProperty = [], beginTime = nil, endTime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @beginTime = beginTime
    @endTime = endTime
  end
end

# {urn:vim25}EventFilterSpecByUsername
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   systemUser - SOAP::SOAPBoolean
#   userList - SOAP::SOAPString
class EventFilterSpecByUsername < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :systemUser
  attr_accessor :userList

  def initialize(dynamicType = nil, dynamicProperty = [], systemUser = nil, userList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @systemUser = systemUser
    @userList = userList
  end
end

# {urn:vim25}EventFilterSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::EventFilterSpecByEntity
#   time - Bosh::Director::CloudProviders::VSphere::EventFilterSpecByTime
#   userName - Bosh::Director::CloudProviders::VSphere::EventFilterSpecByUsername
#   eventChainId - SOAP::SOAPInt
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   disableFullMessage - SOAP::SOAPBoolean
#   category - SOAP::SOAPString
#   type - SOAP::SOAPString
#   tag - SOAP::SOAPString
#   eventTypeId - SOAP::SOAPString
class EventFilterSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :time
  attr_accessor :userName
  attr_accessor :eventChainId
  attr_accessor :alarm
  attr_accessor :scheduledTask
  attr_accessor :disableFullMessage
  attr_accessor :category
  attr_accessor :type
  attr_accessor :tag
  attr_accessor :eventTypeId

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, time = nil, userName = nil, eventChainId = nil, alarm = nil, scheduledTask = nil, disableFullMessage = nil, category = [], type = [], tag = [], eventTypeId = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @time = time
    @userName = userName
    @eventChainId = eventChainId
    @alarm = alarm
    @scheduledTask = scheduledTask
    @disableFullMessage = disableFullMessage
    @category = category
    @type = type
    @tag = tag
    @eventTypeId = eventTypeId
  end
end

# {urn:vim25}DatacenterMismatchArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   inputDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatacenterMismatchArgument < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :entity
  attr_accessor :inputDatacenter

  def initialize(dynamicType = nil, dynamicProperty = [], entity = nil, inputDatacenter = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @entity = entity
    @inputDatacenter = inputDatacenter
  end
end

# {urn:vim25}DvsOperationBulkFaultFaultOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class DvsOperationBulkFaultFaultOnHost < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @fault = fault
  end
end

# {urn:vim25}MultipleCertificatesVerifyFaultThumbprintData
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   port - SOAP::SOAPInt
#   thumbprint - SOAP::SOAPString
class MultipleCertificatesVerifyFaultThumbprintData < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :port
  attr_accessor :thumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], port = nil, thumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @port = port
    @thumbprint = thumbprint
  end
end

# {urn:vim25}ProfileUpdateFailedUpdateFailure
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   profilePath - Bosh::Director::CloudProviders::VSphere::ProfilePropertyPath
#   errMsg - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ProfileUpdateFailedUpdateFailure < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :profilePath
  attr_accessor :errMsg

  def initialize(dynamicType = nil, dynamicProperty = [], profilePath = nil, errMsg = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @profilePath = profilePath
    @errMsg = errMsg
  end
end

# {urn:vim25}HostActiveDirectorySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   domainName - SOAP::SOAPString
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
class HostActiveDirectorySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :domainName
  attr_accessor :userName
  attr_accessor :password

  def initialize(dynamicType = nil, dynamicProperty = [], domainName = nil, userName = nil, password = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @domainName = domainName
    @userName = userName
    @password = password
  end
end

# {urn:vim25}HostActiveDirectory
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostActiveDirectorySpec
class HostActiveDirectory < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @spec = spec
  end
end

# {urn:vim25}HostAuthenticationManagerInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   authConfig - Bosh::Director::CloudProviders::VSphere::HostAuthenticationStoreInfo
class HostAuthenticationManagerInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :authConfig

  def initialize(dynamicType = nil, dynamicProperty = [], authConfig = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @authConfig = authConfig
  end
end

# {urn:vim25}HostAuthenticationStoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
class HostAuthenticationStoreInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
  end
end

# {urn:vim25}HostDirectoryStoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
class HostDirectoryStoreInfo < HostAuthenticationStoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
  end
end

# {urn:vim25}HostActiveDirectoryInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   joinedDomain - SOAP::SOAPString
#   trustedDomain - SOAP::SOAPString
#   domainMembershipStatus - SOAP::SOAPString
class HostActiveDirectoryInfo < HostDirectoryStoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :joinedDomain
  attr_accessor :trustedDomain
  attr_accessor :domainMembershipStatus

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, joinedDomain = nil, trustedDomain = [], domainMembershipStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @joinedDomain = joinedDomain
    @trustedDomain = trustedDomain
    @domainMembershipStatus = domainMembershipStatus
  end
end

# {urn:vim25}HostLocalAuthenticationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
class HostLocalAuthenticationInfo < HostAuthenticationStoreInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
  end
end

# {urn:vim25}AutoStartDefaults
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   startDelay - SOAP::SOAPInt
#   stopDelay - SOAP::SOAPInt
#   waitForHeartbeat - SOAP::SOAPBoolean
#   stopAction - SOAP::SOAPString
class AutoStartDefaults < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :startDelay
  attr_accessor :stopDelay
  attr_accessor :waitForHeartbeat
  attr_accessor :stopAction

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, startDelay = nil, stopDelay = nil, waitForHeartbeat = nil, stopAction = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @startDelay = startDelay
    @stopDelay = stopDelay
    @waitForHeartbeat = waitForHeartbeat
    @stopAction = stopAction
  end
end

# {urn:vim25}AutoStartPowerInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   startOrder - SOAP::SOAPInt
#   startDelay - SOAP::SOAPInt
#   waitForHeartbeat - Bosh::Director::CloudProviders::VSphere::AutoStartWaitHeartbeatSetting
#   startAction - SOAP::SOAPString
#   stopDelay - SOAP::SOAPInt
#   stopAction - SOAP::SOAPString
class AutoStartPowerInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :startOrder
  attr_accessor :startDelay
  attr_accessor :waitForHeartbeat
  attr_accessor :startAction
  attr_accessor :stopDelay
  attr_accessor :stopAction

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, startOrder = nil, startDelay = nil, waitForHeartbeat = nil, startAction = nil, stopDelay = nil, stopAction = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @startOrder = startOrder
    @startDelay = startDelay
    @waitForHeartbeat = waitForHeartbeat
    @startAction = startAction
    @stopDelay = stopDelay
    @stopAction = stopAction
  end
end

# {urn:vim25}HostAutoStartManagerConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   defaults - Bosh::Director::CloudProviders::VSphere::AutoStartDefaults
#   powerInfo - Bosh::Director::CloudProviders::VSphere::AutoStartPowerInfo
class HostAutoStartManagerConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :defaults
  attr_accessor :powerInfo

  def initialize(dynamicType = nil, dynamicProperty = [], defaults = nil, powerInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @defaults = defaults
    @powerInfo = powerInfo
  end
end

# {urn:vim25}HostBootDeviceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   bootDevices - Bosh::Director::CloudProviders::VSphere::HostBootDevice
#   currentBootDeviceKey - SOAP::SOAPString
class HostBootDeviceInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :bootDevices
  attr_accessor :currentBootDeviceKey

  def initialize(dynamicType = nil, dynamicProperty = [], bootDevices = [], currentBootDeviceKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @bootDevices = bootDevices
    @currentBootDeviceKey = currentBootDeviceKey
  end
end

# {urn:vim25}HostBootDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   description - SOAP::SOAPString
class HostBootDevice < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @description = description
  end
end

# {urn:vim25}HostCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   recursiveResourcePoolsSupported - SOAP::SOAPBoolean
#   cpuMemoryResourceConfigurationSupported - SOAP::SOAPBoolean
#   rebootSupported - SOAP::SOAPBoolean
#   shutdownSupported - SOAP::SOAPBoolean
#   vmotionSupported - SOAP::SOAPBoolean
#   standbySupported - SOAP::SOAPBoolean
#   ipmiSupported - SOAP::SOAPBoolean
#   maxSupportedVMs - SOAP::SOAPInt
#   maxRunningVMs - SOAP::SOAPInt
#   maxSupportedVcpus - SOAP::SOAPInt
#   datastorePrincipalSupported - SOAP::SOAPBoolean
#   sanSupported - SOAP::SOAPBoolean
#   nfsSupported - SOAP::SOAPBoolean
#   iscsiSupported - SOAP::SOAPBoolean
#   vlanTaggingSupported - SOAP::SOAPBoolean
#   nicTeamingSupported - SOAP::SOAPBoolean
#   highGuestMemSupported - SOAP::SOAPBoolean
#   maintenanceModeSupported - SOAP::SOAPBoolean
#   suspendedRelocateSupported - SOAP::SOAPBoolean
#   restrictedSnapshotRelocateSupported - SOAP::SOAPBoolean
#   perVmSwapFiles - SOAP::SOAPBoolean
#   localSwapDatastoreSupported - SOAP::SOAPBoolean
#   unsharedSwapVMotionSupported - SOAP::SOAPBoolean
#   backgroundSnapshotsSupported - SOAP::SOAPBoolean
#   preAssignedPCIUnitNumbersSupported - SOAP::SOAPBoolean
#   screenshotSupported - SOAP::SOAPBoolean
#   scaledScreenshotSupported - SOAP::SOAPBoolean
#   storageVMotionSupported - SOAP::SOAPBoolean
#   vmotionWithStorageVMotionSupported - SOAP::SOAPBoolean
#   recordReplaySupported - SOAP::SOAPBoolean
#   ftSupported - SOAP::SOAPBoolean
#   replayUnsupportedReason - SOAP::SOAPString
#   replayCompatibilityIssues - SOAP::SOAPString
#   ftCompatibilityIssues - SOAP::SOAPString
#   loginBySSLThumbprintSupported - SOAP::SOAPBoolean
#   cloneFromSnapshotSupported - SOAP::SOAPBoolean
#   deltaDiskBackingsSupported - SOAP::SOAPBoolean
#   perVMNetworkTrafficShapingSupported - SOAP::SOAPBoolean
#   tpmSupported - SOAP::SOAPBoolean
#   supportedCpuFeature - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
#   virtualExecUsageSupported - SOAP::SOAPBoolean
#   storageIORMSupported - SOAP::SOAPBoolean
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
#   vmDirectPathGen2UnsupportedReason - SOAP::SOAPString
#   vmDirectPathGen2UnsupportedReasonExtended - SOAP::SOAPString
#   vStorageCapable - SOAP::SOAPBoolean
class HostCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :recursiveResourcePoolsSupported
  attr_accessor :cpuMemoryResourceConfigurationSupported
  attr_accessor :rebootSupported
  attr_accessor :shutdownSupported
  attr_accessor :vmotionSupported
  attr_accessor :standbySupported
  attr_accessor :ipmiSupported
  attr_accessor :maxSupportedVMs
  attr_accessor :maxRunningVMs
  attr_accessor :maxSupportedVcpus
  attr_accessor :datastorePrincipalSupported
  attr_accessor :sanSupported
  attr_accessor :nfsSupported
  attr_accessor :iscsiSupported
  attr_accessor :vlanTaggingSupported
  attr_accessor :nicTeamingSupported
  attr_accessor :highGuestMemSupported
  attr_accessor :maintenanceModeSupported
  attr_accessor :suspendedRelocateSupported
  attr_accessor :restrictedSnapshotRelocateSupported
  attr_accessor :perVmSwapFiles
  attr_accessor :localSwapDatastoreSupported
  attr_accessor :unsharedSwapVMotionSupported
  attr_accessor :backgroundSnapshotsSupported
  attr_accessor :preAssignedPCIUnitNumbersSupported
  attr_accessor :screenshotSupported
  attr_accessor :scaledScreenshotSupported
  attr_accessor :storageVMotionSupported
  attr_accessor :vmotionWithStorageVMotionSupported
  attr_accessor :recordReplaySupported
  attr_accessor :ftSupported
  attr_accessor :replayUnsupportedReason
  attr_accessor :replayCompatibilityIssues
  attr_accessor :ftCompatibilityIssues
  attr_accessor :loginBySSLThumbprintSupported
  attr_accessor :cloneFromSnapshotSupported
  attr_accessor :deltaDiskBackingsSupported
  attr_accessor :perVMNetworkTrafficShapingSupported
  attr_accessor :tpmSupported
  attr_accessor :supportedCpuFeature
  attr_accessor :virtualExecUsageSupported
  attr_accessor :storageIORMSupported
  attr_accessor :vmDirectPathGen2Supported
  attr_accessor :vmDirectPathGen2UnsupportedReason
  attr_accessor :vmDirectPathGen2UnsupportedReasonExtended
  attr_accessor :vStorageCapable

  def initialize(dynamicType = nil, dynamicProperty = [], recursiveResourcePoolsSupported = nil, cpuMemoryResourceConfigurationSupported = nil, rebootSupported = nil, shutdownSupported = nil, vmotionSupported = nil, standbySupported = nil, ipmiSupported = nil, maxSupportedVMs = nil, maxRunningVMs = nil, maxSupportedVcpus = nil, datastorePrincipalSupported = nil, sanSupported = nil, nfsSupported = nil, iscsiSupported = nil, vlanTaggingSupported = nil, nicTeamingSupported = nil, highGuestMemSupported = nil, maintenanceModeSupported = nil, suspendedRelocateSupported = nil, restrictedSnapshotRelocateSupported = nil, perVmSwapFiles = nil, localSwapDatastoreSupported = nil, unsharedSwapVMotionSupported = nil, backgroundSnapshotsSupported = nil, preAssignedPCIUnitNumbersSupported = nil, screenshotSupported = nil, scaledScreenshotSupported = nil, storageVMotionSupported = nil, vmotionWithStorageVMotionSupported = nil, recordReplaySupported = nil, ftSupported = nil, replayUnsupportedReason = nil, replayCompatibilityIssues = [], ftCompatibilityIssues = [], loginBySSLThumbprintSupported = nil, cloneFromSnapshotSupported = nil, deltaDiskBackingsSupported = nil, perVMNetworkTrafficShapingSupported = nil, tpmSupported = nil, supportedCpuFeature = [], virtualExecUsageSupported = nil, storageIORMSupported = nil, vmDirectPathGen2Supported = nil, vmDirectPathGen2UnsupportedReason = [], vmDirectPathGen2UnsupportedReasonExtended = nil, vStorageCapable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @recursiveResourcePoolsSupported = recursiveResourcePoolsSupported
    @cpuMemoryResourceConfigurationSupported = cpuMemoryResourceConfigurationSupported
    @rebootSupported = rebootSupported
    @shutdownSupported = shutdownSupported
    @vmotionSupported = vmotionSupported
    @standbySupported = standbySupported
    @ipmiSupported = ipmiSupported
    @maxSupportedVMs = maxSupportedVMs
    @maxRunningVMs = maxRunningVMs
    @maxSupportedVcpus = maxSupportedVcpus
    @datastorePrincipalSupported = datastorePrincipalSupported
    @sanSupported = sanSupported
    @nfsSupported = nfsSupported
    @iscsiSupported = iscsiSupported
    @vlanTaggingSupported = vlanTaggingSupported
    @nicTeamingSupported = nicTeamingSupported
    @highGuestMemSupported = highGuestMemSupported
    @maintenanceModeSupported = maintenanceModeSupported
    @suspendedRelocateSupported = suspendedRelocateSupported
    @restrictedSnapshotRelocateSupported = restrictedSnapshotRelocateSupported
    @perVmSwapFiles = perVmSwapFiles
    @localSwapDatastoreSupported = localSwapDatastoreSupported
    @unsharedSwapVMotionSupported = unsharedSwapVMotionSupported
    @backgroundSnapshotsSupported = backgroundSnapshotsSupported
    @preAssignedPCIUnitNumbersSupported = preAssignedPCIUnitNumbersSupported
    @screenshotSupported = screenshotSupported
    @scaledScreenshotSupported = scaledScreenshotSupported
    @storageVMotionSupported = storageVMotionSupported
    @vmotionWithStorageVMotionSupported = vmotionWithStorageVMotionSupported
    @recordReplaySupported = recordReplaySupported
    @ftSupported = ftSupported
    @replayUnsupportedReason = replayUnsupportedReason
    @replayCompatibilityIssues = replayCompatibilityIssues
    @ftCompatibilityIssues = ftCompatibilityIssues
    @loginBySSLThumbprintSupported = loginBySSLThumbprintSupported
    @cloneFromSnapshotSupported = cloneFromSnapshotSupported
    @deltaDiskBackingsSupported = deltaDiskBackingsSupported
    @perVMNetworkTrafficShapingSupported = perVMNetworkTrafficShapingSupported
    @tpmSupported = tpmSupported
    @supportedCpuFeature = supportedCpuFeature
    @virtualExecUsageSupported = virtualExecUsageSupported
    @storageIORMSupported = storageIORMSupported
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
    @vmDirectPathGen2UnsupportedReason = vmDirectPathGen2UnsupportedReason
    @vmDirectPathGen2UnsupportedReasonExtended = vmDirectPathGen2UnsupportedReasonExtended
    @vStorageCapable = vStorageCapable
  end
end

# {urn:vim25}HostConfigChange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostConfigChange < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   product - Bosh::Director::CloudProviders::VSphere::AboutInfo
#   hyperThread - Bosh::Director::CloudProviders::VSphere::HostHyperThreadScheduleInfo
#   consoleReservation - Bosh::Director::CloudProviders::VSphere::ServiceConsoleReservationInfo
#   virtualMachineReservation - Bosh::Director::CloudProviders::VSphere::VirtualMachineMemoryReservationInfo
#   storageDevice - Bosh::Director::CloudProviders::VSphere::HostStorageDeviceInfo
#   multipathState - Bosh::Director::CloudProviders::VSphere::HostMultipathStateInfo
#   fileSystemVolume - Bosh::Director::CloudProviders::VSphere::HostFileSystemVolumeInfo
#   systemFile - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::HostNetworkInfo
#   vmotion - Bosh::Director::CloudProviders::VSphere::HostVMotionInfo
#   virtualNicManagerInfo - Bosh::Director::CloudProviders::VSphere::HostVirtualNicManagerInfo
#   capabilities - Bosh::Director::CloudProviders::VSphere::HostNetCapabilities
#   datastoreCapabilities - Bosh::Director::CloudProviders::VSphere::HostDatastoreSystemCapabilities
#   offloadCapabilities - Bosh::Director::CloudProviders::VSphere::HostNetOffloadCapabilities
#   service - Bosh::Director::CloudProviders::VSphere::HostServiceInfo
#   firewall - Bosh::Director::CloudProviders::VSphere::HostFirewallInfo
#   autoStart - Bosh::Director::CloudProviders::VSphere::HostAutoStartManagerConfig
#   activeDiagnosticPartition - Bosh::Director::CloudProviders::VSphere::HostDiagnosticPartition
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
#   optionDef - Bosh::Director::CloudProviders::VSphere::OptionDef
#   datastorePrincipal - SOAP::SOAPString
#   localSwapDatastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   systemResources - Bosh::Director::CloudProviders::VSphere::HostSystemResourceInfo
#   dateTimeInfo - Bosh::Director::CloudProviders::VSphere::HostDateTimeInfo
#   flags - Bosh::Director::CloudProviders::VSphere::HostFlagInfo
#   adminDisabled - SOAP::SOAPBoolean
#   ipmi - Bosh::Director::CloudProviders::VSphere::HostIpmiInfo
#   sslThumbprintInfo - Bosh::Director::CloudProviders::VSphere::HostSslThumbprintInfo
#   pciPassthruInfo - Bosh::Director::CloudProviders::VSphere::HostPciPassthruInfo
#   authenticationManagerInfo - Bosh::Director::CloudProviders::VSphere::HostAuthenticationManagerInfo
#   featureVersion - Bosh::Director::CloudProviders::VSphere::HostFeatureVersionInfo
#   powerSystemCapability - Bosh::Director::CloudProviders::VSphere::PowerSystemCapability
#   powerSystemInfo - Bosh::Director::CloudProviders::VSphere::PowerSystemInfo
class HostConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :product
  attr_accessor :hyperThread
  attr_accessor :consoleReservation
  attr_accessor :virtualMachineReservation
  attr_accessor :storageDevice
  attr_accessor :multipathState
  attr_accessor :fileSystemVolume
  attr_accessor :systemFile
  attr_accessor :network
  attr_accessor :vmotion
  attr_accessor :virtualNicManagerInfo
  attr_accessor :capabilities
  attr_accessor :datastoreCapabilities
  attr_accessor :offloadCapabilities
  attr_accessor :service
  attr_accessor :firewall
  attr_accessor :autoStart
  attr_accessor :activeDiagnosticPartition
  attr_accessor :option
  attr_accessor :optionDef
  attr_accessor :datastorePrincipal
  attr_accessor :localSwapDatastore
  attr_accessor :systemResources
  attr_accessor :dateTimeInfo
  attr_accessor :flags
  attr_accessor :adminDisabled
  attr_accessor :ipmi
  attr_accessor :sslThumbprintInfo
  attr_accessor :pciPassthruInfo
  attr_accessor :authenticationManagerInfo
  attr_accessor :featureVersion
  attr_accessor :powerSystemCapability
  attr_accessor :powerSystemInfo

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, product = nil, hyperThread = nil, consoleReservation = nil, virtualMachineReservation = nil, storageDevice = nil, multipathState = nil, fileSystemVolume = nil, systemFile = [], network = nil, vmotion = nil, virtualNicManagerInfo = nil, capabilities = nil, datastoreCapabilities = nil, offloadCapabilities = nil, service = nil, firewall = nil, autoStart = nil, activeDiagnosticPartition = nil, option = [], optionDef = [], datastorePrincipal = nil, localSwapDatastore = nil, systemResources = nil, dateTimeInfo = nil, flags = nil, adminDisabled = nil, ipmi = nil, sslThumbprintInfo = nil, pciPassthruInfo = [], authenticationManagerInfo = nil, featureVersion = [], powerSystemCapability = nil, powerSystemInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @product = product
    @hyperThread = hyperThread
    @consoleReservation = consoleReservation
    @virtualMachineReservation = virtualMachineReservation
    @storageDevice = storageDevice
    @multipathState = multipathState
    @fileSystemVolume = fileSystemVolume
    @systemFile = systemFile
    @network = network
    @vmotion = vmotion
    @virtualNicManagerInfo = virtualNicManagerInfo
    @capabilities = capabilities
    @datastoreCapabilities = datastoreCapabilities
    @offloadCapabilities = offloadCapabilities
    @service = service
    @firewall = firewall
    @autoStart = autoStart
    @activeDiagnosticPartition = activeDiagnosticPartition
    @option = option
    @optionDef = optionDef
    @datastorePrincipal = datastorePrincipal
    @localSwapDatastore = localSwapDatastore
    @systemResources = systemResources
    @dateTimeInfo = dateTimeInfo
    @flags = flags
    @adminDisabled = adminDisabled
    @ipmi = ipmi
    @sslThumbprintInfo = sslThumbprintInfo
    @pciPassthruInfo = pciPassthruInfo
    @authenticationManagerInfo = authenticationManagerInfo
    @featureVersion = featureVersion
    @powerSystemCapability = powerSystemCapability
    @powerSystemInfo = powerSystemInfo
  end
end

# {urn:vim25}HostConfigManager
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   cpuScheduler - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastoreSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   memoryManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   storageSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   networkSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmotionSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   virtualNicManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   serviceSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   firewallSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   advancedOption - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diagnosticSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   autoStartManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   snmpSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dateTimeSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   patchManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   bootDeviceSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   firmwareSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   healthStatusSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pciPassthruSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   kernelModuleSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   authenticationManager - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   powerSystem - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HostConfigManager < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :cpuScheduler
  attr_accessor :datastoreSystem
  attr_accessor :memoryManager
  attr_accessor :storageSystem
  attr_accessor :networkSystem
  attr_accessor :vmotionSystem
  attr_accessor :virtualNicManager
  attr_accessor :serviceSystem
  attr_accessor :firewallSystem
  attr_accessor :advancedOption
  attr_accessor :diagnosticSystem
  attr_accessor :autoStartManager
  attr_accessor :snmpSystem
  attr_accessor :dateTimeSystem
  attr_accessor :patchManager
  attr_accessor :bootDeviceSystem
  attr_accessor :firmwareSystem
  attr_accessor :healthStatusSystem
  attr_accessor :pciPassthruSystem
  attr_accessor :licenseManager
  attr_accessor :kernelModuleSystem
  attr_accessor :authenticationManager
  attr_accessor :powerSystem

  def initialize(dynamicType = nil, dynamicProperty = [], cpuScheduler = nil, datastoreSystem = nil, memoryManager = nil, storageSystem = nil, networkSystem = nil, vmotionSystem = nil, virtualNicManager = nil, serviceSystem = nil, firewallSystem = nil, advancedOption = nil, diagnosticSystem = nil, autoStartManager = nil, snmpSystem = nil, dateTimeSystem = nil, patchManager = nil, bootDeviceSystem = nil, firmwareSystem = nil, healthStatusSystem = nil, pciPassthruSystem = nil, licenseManager = nil, kernelModuleSystem = nil, authenticationManager = nil, powerSystem = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @cpuScheduler = cpuScheduler
    @datastoreSystem = datastoreSystem
    @memoryManager = memoryManager
    @storageSystem = storageSystem
    @networkSystem = networkSystem
    @vmotionSystem = vmotionSystem
    @virtualNicManager = virtualNicManager
    @serviceSystem = serviceSystem
    @firewallSystem = firewallSystem
    @advancedOption = advancedOption
    @diagnosticSystem = diagnosticSystem
    @autoStartManager = autoStartManager
    @snmpSystem = snmpSystem
    @dateTimeSystem = dateTimeSystem
    @patchManager = patchManager
    @bootDeviceSystem = bootDeviceSystem
    @firmwareSystem = firmwareSystem
    @healthStatusSystem = healthStatusSystem
    @pciPassthruSystem = pciPassthruSystem
    @licenseManager = licenseManager
    @kernelModuleSystem = kernelModuleSystem
    @authenticationManager = authenticationManager
    @powerSystem = powerSystem
  end
end

# {urn:vim25}HostConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   nasDatastore - Bosh::Director::CloudProviders::VSphere::HostNasVolumeConfig
#   network - Bosh::Director::CloudProviders::VSphere::HostNetworkConfig
#   nicTypeSelection - Bosh::Director::CloudProviders::VSphere::HostVirtualNicManagerNicTypeSelection
#   service - Bosh::Director::CloudProviders::VSphere::HostServiceConfig
#   firewall - Bosh::Director::CloudProviders::VSphere::HostFirewallConfig
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
#   datastorePrincipal - SOAP::SOAPString
#   datastorePrincipalPasswd - SOAP::SOAPString
#   datetime - Bosh::Director::CloudProviders::VSphere::HostDateTimeConfig
#   storageDevice - Bosh::Director::CloudProviders::VSphere::HostStorageDeviceInfo
#   license - Bosh::Director::CloudProviders::VSphere::HostLicenseSpec
#   security - Bosh::Director::CloudProviders::VSphere::HostSecuritySpec
#   userAccount - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
#   usergroupAccount - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
#   memory - Bosh::Director::CloudProviders::VSphere::HostMemorySpec
#   activeDirectory - Bosh::Director::CloudProviders::VSphere::HostActiveDirectory
class HostConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :nasDatastore
  attr_accessor :network
  attr_accessor :nicTypeSelection
  attr_accessor :service
  attr_accessor :firewall
  attr_accessor :option
  attr_accessor :datastorePrincipal
  attr_accessor :datastorePrincipalPasswd
  attr_accessor :datetime
  attr_accessor :storageDevice
  attr_accessor :license
  attr_accessor :security
  attr_accessor :userAccount
  attr_accessor :usergroupAccount
  attr_accessor :memory
  attr_accessor :activeDirectory

  def initialize(dynamicType = nil, dynamicProperty = [], nasDatastore = [], network = nil, nicTypeSelection = [], service = [], firewall = nil, option = [], datastorePrincipal = nil, datastorePrincipalPasswd = nil, datetime = nil, storageDevice = nil, license = nil, security = nil, userAccount = [], usergroupAccount = [], memory = nil, activeDirectory = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @nasDatastore = nasDatastore
    @network = network
    @nicTypeSelection = nicTypeSelection
    @service = service
    @firewall = firewall
    @option = option
    @datastorePrincipal = datastorePrincipal
    @datastorePrincipalPasswd = datastorePrincipalPasswd
    @datetime = datetime
    @storageDevice = storageDevice
    @license = license
    @security = security
    @userAccount = userAccount
    @usergroupAccount = usergroupAccount
    @memory = memory
    @activeDirectory = activeDirectory
  end
end

# {urn:vim25}HostConnectInfoNetworkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   summary - Bosh::Director::CloudProviders::VSphere::NetworkSummary
class HostConnectInfoNetworkInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :summary

  def initialize(dynamicType = nil, dynamicProperty = [], summary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @summary = summary
  end
end

# {urn:vim25}HostNewNetworkConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   summary - Bosh::Director::CloudProviders::VSphere::NetworkSummary
class HostNewNetworkConnectInfo < HostConnectInfoNetworkInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :summary

  def initialize(dynamicType = nil, dynamicProperty = [], summary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @summary = summary
  end
end

# {urn:vim25}HostDatastoreConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   summary - Bosh::Director::CloudProviders::VSphere::DatastoreSummary
class HostDatastoreConnectInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :summary

  def initialize(dynamicType = nil, dynamicProperty = [], summary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @summary = summary
  end
end

# {urn:vim25}HostDatastoreExistsConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   summary - Bosh::Director::CloudProviders::VSphere::DatastoreSummary
#   newDatastoreName - SOAP::SOAPString
class HostDatastoreExistsConnectInfo < HostDatastoreConnectInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :summary
  attr_accessor :newDatastoreName

  def initialize(dynamicType = nil, dynamicProperty = [], summary = nil, newDatastoreName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @summary = summary
    @newDatastoreName = newDatastoreName
  end
end

# {urn:vim25}HostDatastoreNameConflictConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   summary - Bosh::Director::CloudProviders::VSphere::DatastoreSummary
#   newDatastoreName - SOAP::SOAPString
class HostDatastoreNameConflictConnectInfo < HostDatastoreConnectInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :summary
  attr_accessor :newDatastoreName

  def initialize(dynamicType = nil, dynamicProperty = [], summary = nil, newDatastoreName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @summary = summary
    @newDatastoreName = newDatastoreName
  end
end

# {urn:vim25}HostLicenseConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   license - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
#   evaluation - Bosh::Director::CloudProviders::VSphere::LicenseManagerEvaluationInfo
class HostLicenseConnectInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :license
  attr_accessor :evaluation

  def initialize(dynamicType = nil, dynamicProperty = [], license = nil, evaluation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @license = license
    @evaluation = evaluation
  end
end

# {urn:vim25}HostConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serverIp - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::HostListSummary
#   vm - Bosh::Director::CloudProviders::VSphere::VirtualMachineSummary
#   vimAccountNameRequired - SOAP::SOAPBoolean
#   clusterSupported - SOAP::SOAPBoolean
#   network - Bosh::Director::CloudProviders::VSphere::HostConnectInfoNetworkInfo
#   datastore - Bosh::Director::CloudProviders::VSphere::HostDatastoreConnectInfo
#   license - Bosh::Director::CloudProviders::VSphere::HostLicenseConnectInfo
class HostConnectInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serverIp
  attr_accessor :host
  attr_accessor :vm
  attr_accessor :vimAccountNameRequired
  attr_accessor :clusterSupported
  attr_accessor :network
  attr_accessor :datastore
  attr_accessor :license

  def initialize(dynamicType = nil, dynamicProperty = [], serverIp = nil, host = nil, vm = [], vimAccountNameRequired = nil, clusterSupported = nil, network = [], datastore = [], license = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serverIp = serverIp
    @host = host
    @vm = vm
    @vimAccountNameRequired = vimAccountNameRequired
    @clusterSupported = clusterSupported
    @network = network
    @datastore = datastore
    @license = license
  end
end

# {urn:vim25}HostConnectSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostName - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   sslThumbprint - SOAP::SOAPString
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
#   vmFolder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
#   vimAccountName - SOAP::SOAPString
#   vimAccountPassword - SOAP::SOAPString
#   managementIp - SOAP::SOAPString
class HostConnectSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostName
  attr_accessor :port
  attr_accessor :sslThumbprint
  attr_accessor :userName
  attr_accessor :password
  attr_accessor :vmFolder
  attr_accessor :force
  attr_accessor :vimAccountName
  attr_accessor :vimAccountPassword
  attr_accessor :managementIp

  def initialize(dynamicType = nil, dynamicProperty = [], hostName = nil, port = nil, sslThumbprint = nil, userName = nil, password = nil, vmFolder = nil, force = nil, vimAccountName = nil, vimAccountPassword = nil, managementIp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostName = hostName
    @port = port
    @sslThumbprint = sslThumbprint
    @userName = userName
    @password = password
    @vmFolder = vmFolder
    @force = force
    @vimAccountName = vimAccountName
    @vimAccountPassword = vimAccountPassword
    @managementIp = managementIp
  end
end

# {urn:vim25}HostCpuIdInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   level - SOAP::SOAPInt
#   vendor - SOAP::SOAPString
#   eax - SOAP::SOAPString
#   ebx - SOAP::SOAPString
#   ecx - SOAP::SOAPString
#   edx - SOAP::SOAPString
class HostCpuIdInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :level
  attr_accessor :vendor
  attr_accessor :eax
  attr_accessor :ebx
  attr_accessor :ecx
  attr_accessor :edx

  def initialize(dynamicType = nil, dynamicProperty = [], level = nil, vendor = nil, eax = nil, ebx = nil, ecx = nil, edx = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @level = level
    @vendor = vendor
    @eax = eax
    @ebx = ebx
    @ecx = ecx
    @edx = edx
  end
end

# {urn:vim25}HostHyperThreadScheduleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   available - SOAP::SOAPBoolean
#   active - SOAP::SOAPBoolean
#   config - SOAP::SOAPBoolean
class HostHyperThreadScheduleInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :available
  attr_accessor :active
  attr_accessor :config

  def initialize(dynamicType = nil, dynamicProperty = [], available = nil, active = nil, config = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @available = available
    @active = active
    @config = config
  end
end

# {urn:vim25}FileQueryFlags
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileType - SOAP::SOAPBoolean
#   fileSize - SOAP::SOAPBoolean
#   modification - SOAP::SOAPBoolean
#   fileOwner - SOAP::SOAPBoolean
class FileQueryFlags < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileType
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :fileOwner

  def initialize(dynamicType = nil, dynamicProperty = [], fileType = nil, fileSize = nil, modification = nil, fileOwner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileType = fileType
    @fileSize = fileSize
    @modification = modification
    @fileOwner = fileOwner
  end
end

# {urn:vim25}FileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class FileInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}VmConfigFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
#   configVersion - SOAP::SOAPInt
class VmConfigFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil, configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
    @configVersion = configVersion
  end
end

# {urn:vim25}TemplateConfigFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
#   configVersion - SOAP::SOAPInt
class TemplateConfigFileInfo < VmConfigFileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil, configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
    @configVersion = configVersion
  end
end

# {urn:vim25}VmDiskFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
#   diskType - SOAP::SOAPString
#   capacityKb - SOAP::SOAPLong
#   hardwareVersion - SOAP::SOAPInt
#   controllerType - SOAP::SOAPString
#   diskExtents - SOAP::SOAPString
#   thin - SOAP::SOAPBoolean
class VmDiskFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner
  attr_accessor :diskType
  attr_accessor :capacityKb
  attr_accessor :hardwareVersion
  attr_accessor :controllerType
  attr_accessor :diskExtents
  attr_accessor :thin

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil, diskType = nil, capacityKb = nil, hardwareVersion = nil, controllerType = nil, diskExtents = [], thin = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
    @diskType = diskType
    @capacityKb = capacityKb
    @hardwareVersion = hardwareVersion
    @controllerType = controllerType
    @diskExtents = diskExtents
    @thin = thin
  end
end

# {urn:vim25}FolderFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class FolderFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}VmSnapshotFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class VmSnapshotFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}IsoImageFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class IsoImageFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}FloppyImageFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class FloppyImageFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}VmNvramFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class VmNvramFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}VmLogFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   modification - SOAP::SOAPDateTime
#   owner - SOAP::SOAPString
class VmLogFileInfo < FileInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :fileSize
  attr_accessor :modification
  attr_accessor :owner

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, fileSize = nil, modification = nil, owner = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @fileSize = fileSize
    @modification = modification
    @owner = owner
  end
end

# {urn:vim25}FileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class FileQuery < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VmConfigFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   filter - Bosh::Director::CloudProviders::VSphere::VmConfigFileQueryFilter
#   details - Bosh::Director::CloudProviders::VSphere::VmConfigFileQueryFlags
class VmConfigFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :filter
  attr_accessor :details

  def initialize(dynamicType = nil, dynamicProperty = [], filter = nil, details = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @filter = filter
    @details = details
  end
end

# {urn:vim25}TemplateConfigFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   filter - Bosh::Director::CloudProviders::VSphere::VmConfigFileQueryFilter
#   details - Bosh::Director::CloudProviders::VSphere::VmConfigFileQueryFlags
class TemplateConfigFileQuery < VmConfigFileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :filter
  attr_accessor :details

  def initialize(dynamicType = nil, dynamicProperty = [], filter = nil, details = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @filter = filter
    @details = details
  end
end

# {urn:vim25}VmDiskFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   filter - Bosh::Director::CloudProviders::VSphere::VmDiskFileQueryFilter
#   details - Bosh::Director::CloudProviders::VSphere::VmDiskFileQueryFlags
class VmDiskFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :filter
  attr_accessor :details

  def initialize(dynamicType = nil, dynamicProperty = [], filter = nil, details = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @filter = filter
    @details = details
  end
end

# {urn:vim25}FolderFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class FolderFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VmSnapshotFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class VmSnapshotFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}IsoImageFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class IsoImageFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}FloppyImageFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class FloppyImageFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VmNvramFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class VmNvramFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VmLogFileQuery
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class VmLogFileQuery < FileQuery
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VmConfigFileQueryFilter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   matchConfigVersion - SOAP::SOAPInt
class VmConfigFileQueryFilter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :matchConfigVersion

  def initialize(dynamicType = nil, dynamicProperty = [], matchConfigVersion = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @matchConfigVersion = matchConfigVersion
  end
end

# {urn:vim25}VmConfigFileQueryFlags
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configVersion - SOAP::SOAPBoolean
class VmConfigFileQueryFlags < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configVersion

  def initialize(dynamicType = nil, dynamicProperty = [], configVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configVersion = configVersion
  end
end

# {urn:vim25}VmDiskFileQueryFilter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskType - SOAP::SOAPString
#   matchHardwareVersion - SOAP::SOAPInt
#   controllerType - SOAP::SOAPString
#   thin - SOAP::SOAPBoolean
class VmDiskFileQueryFilter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskType
  attr_accessor :matchHardwareVersion
  attr_accessor :controllerType
  attr_accessor :thin

  def initialize(dynamicType = nil, dynamicProperty = [], diskType = [], matchHardwareVersion = [], controllerType = [], thin = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskType = diskType
    @matchHardwareVersion = matchHardwareVersion
    @controllerType = controllerType
    @thin = thin
  end
end

# {urn:vim25}VmDiskFileQueryFlags
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskType - SOAP::SOAPBoolean
#   capacityKb - SOAP::SOAPBoolean
#   hardwareVersion - SOAP::SOAPBoolean
#   controllerType - SOAP::SOAPBoolean
#   diskExtents - SOAP::SOAPBoolean
#   thin - SOAP::SOAPBoolean
class VmDiskFileQueryFlags < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskType
  attr_accessor :capacityKb
  attr_accessor :hardwareVersion
  attr_accessor :controllerType
  attr_accessor :diskExtents
  attr_accessor :thin

  def initialize(dynamicType = nil, dynamicProperty = [], diskType = nil, capacityKb = nil, hardwareVersion = nil, controllerType = nil, diskExtents = nil, thin = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskType = diskType
    @capacityKb = capacityKb
    @hardwareVersion = hardwareVersion
    @controllerType = controllerType
    @diskExtents = diskExtents
    @thin = thin
  end
end

# {urn:vim25}HostDatastoreBrowserSearchSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   query - Bosh::Director::CloudProviders::VSphere::FileQuery
#   details - Bosh::Director::CloudProviders::VSphere::FileQueryFlags
#   searchCaseInsensitive - SOAP::SOAPBoolean
#   matchPattern - SOAP::SOAPString
#   sortFoldersFirst - SOAP::SOAPBoolean
class HostDatastoreBrowserSearchSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :query
  attr_accessor :details
  attr_accessor :searchCaseInsensitive
  attr_accessor :matchPattern
  attr_accessor :sortFoldersFirst

  def initialize(dynamicType = nil, dynamicProperty = [], query = [], details = nil, searchCaseInsensitive = nil, matchPattern = [], sortFoldersFirst = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @query = query
    @details = details
    @searchCaseInsensitive = searchCaseInsensitive
    @matchPattern = matchPattern
    @sortFoldersFirst = sortFoldersFirst
  end
end

# {urn:vim25}HostDatastoreBrowserSearchResults
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   folderPath - SOAP::SOAPString
#   file - Bosh::Director::CloudProviders::VSphere::FileInfo
class HostDatastoreBrowserSearchResults < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :datastore
  attr_accessor :folderPath
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], datastore = nil, folderPath = nil, file = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @datastore = datastore
    @folderPath = folderPath
    @file = file
  end
end

# {urn:vim25}HostDatastoreSystemCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   nfsMountCreationRequired - SOAP::SOAPBoolean
#   nfsMountCreationSupported - SOAP::SOAPBoolean
#   localDatastoreSupported - SOAP::SOAPBoolean
#   vmfsExtentExpansionSupported - SOAP::SOAPBoolean
class HostDatastoreSystemCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :nfsMountCreationRequired
  attr_accessor :nfsMountCreationSupported
  attr_accessor :localDatastoreSupported
  attr_accessor :vmfsExtentExpansionSupported

  def initialize(dynamicType = nil, dynamicProperty = [], nfsMountCreationRequired = nil, nfsMountCreationSupported = nil, localDatastoreSupported = nil, vmfsExtentExpansionSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @nfsMountCreationRequired = nfsMountCreationRequired
    @nfsMountCreationSupported = nfsMountCreationSupported
    @localDatastoreSupported = localDatastoreSupported
    @vmfsExtentExpansionSupported = vmfsExtentExpansionSupported
  end
end

# {urn:vim25}VmfsDatastoreSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskUuid - SOAP::SOAPString
class VmfsDatastoreSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskUuid

  def initialize(dynamicType = nil, dynamicProperty = [], diskUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskUuid = diskUuid
  end
end

# {urn:vim25}VmfsDatastoreCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskUuid - SOAP::SOAPString
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
#   vmfs - Bosh::Director::CloudProviders::VSphere::HostVmfsSpec
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class VmfsDatastoreCreateSpec < VmfsDatastoreSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskUuid
  attr_accessor :partition
  attr_accessor :vmfs
  attr_accessor :extent

  def initialize(dynamicType = nil, dynamicProperty = [], diskUuid = nil, partition = nil, vmfs = nil, extent = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskUuid = diskUuid
    @partition = partition
    @vmfs = vmfs
    @extent = extent
  end
end

# {urn:vim25}VmfsDatastoreExtendSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskUuid - SOAP::SOAPString
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class VmfsDatastoreExtendSpec < VmfsDatastoreSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskUuid
  attr_accessor :partition
  attr_accessor :extent

  def initialize(dynamicType = nil, dynamicProperty = [], diskUuid = nil, partition = nil, extent = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskUuid = diskUuid
    @partition = partition
    @extent = extent
  end
end

# {urn:vim25}VmfsDatastoreExpandSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskUuid - SOAP::SOAPString
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class VmfsDatastoreExpandSpec < VmfsDatastoreSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskUuid
  attr_accessor :partition
  attr_accessor :extent

  def initialize(dynamicType = nil, dynamicProperty = [], diskUuid = nil, partition = nil, extent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskUuid = diskUuid
    @partition = partition
    @extent = extent
  end
end

# {urn:vim25}VmfsDatastoreBaseOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
class VmfsDatastoreBaseOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :layout

  def initialize(dynamicType = nil, dynamicProperty = [], layout = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @layout = layout
  end
end

# {urn:vim25}VmfsDatastoreSingleExtentOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
#   vmfsExtent - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionBlockRange
class VmfsDatastoreSingleExtentOption < VmfsDatastoreBaseOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :layout
  attr_accessor :vmfsExtent

  def initialize(dynamicType = nil, dynamicProperty = [], layout = nil, vmfsExtent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @layout = layout
    @vmfsExtent = vmfsExtent
  end
end

# {urn:vim25}VmfsDatastoreAllExtentOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
#   vmfsExtent - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionBlockRange
class VmfsDatastoreAllExtentOption < VmfsDatastoreSingleExtentOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :layout
  attr_accessor :vmfsExtent

  def initialize(dynamicType = nil, dynamicProperty = [], layout = nil, vmfsExtent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @layout = layout
    @vmfsExtent = vmfsExtent
  end
end

# {urn:vim25}VmfsDatastoreMultipleExtentOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
#   vmfsExtent - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionBlockRange
class VmfsDatastoreMultipleExtentOption < VmfsDatastoreBaseOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :layout
  attr_accessor :vmfsExtent

  def initialize(dynamicType = nil, dynamicProperty = [], layout = nil, vmfsExtent = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @layout = layout
    @vmfsExtent = vmfsExtent
  end
end

# {urn:vim25}VmfsDatastoreOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   info - Bosh::Director::CloudProviders::VSphere::VmfsDatastoreBaseOption
#   spec - Bosh::Director::CloudProviders::VSphere::VmfsDatastoreSpec
class VmfsDatastoreOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :info
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], info = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @info = info
    @spec = spec
  end
end

# {urn:vim25}HostDateTimeConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   timeZone - SOAP::SOAPString
#   ntpConfig - Bosh::Director::CloudProviders::VSphere::HostNtpConfig
class HostDateTimeConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :timeZone
  attr_accessor :ntpConfig

  def initialize(dynamicType = nil, dynamicProperty = [], timeZone = nil, ntpConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @timeZone = timeZone
    @ntpConfig = ntpConfig
  end
end

# {urn:vim25}HostDateTimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   timeZone - Bosh::Director::CloudProviders::VSphere::HostDateTimeSystemTimeZone
#   ntpConfig - Bosh::Director::CloudProviders::VSphere::HostNtpConfig
class HostDateTimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :timeZone
  attr_accessor :ntpConfig

  def initialize(dynamicType = nil, dynamicProperty = [], timeZone = nil, ntpConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @timeZone = timeZone
    @ntpConfig = ntpConfig
  end
end

# {urn:vim25}HostDateTimeSystemTimeZone
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   gmtOffset - SOAP::SOAPInt
class HostDateTimeSystemTimeZone < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :description
  attr_accessor :gmtOffset

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, description = nil, gmtOffset = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @description = description
    @gmtOffset = gmtOffset
  end
end

# {urn:vim25}HostDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   deviceType - SOAP::SOAPString
class HostDevice < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :deviceType

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, deviceType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @deviceType = deviceType
  end
end

# {urn:vim25}ScsiLun
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   deviceType - SOAP::SOAPString
#   key - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   descriptor - Bosh::Director::CloudProviders::VSphere::ScsiLunDescriptor
#   canonicalName - SOAP::SOAPString
#   displayName - SOAP::SOAPString
#   lunType - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   model - SOAP::SOAPString
#   revision - SOAP::SOAPString
#   scsiLevel - SOAP::SOAPInt
#   serialNumber - SOAP::SOAPString
#   durableName - Bosh::Director::CloudProviders::VSphere::ScsiLunDurableName
#   alternateName - Bosh::Director::CloudProviders::VSphere::ScsiLunDurableName
#   standardInquiry - SOAP::SOAPByte
#   queueDepth - SOAP::SOAPInt
#   operationalState - SOAP::SOAPString
#   capabilities - Bosh::Director::CloudProviders::VSphere::ScsiLunCapabilities
#   vStorageSupport - SOAP::SOAPString
class ScsiLun < HostDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :deviceType
  attr_accessor :key
  attr_accessor :uuid
  attr_accessor :descriptor
  attr_accessor :canonicalName
  attr_accessor :displayName
  attr_accessor :lunType
  attr_accessor :vendor
  attr_accessor :model
  attr_accessor :revision
  attr_accessor :scsiLevel
  attr_accessor :serialNumber
  attr_accessor :durableName
  attr_accessor :alternateName
  attr_accessor :standardInquiry
  attr_accessor :queueDepth
  attr_accessor :operationalState
  attr_accessor :capabilities
  attr_accessor :vStorageSupport

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, deviceType = nil, key = nil, uuid = nil, descriptor = [], canonicalName = nil, displayName = nil, lunType = nil, vendor = nil, model = nil, revision = nil, scsiLevel = nil, serialNumber = nil, durableName = nil, alternateName = [], standardInquiry = [], queueDepth = nil, operationalState = [], capabilities = nil, vStorageSupport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @deviceType = deviceType
    @key = key
    @uuid = uuid
    @descriptor = descriptor
    @canonicalName = canonicalName
    @displayName = displayName
    @lunType = lunType
    @vendor = vendor
    @model = model
    @revision = revision
    @scsiLevel = scsiLevel
    @serialNumber = serialNumber
    @durableName = durableName
    @alternateName = alternateName
    @standardInquiry = standardInquiry
    @queueDepth = queueDepth
    @operationalState = operationalState
    @capabilities = capabilities
    @vStorageSupport = vStorageSupport
  end
end

# {urn:vim25}HostScsiDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   deviceType - SOAP::SOAPString
#   key - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   descriptor - Bosh::Director::CloudProviders::VSphere::ScsiLunDescriptor
#   canonicalName - SOAP::SOAPString
#   displayName - SOAP::SOAPString
#   lunType - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   model - SOAP::SOAPString
#   revision - SOAP::SOAPString
#   scsiLevel - SOAP::SOAPInt
#   serialNumber - SOAP::SOAPString
#   durableName - Bosh::Director::CloudProviders::VSphere::ScsiLunDurableName
#   alternateName - Bosh::Director::CloudProviders::VSphere::ScsiLunDurableName
#   standardInquiry - SOAP::SOAPByte
#   queueDepth - SOAP::SOAPInt
#   operationalState - SOAP::SOAPString
#   capabilities - Bosh::Director::CloudProviders::VSphere::ScsiLunCapabilities
#   vStorageSupport - SOAP::SOAPString
#   capacity - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsLba
#   devicePath - SOAP::SOAPString
class HostScsiDisk < ScsiLun
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :deviceType
  attr_accessor :key
  attr_accessor :uuid
  attr_accessor :descriptor
  attr_accessor :canonicalName
  attr_accessor :displayName
  attr_accessor :lunType
  attr_accessor :vendor
  attr_accessor :model
  attr_accessor :revision
  attr_accessor :scsiLevel
  attr_accessor :serialNumber
  attr_accessor :durableName
  attr_accessor :alternateName
  attr_accessor :standardInquiry
  attr_accessor :queueDepth
  attr_accessor :operationalState
  attr_accessor :capabilities
  attr_accessor :vStorageSupport
  attr_accessor :capacity
  attr_accessor :devicePath

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, deviceType = nil, key = nil, uuid = nil, descriptor = [], canonicalName = nil, displayName = nil, lunType = nil, vendor = nil, model = nil, revision = nil, scsiLevel = nil, serialNumber = nil, durableName = nil, alternateName = [], standardInquiry = [], queueDepth = nil, operationalState = [], capabilities = nil, vStorageSupport = nil, capacity = nil, devicePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @deviceType = deviceType
    @key = key
    @uuid = uuid
    @descriptor = descriptor
    @canonicalName = canonicalName
    @displayName = displayName
    @lunType = lunType
    @vendor = vendor
    @model = model
    @revision = revision
    @scsiLevel = scsiLevel
    @serialNumber = serialNumber
    @durableName = durableName
    @alternateName = alternateName
    @standardInquiry = standardInquiry
    @queueDepth = queueDepth
    @operationalState = operationalState
    @capabilities = capabilities
    @vStorageSupport = vStorageSupport
    @capacity = capacity
    @devicePath = devicePath
  end
end

# {urn:vim25}HostDhcpServiceSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   virtualSwitch - SOAP::SOAPString
#   defaultLeaseDuration - SOAP::SOAPInt
#   leaseBeginIp - SOAP::SOAPString
#   leaseEndIp - SOAP::SOAPString
#   maxLeaseDuration - SOAP::SOAPInt
#   unlimitedLease - SOAP::SOAPBoolean
#   ipSubnetAddr - SOAP::SOAPString
#   ipSubnetMask - SOAP::SOAPString
class HostDhcpServiceSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :virtualSwitch
  attr_accessor :defaultLeaseDuration
  attr_accessor :leaseBeginIp
  attr_accessor :leaseEndIp
  attr_accessor :maxLeaseDuration
  attr_accessor :unlimitedLease
  attr_accessor :ipSubnetAddr
  attr_accessor :ipSubnetMask

  def initialize(dynamicType = nil, dynamicProperty = [], virtualSwitch = nil, defaultLeaseDuration = nil, leaseBeginIp = nil, leaseEndIp = nil, maxLeaseDuration = nil, unlimitedLease = nil, ipSubnetAddr = nil, ipSubnetMask = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @virtualSwitch = virtualSwitch
    @defaultLeaseDuration = defaultLeaseDuration
    @leaseBeginIp = leaseBeginIp
    @leaseEndIp = leaseEndIp
    @maxLeaseDuration = maxLeaseDuration
    @unlimitedLease = unlimitedLease
    @ipSubnetAddr = ipSubnetAddr
    @ipSubnetMask = ipSubnetMask
  end
end

# {urn:vim25}HostDhcpServiceConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   key - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostDhcpServiceSpec
class HostDhcpServiceConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :key
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, key = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @key = key
    @spec = spec
  end
end

# {urn:vim25}HostDhcpService
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostDhcpServiceSpec
class HostDhcpService < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @spec = spec
  end
end

# {urn:vim25}HostDiagnosticPartitionCreateOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   storageType - SOAP::SOAPString
#   diagnosticType - SOAP::SOAPString
#   disk - Bosh::Director::CloudProviders::VSphere::HostScsiDisk
class HostDiagnosticPartitionCreateOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :storageType
  attr_accessor :diagnosticType
  attr_accessor :disk

  def initialize(dynamicType = nil, dynamicProperty = [], storageType = nil, diagnosticType = nil, disk = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @storageType = storageType
    @diagnosticType = diagnosticType
    @disk = disk
  end
end

# {urn:vim25}HostDiagnosticPartitionCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   storageType - SOAP::SOAPString
#   diagnosticType - SOAP::SOAPString
#   id - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
#   active - SOAP::SOAPBoolean
class HostDiagnosticPartitionCreateSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :storageType
  attr_accessor :diagnosticType
  attr_accessor :id
  attr_accessor :partition
  attr_accessor :active

  def initialize(dynamicType = nil, dynamicProperty = [], storageType = nil, diagnosticType = nil, id = nil, partition = nil, active = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @storageType = storageType
    @diagnosticType = diagnosticType
    @id = id
    @partition = partition
    @active = active
  end
end

# {urn:vim25}HostDiagnosticPartitionCreateDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
#   diskUuid - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostDiagnosticPartitionCreateSpec
class HostDiagnosticPartitionCreateDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :layout
  attr_accessor :diskUuid
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], layout = nil, diskUuid = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @layout = layout
    @diskUuid = diskUuid
    @spec = spec
  end
end

# {urn:vim25}HostDiagnosticPartition
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   storageType - SOAP::SOAPString
#   diagnosticType - SOAP::SOAPString
#   slots - SOAP::SOAPInt
#   id - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class HostDiagnosticPartition < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :storageType
  attr_accessor :diagnosticType
  attr_accessor :slots
  attr_accessor :id

  def initialize(dynamicType = nil, dynamicProperty = [], storageType = nil, diagnosticType = nil, slots = nil, id = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @storageType = storageType
    @diagnosticType = diagnosticType
    @slots = slots
    @id = id
  end
end

# {urn:vim25}HostDiskDimensionsChs
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   cylinder - SOAP::SOAPLong
#   head - SOAP::SOAPInt
#   sector - SOAP::SOAPInt
class HostDiskDimensionsChs < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :cylinder
  attr_accessor :head
  attr_accessor :sector

  def initialize(dynamicType = nil, dynamicProperty = [], cylinder = nil, head = nil, sector = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @cylinder = cylinder
    @head = head
    @sector = sector
  end
end

# {urn:vim25}HostDiskDimensionsLba
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   blockSize - SOAP::SOAPInt
#   block - SOAP::SOAPLong
class HostDiskDimensionsLba < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :blockSize
  attr_accessor :block

  def initialize(dynamicType = nil, dynamicProperty = [], blockSize = nil, block = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @blockSize = blockSize
    @block = block
  end
end

# {urn:vim25}HostDiskDimensions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostDiskDimensions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostDiskPartitionAttributes
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   partition - SOAP::SOAPInt
#   startSector - SOAP::SOAPLong
#   endSector - SOAP::SOAPLong
#   type - SOAP::SOAPString
#   logical - SOAP::SOAPBoolean
#   attributes - SOAP::SOAPByte
class HostDiskPartitionAttributes < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :partition
  attr_accessor :startSector
  attr_accessor :endSector
  attr_accessor :type
  attr_accessor :logical
  attr_accessor :attributes

  def initialize(dynamicType = nil, dynamicProperty = [], partition = nil, startSector = nil, endSector = nil, type = nil, logical = nil, attributes = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @partition = partition
    @startSector = startSector
    @endSector = endSector
    @type = type
    @logical = logical
    @attributes = attributes
  end
end

# {urn:vim25}HostDiskPartitionBlockRange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   partition - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   start - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsLba
#   m_end - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsLba
class HostDiskPartitionBlockRange < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :partition
  attr_accessor :type
  attr_accessor :start

  def m_end
    @v_end
  end

  def m_end=(value)
    @v_end = value
  end

  def initialize(dynamicType = nil, dynamicProperty = [], partition = nil, type = nil, start = nil, v_end = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @partition = partition
    @type = type
    @start = start
    @v_end = v_end
  end
end

# {urn:vim25}HostDiskPartitionSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   chs - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsChs
#   totalSectors - SOAP::SOAPLong
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionAttributes
class HostDiskPartitionSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :chs
  attr_accessor :totalSectors
  attr_accessor :partition

  def initialize(dynamicType = nil, dynamicProperty = [], chs = nil, totalSectors = nil, partition = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @chs = chs
    @totalSectors = totalSectors
    @partition = partition
  end
end

# {urn:vim25}HostDiskPartitionLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   total - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsLba
#   partition - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionBlockRange
class HostDiskPartitionLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :total
  attr_accessor :partition

  def initialize(dynamicType = nil, dynamicProperty = [], total = nil, partition = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @total = total
    @partition = partition
  end
end

# {urn:vim25}HostDiskPartitionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
class HostDiskPartitionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :spec
  attr_accessor :layout

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, spec = nil, layout = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @spec = spec
    @layout = layout
  end
end

# {urn:vim25}HostDnsConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dhcp - SOAP::SOAPBoolean
#   virtualNicDevice - SOAP::SOAPString
#   hostName - SOAP::SOAPString
#   domainName - SOAP::SOAPString
#   address - SOAP::SOAPString
#   searchDomain - SOAP::SOAPString
class HostDnsConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dhcp
  attr_accessor :virtualNicDevice
  attr_accessor :hostName
  attr_accessor :domainName
  attr_accessor :address
  attr_accessor :searchDomain

  def initialize(dynamicType = nil, dynamicProperty = [], dhcp = nil, virtualNicDevice = nil, hostName = nil, domainName = nil, address = [], searchDomain = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dhcp = dhcp
    @virtualNicDevice = virtualNicDevice
    @hostName = hostName
    @domainName = domainName
    @address = address
    @searchDomain = searchDomain
  end
end

# {urn:vim25}HostDnsConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dhcp - SOAP::SOAPBoolean
#   virtualNicDevice - SOAP::SOAPString
#   hostName - SOAP::SOAPString
#   domainName - SOAP::SOAPString
#   address - SOAP::SOAPString
#   searchDomain - SOAP::SOAPString
#   virtualNicConnection - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConnection
class HostDnsConfigSpec < HostDnsConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dhcp
  attr_accessor :virtualNicDevice
  attr_accessor :hostName
  attr_accessor :domainName
  attr_accessor :address
  attr_accessor :searchDomain
  attr_accessor :virtualNicConnection

  def initialize(dynamicType = nil, dynamicProperty = [], dhcp = nil, virtualNicDevice = nil, hostName = nil, domainName = nil, address = [], searchDomain = [], virtualNicConnection = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dhcp = dhcp
    @virtualNicDevice = virtualNicDevice
    @hostName = hostName
    @domainName = domainName
    @address = address
    @searchDomain = searchDomain
    @virtualNicConnection = virtualNicConnection
  end
end

# {urn:vim25}HostFeatureVersionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - SOAP::SOAPString
class HostFeatureVersionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}ModeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   browse - SOAP::SOAPString
#   read - SOAP::SOAPString
#   modify - SOAP::SOAPString
#   use - SOAP::SOAPString
#   admin - SOAP::SOAPString
#   full - SOAP::SOAPString
class ModeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :browse
  attr_accessor :read
  attr_accessor :modify
  attr_accessor :use
  attr_accessor :admin
  attr_accessor :full

  def initialize(dynamicType = nil, dynamicProperty = [], browse = nil, read = nil, modify = nil, use = nil, admin = nil, full = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @browse = browse
    @read = read
    @modify = modify
    @use = use
    @admin = admin
    @full = full
  end
end

# {urn:vim25}HostFileAccess
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   who - SOAP::SOAPString
#   what - SOAP::SOAPString
class HostFileAccess < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :who
  attr_accessor :what

  def initialize(dynamicType = nil, dynamicProperty = [], who = nil, what = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @who = who
    @what = what
  end
end

# {urn:vim25}HostFileSystemVolumeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   volumeTypeList - SOAP::SOAPString
#   mountInfo - Bosh::Director::CloudProviders::VSphere::HostFileSystemMountInfo
class HostFileSystemVolumeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :volumeTypeList
  attr_accessor :mountInfo

  def initialize(dynamicType = nil, dynamicProperty = [], volumeTypeList = [], mountInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @volumeTypeList = volumeTypeList
    @mountInfo = mountInfo
  end
end

# {urn:vim25}HostFileSystemMountInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   mountInfo - Bosh::Director::CloudProviders::VSphere::HostMountInfo
#   volume - Bosh::Director::CloudProviders::VSphere::HostFileSystemVolume
#   vStorageSupport - SOAP::SOAPString
class HostFileSystemMountInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :mountInfo
  attr_accessor :volume
  attr_accessor :vStorageSupport

  def initialize(dynamicType = nil, dynamicProperty = [], mountInfo = nil, volume = nil, vStorageSupport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @mountInfo = mountInfo
    @volume = volume
    @vStorageSupport = vStorageSupport
  end
end

# {urn:vim25}HostFileSystemVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
class HostFileSystemVolume < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :name
  attr_accessor :capacity

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, name = nil, capacity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @name = name
    @capacity = capacity
  end
end

# {urn:vim25}HostNasVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
#   userName - SOAP::SOAPString
class HostNasVolume < HostFileSystemVolume
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :name
  attr_accessor :capacity
  attr_accessor :remoteHost
  attr_accessor :remotePath
  attr_accessor :userName

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, name = nil, capacity = nil, remoteHost = nil, remotePath = nil, userName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @name = name
    @capacity = capacity
    @remoteHost = remoteHost
    @remotePath = remotePath
    @userName = userName
  end
end

# {urn:vim25}HostLocalFileSystemVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   device - SOAP::SOAPString
class HostLocalFileSystemVolume < HostFileSystemVolume
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :name
  attr_accessor :capacity
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, name = nil, capacity = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @name = name
    @capacity = capacity
    @device = device
  end
end

# {urn:vim25}HostVmfsVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   blockSizeMb - SOAP::SOAPInt
#   maxBlocks - SOAP::SOAPInt
#   majorVersion - SOAP::SOAPInt
#   version - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
#   vmfsUpgradable - SOAP::SOAPBoolean
#   forceMountedInfo - Bosh::Director::CloudProviders::VSphere::HostForceMountedInfo
class HostVmfsVolume < HostFileSystemVolume
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :name
  attr_accessor :capacity
  attr_accessor :blockSizeMb
  attr_accessor :maxBlocks
  attr_accessor :majorVersion
  attr_accessor :version
  attr_accessor :uuid
  attr_accessor :extent
  attr_accessor :vmfsUpgradable
  attr_accessor :forceMountedInfo

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, name = nil, capacity = nil, blockSizeMb = nil, maxBlocks = nil, majorVersion = nil, version = nil, uuid = nil, extent = [], vmfsUpgradable = nil, forceMountedInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @name = name
    @capacity = capacity
    @blockSizeMb = blockSizeMb
    @maxBlocks = maxBlocks
    @majorVersion = majorVersion
    @version = version
    @uuid = uuid
    @extent = extent
    @vmfsUpgradable = vmfsUpgradable
    @forceMountedInfo = forceMountedInfo
  end
end

# {urn:vim25}HostNasVolumeSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
#   localPath - SOAP::SOAPString
#   accessMode - SOAP::SOAPString
#   type - SOAP::SOAPString
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
class HostNasVolumeSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :remoteHost
  attr_accessor :remotePath
  attr_accessor :localPath
  attr_accessor :accessMode
  attr_accessor :type
  attr_accessor :userName
  attr_accessor :password

  def initialize(dynamicType = nil, dynamicProperty = [], remoteHost = nil, remotePath = nil, localPath = nil, accessMode = nil, type = nil, userName = nil, password = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @remoteHost = remoteHost
    @remotePath = remotePath
    @localPath = localPath
    @accessMode = accessMode
    @type = type
    @userName = userName
    @password = password
  end
end

# {urn:vim25}HostNasVolumeConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostNasVolumeSpec
class HostNasVolumeConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @spec = spec
  end
end

# {urn:vim25}HostLocalFileSystemVolumeSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - SOAP::SOAPString
#   localPath - SOAP::SOAPString
class HostLocalFileSystemVolumeSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :localPath

  def initialize(dynamicType = nil, dynamicProperty = [], device = nil, localPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @localPath = localPath
  end
end

# {urn:vim25}HostFirewallConfigRuleSetConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   rulesetId - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class HostFirewallConfigRuleSetConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :rulesetId
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], rulesetId = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @rulesetId = rulesetId
    @enabled = enabled
  end
end

# {urn:vim25}HostFirewallConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   rule - Bosh::Director::CloudProviders::VSphere::HostFirewallConfigRuleSetConfig
#   defaultBlockingPolicy - Bosh::Director::CloudProviders::VSphere::HostFirewallDefaultPolicy
class HostFirewallConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :rule
  attr_accessor :defaultBlockingPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], rule = [], defaultBlockingPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @rule = rule
    @defaultBlockingPolicy = defaultBlockingPolicy
  end
end

# {urn:vim25}HostFirewallDefaultPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   incomingBlocked - SOAP::SOAPBoolean
#   outgoingBlocked - SOAP::SOAPBoolean
class HostFirewallDefaultPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :incomingBlocked
  attr_accessor :outgoingBlocked

  def initialize(dynamicType = nil, dynamicProperty = [], incomingBlocked = nil, outgoingBlocked = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @incomingBlocked = incomingBlocked
    @outgoingBlocked = outgoingBlocked
  end
end

# {urn:vim25}HostFirewallInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   defaultPolicy - Bosh::Director::CloudProviders::VSphere::HostFirewallDefaultPolicy
#   ruleset - Bosh::Director::CloudProviders::VSphere::HostFirewallRuleset
class HostFirewallInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :defaultPolicy
  attr_accessor :ruleset

  def initialize(dynamicType = nil, dynamicProperty = [], defaultPolicy = nil, ruleset = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @defaultPolicy = defaultPolicy
    @ruleset = ruleset
  end
end

# {urn:vim25}HostFlagInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   backgroundSnapshotsEnabled - SOAP::SOAPBoolean
class HostFlagInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :backgroundSnapshotsEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], backgroundSnapshotsEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @backgroundSnapshotsEnabled = backgroundSnapshotsEnabled
  end
end

# {urn:vim25}HostForceMountedInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   persist - SOAP::SOAPBoolean
#   mounted - SOAP::SOAPBoolean
class HostForceMountedInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :persist
  attr_accessor :mounted

  def initialize(dynamicType = nil, dynamicProperty = [], persist = nil, mounted = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @persist = persist
    @mounted = mounted
  end
end

# {urn:vim25}HostHardwareInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   systemInfo - Bosh::Director::CloudProviders::VSphere::HostSystemInfo
#   cpuPowerManagementInfo - Bosh::Director::CloudProviders::VSphere::HostCpuPowerManagementInfo
#   cpuInfo - Bosh::Director::CloudProviders::VSphere::HostCpuInfo
#   cpuPkg - Bosh::Director::CloudProviders::VSphere::HostCpuPackage
#   memorySize - SOAP::SOAPLong
#   numaInfo - Bosh::Director::CloudProviders::VSphere::HostNumaInfo
#   pciDevice - Bosh::Director::CloudProviders::VSphere::HostPciDevice
#   cpuFeature - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
#   biosInfo - Bosh::Director::CloudProviders::VSphere::HostBIOSInfo
class HostHardwareInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :systemInfo
  attr_accessor :cpuPowerManagementInfo
  attr_accessor :cpuInfo
  attr_accessor :cpuPkg
  attr_accessor :memorySize
  attr_accessor :numaInfo
  attr_accessor :pciDevice
  attr_accessor :cpuFeature
  attr_accessor :biosInfo

  def initialize(dynamicType = nil, dynamicProperty = [], systemInfo = nil, cpuPowerManagementInfo = nil, cpuInfo = nil, cpuPkg = [], memorySize = nil, numaInfo = nil, pciDevice = [], cpuFeature = [], biosInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @systemInfo = systemInfo
    @cpuPowerManagementInfo = cpuPowerManagementInfo
    @cpuInfo = cpuInfo
    @cpuPkg = cpuPkg
    @memorySize = memorySize
    @numaInfo = numaInfo
    @pciDevice = pciDevice
    @cpuFeature = cpuFeature
    @biosInfo = biosInfo
  end
end

# {urn:vim25}HostSystemInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vendor - SOAP::SOAPString
#   model - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   otherIdentifyingInfo - Bosh::Director::CloudProviders::VSphere::HostSystemIdentificationInfo
class HostSystemInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vendor
  attr_accessor :model
  attr_accessor :uuid
  attr_accessor :otherIdentifyingInfo

  def initialize(dynamicType = nil, dynamicProperty = [], vendor = nil, model = nil, uuid = nil, otherIdentifyingInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vendor = vendor
    @model = model
    @uuid = uuid
    @otherIdentifyingInfo = otherIdentifyingInfo
  end
end

# {urn:vim25}HostCpuPowerManagementInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   currentPolicy - SOAP::SOAPString
#   hardwareSupport - SOAP::SOAPString
class HostCpuPowerManagementInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :currentPolicy
  attr_accessor :hardwareSupport

  def initialize(dynamicType = nil, dynamicProperty = [], currentPolicy = nil, hardwareSupport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @currentPolicy = currentPolicy
    @hardwareSupport = hardwareSupport
  end
end

# {urn:vim25}HostCpuInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numCpuPackages - SOAP::SOAPShort
#   numCpuCores - SOAP::SOAPShort
#   numCpuThreads - SOAP::SOAPShort
#   hz - SOAP::SOAPLong
class HostCpuInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numCpuPackages
  attr_accessor :numCpuCores
  attr_accessor :numCpuThreads
  attr_accessor :hz

  def initialize(dynamicType = nil, dynamicProperty = [], numCpuPackages = nil, numCpuCores = nil, numCpuThreads = nil, hz = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numCpuPackages = numCpuPackages
    @numCpuCores = numCpuCores
    @numCpuThreads = numCpuThreads
    @hz = hz
  end
end

# {urn:vim25}HostCpuPackage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   index - SOAP::SOAPShort
#   vendor - SOAP::SOAPString
#   hz - SOAP::SOAPLong
#   busHz - SOAP::SOAPLong
#   description - SOAP::SOAPString
#   threadId - SOAP::SOAPShort
#   cpuFeature - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
class HostCpuPackage < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :index
  attr_accessor :vendor
  attr_accessor :hz
  attr_accessor :busHz
  attr_accessor :description
  attr_accessor :threadId
  attr_accessor :cpuFeature

  def initialize(dynamicType = nil, dynamicProperty = [], index = nil, vendor = nil, hz = nil, busHz = nil, description = nil, threadId = [], cpuFeature = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @index = index
    @vendor = vendor
    @hz = hz
    @busHz = busHz
    @description = description
    @threadId = threadId
    @cpuFeature = cpuFeature
  end
end

# {urn:vim25}HostNumaInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   numNodes - SOAP::SOAPInt
#   numaNode - Bosh::Director::CloudProviders::VSphere::HostNumaNode
class HostNumaInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :numNodes
  attr_accessor :numaNode

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, numNodes = nil, numaNode = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @numNodes = numNodes
    @numaNode = numaNode
  end
end

# {urn:vim25}HostNumaNode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   typeId - SOAP::SOAPByte
#   cpuID - SOAP::SOAPShort
#   memoryRangeBegin - SOAP::SOAPLong
#   memoryRangeLength - SOAP::SOAPLong
class HostNumaNode < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :typeId
  attr_accessor :cpuID
  attr_accessor :memoryRangeBegin
  attr_accessor :memoryRangeLength

  def initialize(dynamicType = nil, dynamicProperty = [], typeId = nil, cpuID = [], memoryRangeBegin = nil, memoryRangeLength = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @typeId = typeId
    @cpuID = cpuID
    @memoryRangeBegin = memoryRangeBegin
    @memoryRangeLength = memoryRangeLength
  end
end

# {urn:vim25}HostBIOSInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   biosVersion - SOAP::SOAPString
#   releaseDate - SOAP::SOAPDateTime
class HostBIOSInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :biosVersion
  attr_accessor :releaseDate

  def initialize(dynamicType = nil, dynamicProperty = [], biosVersion = nil, releaseDate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @biosVersion = biosVersion
    @releaseDate = releaseDate
  end
end

# {urn:vim25}HostHardwareElementInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   status - Bosh::Director::CloudProviders::VSphere::ElementDescription
class HostHardwareElementInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :status

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, status = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @status = status
  end
end

# {urn:vim25}HostStorageElementInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   status - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   operationalInfo - Bosh::Director::CloudProviders::VSphere::HostStorageOperationalInfo
class HostStorageElementInfo < HostHardwareElementInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :status
  attr_accessor :operationalInfo

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, status = nil, operationalInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @status = status
    @operationalInfo = operationalInfo
  end
end

# {urn:vim25}HostStorageOperationalInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   property - SOAP::SOAPString
#   value - SOAP::SOAPString
class HostStorageOperationalInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :property
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], property = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @property = property
    @value = value
  end
end

# {urn:vim25}HostHardwareStatusInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   memoryStatusInfo - Bosh::Director::CloudProviders::VSphere::HostHardwareElementInfo
#   cpuStatusInfo - Bosh::Director::CloudProviders::VSphere::HostHardwareElementInfo
#   storageStatusInfo - Bosh::Director::CloudProviders::VSphere::HostStorageElementInfo
class HostHardwareStatusInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :memoryStatusInfo
  attr_accessor :cpuStatusInfo
  attr_accessor :storageStatusInfo

  def initialize(dynamicType = nil, dynamicProperty = [], memoryStatusInfo = [], cpuStatusInfo = [], storageStatusInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @memoryStatusInfo = memoryStatusInfo
    @cpuStatusInfo = cpuStatusInfo
    @storageStatusInfo = storageStatusInfo
  end
end

# {urn:vim25}HealthSystemRuntime
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   systemHealthInfo - Bosh::Director::CloudProviders::VSphere::HostSystemHealthInfo
#   hardwareStatusInfo - Bosh::Director::CloudProviders::VSphere::HostHardwareStatusInfo
class HealthSystemRuntime < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :systemHealthInfo
  attr_accessor :hardwareStatusInfo

  def initialize(dynamicType = nil, dynamicProperty = [], systemHealthInfo = nil, hardwareStatusInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @systemHealthInfo = systemHealthInfo
    @hardwareStatusInfo = hardwareStatusInfo
  end
end

# {urn:vim25}HostHostBusAdapter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   bus - SOAP::SOAPInt
#   status - SOAP::SOAPString
#   model - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   pci - SOAP::SOAPString
class HostHostBusAdapter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :bus
  attr_accessor :status
  attr_accessor :model
  attr_accessor :driver
  attr_accessor :pci

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, bus = nil, status = nil, model = nil, driver = nil, pci = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @bus = bus
    @status = status
    @model = model
    @driver = driver
    @pci = pci
  end
end

# {urn:vim25}HostParallelScsiHba
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   bus - SOAP::SOAPInt
#   status - SOAP::SOAPString
#   model - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   pci - SOAP::SOAPString
class HostParallelScsiHba < HostHostBusAdapter
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :bus
  attr_accessor :status
  attr_accessor :model
  attr_accessor :driver
  attr_accessor :pci

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, bus = nil, status = nil, model = nil, driver = nil, pci = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @bus = bus
    @status = status
    @model = model
    @driver = driver
    @pci = pci
  end
end

# {urn:vim25}HostBlockHba
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   bus - SOAP::SOAPInt
#   status - SOAP::SOAPString
#   model - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   pci - SOAP::SOAPString
class HostBlockHba < HostHostBusAdapter
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :bus
  attr_accessor :status
  attr_accessor :model
  attr_accessor :driver
  attr_accessor :pci

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, bus = nil, status = nil, model = nil, driver = nil, pci = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @bus = bus
    @status = status
    @model = model
    @driver = driver
    @pci = pci
  end
end

# {urn:vim25}HostFibreChannelHba
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   bus - SOAP::SOAPInt
#   status - SOAP::SOAPString
#   model - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   pci - SOAP::SOAPString
#   portWorldWideName - SOAP::SOAPLong
#   nodeWorldWideName - SOAP::SOAPLong
#   portType - Bosh::Director::CloudProviders::VSphere::FibreChannelPortType
#   speed - SOAP::SOAPLong
class HostFibreChannelHba < HostHostBusAdapter
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :bus
  attr_accessor :status
  attr_accessor :model
  attr_accessor :driver
  attr_accessor :pci
  attr_accessor :portWorldWideName
  attr_accessor :nodeWorldWideName
  attr_accessor :portType
  attr_accessor :speed

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, bus = nil, status = nil, model = nil, driver = nil, pci = nil, portWorldWideName = nil, nodeWorldWideName = nil, portType = nil, speed = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @bus = bus
    @status = status
    @model = model
    @driver = driver
    @pci = pci
    @portWorldWideName = portWorldWideName
    @nodeWorldWideName = nodeWorldWideName
    @portType = portType
    @speed = speed
  end
end

# {urn:vim25}HostInternetScsiHba
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   bus - SOAP::SOAPInt
#   status - SOAP::SOAPString
#   model - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   pci - SOAP::SOAPString
#   isSoftwareBased - SOAP::SOAPBoolean
#   discoveryCapabilities - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDiscoveryCapabilities
#   discoveryProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDiscoveryProperties
#   authenticationCapabilities - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaAuthenticationCapabilities
#   authenticationProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaAuthenticationProperties
#   digestCapabilities - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDigestCapabilities
#   digestProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDigestProperties
#   ipCapabilities - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaIPCapabilities
#   ipProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaIPProperties
#   supportedAdvancedOptions - Bosh::Director::CloudProviders::VSphere::OptionDef
#   advancedOptions - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaParamValue
#   iScsiName - SOAP::SOAPString
#   iScsiAlias - SOAP::SOAPString
#   configuredSendTarget - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaSendTarget
#   configuredStaticTarget - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaStaticTarget
#   maxSpeedMb - SOAP::SOAPInt
#   currentSpeedMb - SOAP::SOAPInt
class HostInternetScsiHba < HostHostBusAdapter
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :bus
  attr_accessor :status
  attr_accessor :model
  attr_accessor :driver
  attr_accessor :pci
  attr_accessor :isSoftwareBased
  attr_accessor :discoveryCapabilities
  attr_accessor :discoveryProperties
  attr_accessor :authenticationCapabilities
  attr_accessor :authenticationProperties
  attr_accessor :digestCapabilities
  attr_accessor :digestProperties
  attr_accessor :ipCapabilities
  attr_accessor :ipProperties
  attr_accessor :supportedAdvancedOptions
  attr_accessor :advancedOptions
  attr_accessor :iScsiName
  attr_accessor :iScsiAlias
  attr_accessor :configuredSendTarget
  attr_accessor :configuredStaticTarget
  attr_accessor :maxSpeedMb
  attr_accessor :currentSpeedMb

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, bus = nil, status = nil, model = nil, driver = nil, pci = nil, isSoftwareBased = nil, discoveryCapabilities = nil, discoveryProperties = nil, authenticationCapabilities = nil, authenticationProperties = nil, digestCapabilities = nil, digestProperties = nil, ipCapabilities = nil, ipProperties = nil, supportedAdvancedOptions = [], advancedOptions = [], iScsiName = nil, iScsiAlias = nil, configuredSendTarget = [], configuredStaticTarget = [], maxSpeedMb = nil, currentSpeedMb = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @bus = bus
    @status = status
    @model = model
    @driver = driver
    @pci = pci
    @isSoftwareBased = isSoftwareBased
    @discoveryCapabilities = discoveryCapabilities
    @discoveryProperties = discoveryProperties
    @authenticationCapabilities = authenticationCapabilities
    @authenticationProperties = authenticationProperties
    @digestCapabilities = digestCapabilities
    @digestProperties = digestProperties
    @ipCapabilities = ipCapabilities
    @ipProperties = ipProperties
    @supportedAdvancedOptions = supportedAdvancedOptions
    @advancedOptions = advancedOptions
    @iScsiName = iScsiName
    @iScsiAlias = iScsiAlias
    @configuredSendTarget = configuredSendTarget
    @configuredStaticTarget = configuredStaticTarget
    @maxSpeedMb = maxSpeedMb
    @currentSpeedMb = currentSpeedMb
  end
end

# {urn:vim25}HostInternetScsiHbaDiscoveryCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   iSnsDiscoverySettable - SOAP::SOAPBoolean
#   slpDiscoverySettable - SOAP::SOAPBoolean
#   staticTargetDiscoverySettable - SOAP::SOAPBoolean
#   sendTargetsDiscoverySettable - SOAP::SOAPBoolean
class HostInternetScsiHbaDiscoveryCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :iSnsDiscoverySettable
  attr_accessor :slpDiscoverySettable
  attr_accessor :staticTargetDiscoverySettable
  attr_accessor :sendTargetsDiscoverySettable

  def initialize(dynamicType = nil, dynamicProperty = [], iSnsDiscoverySettable = nil, slpDiscoverySettable = nil, staticTargetDiscoverySettable = nil, sendTargetsDiscoverySettable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @iSnsDiscoverySettable = iSnsDiscoverySettable
    @slpDiscoverySettable = slpDiscoverySettable
    @staticTargetDiscoverySettable = staticTargetDiscoverySettable
    @sendTargetsDiscoverySettable = sendTargetsDiscoverySettable
  end
end

# {urn:vim25}HostInternetScsiHbaDiscoveryProperties
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   iSnsDiscoveryEnabled - SOAP::SOAPBoolean
#   iSnsDiscoveryMethod - SOAP::SOAPString
#   iSnsHost - SOAP::SOAPString
#   slpDiscoveryEnabled - SOAP::SOAPBoolean
#   slpDiscoveryMethod - SOAP::SOAPString
#   slpHost - SOAP::SOAPString
#   staticTargetDiscoveryEnabled - SOAP::SOAPBoolean
#   sendTargetsDiscoveryEnabled - SOAP::SOAPBoolean
class HostInternetScsiHbaDiscoveryProperties < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :iSnsDiscoveryEnabled
  attr_accessor :iSnsDiscoveryMethod
  attr_accessor :iSnsHost
  attr_accessor :slpDiscoveryEnabled
  attr_accessor :slpDiscoveryMethod
  attr_accessor :slpHost
  attr_accessor :staticTargetDiscoveryEnabled
  attr_accessor :sendTargetsDiscoveryEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], iSnsDiscoveryEnabled = nil, iSnsDiscoveryMethod = nil, iSnsHost = nil, slpDiscoveryEnabled = nil, slpDiscoveryMethod = nil, slpHost = nil, staticTargetDiscoveryEnabled = nil, sendTargetsDiscoveryEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @iSnsDiscoveryEnabled = iSnsDiscoveryEnabled
    @iSnsDiscoveryMethod = iSnsDiscoveryMethod
    @iSnsHost = iSnsHost
    @slpDiscoveryEnabled = slpDiscoveryEnabled
    @slpDiscoveryMethod = slpDiscoveryMethod
    @slpHost = slpHost
    @staticTargetDiscoveryEnabled = staticTargetDiscoveryEnabled
    @sendTargetsDiscoveryEnabled = sendTargetsDiscoveryEnabled
  end
end

# {urn:vim25}HostInternetScsiHbaAuthenticationCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   chapAuthSettable - SOAP::SOAPBoolean
#   krb5AuthSettable - SOAP::SOAPBoolean
#   srpAuthSettable - SOAP::SOAPBoolean
#   spkmAuthSettable - SOAP::SOAPBoolean
#   mutualChapSettable - SOAP::SOAPBoolean
#   targetChapSettable - SOAP::SOAPBoolean
#   targetMutualChapSettable - SOAP::SOAPBoolean
class HostInternetScsiHbaAuthenticationCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :chapAuthSettable
  attr_accessor :krb5AuthSettable
  attr_accessor :srpAuthSettable
  attr_accessor :spkmAuthSettable
  attr_accessor :mutualChapSettable
  attr_accessor :targetChapSettable
  attr_accessor :targetMutualChapSettable

  def initialize(dynamicType = nil, dynamicProperty = [], chapAuthSettable = nil, krb5AuthSettable = nil, srpAuthSettable = nil, spkmAuthSettable = nil, mutualChapSettable = nil, targetChapSettable = nil, targetMutualChapSettable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @chapAuthSettable = chapAuthSettable
    @krb5AuthSettable = krb5AuthSettable
    @srpAuthSettable = srpAuthSettable
    @spkmAuthSettable = spkmAuthSettable
    @mutualChapSettable = mutualChapSettable
    @targetChapSettable = targetChapSettable
    @targetMutualChapSettable = targetMutualChapSettable
  end
end

# {urn:vim25}HostInternetScsiHbaAuthenticationProperties
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   chapAuthEnabled - SOAP::SOAPBoolean
#   chapName - SOAP::SOAPString
#   chapSecret - SOAP::SOAPString
#   chapAuthenticationType - SOAP::SOAPString
#   chapInherited - SOAP::SOAPBoolean
#   mutualChapName - SOAP::SOAPString
#   mutualChapSecret - SOAP::SOAPString
#   mutualChapAuthenticationType - SOAP::SOAPString
#   mutualChapInherited - SOAP::SOAPBoolean
class HostInternetScsiHbaAuthenticationProperties < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :chapAuthEnabled
  attr_accessor :chapName
  attr_accessor :chapSecret
  attr_accessor :chapAuthenticationType
  attr_accessor :chapInherited
  attr_accessor :mutualChapName
  attr_accessor :mutualChapSecret
  attr_accessor :mutualChapAuthenticationType
  attr_accessor :mutualChapInherited

  def initialize(dynamicType = nil, dynamicProperty = [], chapAuthEnabled = nil, chapName = nil, chapSecret = nil, chapAuthenticationType = nil, chapInherited = nil, mutualChapName = nil, mutualChapSecret = nil, mutualChapAuthenticationType = nil, mutualChapInherited = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @chapAuthEnabled = chapAuthEnabled
    @chapName = chapName
    @chapSecret = chapSecret
    @chapAuthenticationType = chapAuthenticationType
    @chapInherited = chapInherited
    @mutualChapName = mutualChapName
    @mutualChapSecret = mutualChapSecret
    @mutualChapAuthenticationType = mutualChapAuthenticationType
    @mutualChapInherited = mutualChapInherited
  end
end

# {urn:vim25}HostInternetScsiHbaDigestCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   headerDigestSettable - SOAP::SOAPBoolean
#   dataDigestSettable - SOAP::SOAPBoolean
#   targetHeaderDigestSettable - SOAP::SOAPBoolean
#   targetDataDigestSettable - SOAP::SOAPBoolean
class HostInternetScsiHbaDigestCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :headerDigestSettable
  attr_accessor :dataDigestSettable
  attr_accessor :targetHeaderDigestSettable
  attr_accessor :targetDataDigestSettable

  def initialize(dynamicType = nil, dynamicProperty = [], headerDigestSettable = nil, dataDigestSettable = nil, targetHeaderDigestSettable = nil, targetDataDigestSettable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @headerDigestSettable = headerDigestSettable
    @dataDigestSettable = dataDigestSettable
    @targetHeaderDigestSettable = targetHeaderDigestSettable
    @targetDataDigestSettable = targetDataDigestSettable
  end
end

# {urn:vim25}HostInternetScsiHbaDigestProperties
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   headerDigestType - SOAP::SOAPString
#   headerDigestInherited - SOAP::SOAPBoolean
#   dataDigestType - SOAP::SOAPString
#   dataDigestInherited - SOAP::SOAPBoolean
class HostInternetScsiHbaDigestProperties < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :headerDigestType
  attr_accessor :headerDigestInherited
  attr_accessor :dataDigestType
  attr_accessor :dataDigestInherited

  def initialize(dynamicType = nil, dynamicProperty = [], headerDigestType = nil, headerDigestInherited = nil, dataDigestType = nil, dataDigestInherited = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @headerDigestType = headerDigestType
    @headerDigestInherited = headerDigestInherited
    @dataDigestType = dataDigestType
    @dataDigestInherited = dataDigestInherited
  end
end

# {urn:vim25}HostInternetScsiHbaIPCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   addressSettable - SOAP::SOAPBoolean
#   ipConfigurationMethodSettable - SOAP::SOAPBoolean
#   subnetMaskSettable - SOAP::SOAPBoolean
#   defaultGatewaySettable - SOAP::SOAPBoolean
#   primaryDnsServerAddressSettable - SOAP::SOAPBoolean
#   alternateDnsServerAddressSettable - SOAP::SOAPBoolean
#   ipv6Supported - SOAP::SOAPBoolean
#   arpRedirectSettable - SOAP::SOAPBoolean
#   mtuSettable - SOAP::SOAPBoolean
#   hostNameAsTargetAddress - SOAP::SOAPBoolean
#   nameAliasSettable - SOAP::SOAPBoolean
class HostInternetScsiHbaIPCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :addressSettable
  attr_accessor :ipConfigurationMethodSettable
  attr_accessor :subnetMaskSettable
  attr_accessor :defaultGatewaySettable
  attr_accessor :primaryDnsServerAddressSettable
  attr_accessor :alternateDnsServerAddressSettable
  attr_accessor :ipv6Supported
  attr_accessor :arpRedirectSettable
  attr_accessor :mtuSettable
  attr_accessor :hostNameAsTargetAddress
  attr_accessor :nameAliasSettable

  def initialize(dynamicType = nil, dynamicProperty = [], addressSettable = nil, ipConfigurationMethodSettable = nil, subnetMaskSettable = nil, defaultGatewaySettable = nil, primaryDnsServerAddressSettable = nil, alternateDnsServerAddressSettable = nil, ipv6Supported = nil, arpRedirectSettable = nil, mtuSettable = nil, hostNameAsTargetAddress = nil, nameAliasSettable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @addressSettable = addressSettable
    @ipConfigurationMethodSettable = ipConfigurationMethodSettable
    @subnetMaskSettable = subnetMaskSettable
    @defaultGatewaySettable = defaultGatewaySettable
    @primaryDnsServerAddressSettable = primaryDnsServerAddressSettable
    @alternateDnsServerAddressSettable = alternateDnsServerAddressSettable
    @ipv6Supported = ipv6Supported
    @arpRedirectSettable = arpRedirectSettable
    @mtuSettable = mtuSettable
    @hostNameAsTargetAddress = hostNameAsTargetAddress
    @nameAliasSettable = nameAliasSettable
  end
end

# {urn:vim25}HostInternetScsiHbaIPProperties
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   mac - SOAP::SOAPString
#   address - SOAP::SOAPString
#   dhcpConfigurationEnabled - SOAP::SOAPBoolean
#   subnetMask - SOAP::SOAPString
#   defaultGateway - SOAP::SOAPString
#   primaryDnsServerAddress - SOAP::SOAPString
#   alternateDnsServerAddress - SOAP::SOAPString
#   ipv6Address - SOAP::SOAPString
#   ipv6SubnetMask - SOAP::SOAPString
#   ipv6DefaultGateway - SOAP::SOAPString
#   arpRedirectEnabled - SOAP::SOAPBoolean
#   mtu - SOAP::SOAPInt
#   jumboFramesEnabled - SOAP::SOAPBoolean
class HostInternetScsiHbaIPProperties < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :mac
  attr_accessor :address
  attr_accessor :dhcpConfigurationEnabled
  attr_accessor :subnetMask
  attr_accessor :defaultGateway
  attr_accessor :primaryDnsServerAddress
  attr_accessor :alternateDnsServerAddress
  attr_accessor :ipv6Address
  attr_accessor :ipv6SubnetMask
  attr_accessor :ipv6DefaultGateway
  attr_accessor :arpRedirectEnabled
  attr_accessor :mtu
  attr_accessor :jumboFramesEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], mac = nil, address = nil, dhcpConfigurationEnabled = nil, subnetMask = nil, defaultGateway = nil, primaryDnsServerAddress = nil, alternateDnsServerAddress = nil, ipv6Address = nil, ipv6SubnetMask = nil, ipv6DefaultGateway = nil, arpRedirectEnabled = nil, mtu = nil, jumboFramesEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @mac = mac
    @address = address
    @dhcpConfigurationEnabled = dhcpConfigurationEnabled
    @subnetMask = subnetMask
    @defaultGateway = defaultGateway
    @primaryDnsServerAddress = primaryDnsServerAddress
    @alternateDnsServerAddress = alternateDnsServerAddress
    @ipv6Address = ipv6Address
    @ipv6SubnetMask = ipv6SubnetMask
    @ipv6DefaultGateway = ipv6DefaultGateway
    @arpRedirectEnabled = arpRedirectEnabled
    @mtu = mtu
    @jumboFramesEnabled = jumboFramesEnabled
  end
end

# {urn:vim25}HostInternetScsiHbaSendTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   address - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   authenticationProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaAuthenticationProperties
#   digestProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDigestProperties
#   supportedAdvancedOptions - Bosh::Director::CloudProviders::VSphere::OptionDef
#   advancedOptions - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaParamValue
#   parent - SOAP::SOAPString
class HostInternetScsiHbaSendTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :address
  attr_accessor :port
  attr_accessor :authenticationProperties
  attr_accessor :digestProperties
  attr_accessor :supportedAdvancedOptions
  attr_accessor :advancedOptions
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], address = nil, port = nil, authenticationProperties = nil, digestProperties = nil, supportedAdvancedOptions = [], advancedOptions = [], parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @address = address
    @port = port
    @authenticationProperties = authenticationProperties
    @digestProperties = digestProperties
    @supportedAdvancedOptions = supportedAdvancedOptions
    @advancedOptions = advancedOptions
    @parent = parent
  end
end

# {urn:vim25}HostInternetScsiHbaStaticTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   address - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   iScsiName - SOAP::SOAPString
#   authenticationProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaAuthenticationProperties
#   digestProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDigestProperties
#   supportedAdvancedOptions - Bosh::Director::CloudProviders::VSphere::OptionDef
#   advancedOptions - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaParamValue
#   parent - SOAP::SOAPString
class HostInternetScsiHbaStaticTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :address
  attr_accessor :port
  attr_accessor :iScsiName
  attr_accessor :authenticationProperties
  attr_accessor :digestProperties
  attr_accessor :supportedAdvancedOptions
  attr_accessor :advancedOptions
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], address = nil, port = nil, iScsiName = nil, authenticationProperties = nil, digestProperties = nil, supportedAdvancedOptions = [], advancedOptions = [], parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @address = address
    @port = port
    @iScsiName = iScsiName
    @authenticationProperties = authenticationProperties
    @digestProperties = digestProperties
    @supportedAdvancedOptions = supportedAdvancedOptions
    @advancedOptions = advancedOptions
    @parent = parent
  end
end

# {urn:vim25}HostInternetScsiHbaTargetSet
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   staticTargets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaStaticTarget
#   sendTargets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaSendTarget
class HostInternetScsiHbaTargetSet < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :staticTargets
  attr_accessor :sendTargets

  def initialize(dynamicType = nil, dynamicProperty = [], staticTargets = [], sendTargets = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @staticTargets = staticTargets
    @sendTargets = sendTargets
  end
end

# {urn:vim25}HostProxySwitchSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   backing - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchHostMemberBacking
class HostProxySwitchSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @backing = backing
  end
end

# {urn:vim25}HostProxySwitchConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostProxySwitchSpec
class HostProxySwitchConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :uuid
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, uuid = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @uuid = uuid
    @spec = spec
  end
end

# {urn:vim25}HostProxySwitch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dvsUuid - SOAP::SOAPString
#   dvsName - SOAP::SOAPString
#   key - SOAP::SOAPString
#   numPorts - SOAP::SOAPInt
#   numPortsAvailable - SOAP::SOAPInt
#   uplinkPort - Bosh::Director::CloudProviders::VSphere::KeyValue
#   mtu - SOAP::SOAPInt
#   pnic - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostProxySwitchSpec
class HostProxySwitch < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dvsUuid
  attr_accessor :dvsName
  attr_accessor :key
  attr_accessor :numPorts
  attr_accessor :numPortsAvailable
  attr_accessor :uplinkPort
  attr_accessor :mtu
  attr_accessor :pnic
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], dvsUuid = nil, dvsName = nil, key = nil, numPorts = nil, numPortsAvailable = nil, uplinkPort = [], mtu = nil, pnic = [], spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dvsUuid = dvsUuid
    @dvsName = dvsName
    @key = key
    @numPorts = numPorts
    @numPortsAvailable = numPortsAvailable
    @uplinkPort = uplinkPort
    @mtu = mtu
    @pnic = pnic
    @spec = spec
  end
end

# {urn:vim25}HostIpConfigIpV6Address
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   origin - SOAP::SOAPString
#   dadState - SOAP::SOAPString
#   lifetime - SOAP::SOAPDateTime
#   operation - SOAP::SOAPString
class HostIpConfigIpV6Address < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :prefixLength
  attr_accessor :origin
  attr_accessor :dadState
  attr_accessor :lifetime
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, prefixLength = nil, origin = nil, dadState = nil, lifetime = nil, operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @prefixLength = prefixLength
    @origin = origin
    @dadState = dadState
    @lifetime = lifetime
    @operation = operation
  end
end

# {urn:vim25}HostIpConfigIpV6AddressConfiguration
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipV6Address - Bosh::Director::CloudProviders::VSphere::HostIpConfigIpV6Address
#   autoConfigurationEnabled - SOAP::SOAPBoolean
#   dhcpV6Enabled - SOAP::SOAPBoolean
class HostIpConfigIpV6AddressConfiguration < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipV6Address
  attr_accessor :autoConfigurationEnabled
  attr_accessor :dhcpV6Enabled

  def initialize(dynamicType = nil, dynamicProperty = [], ipV6Address = [], autoConfigurationEnabled = nil, dhcpV6Enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipV6Address = ipV6Address
    @autoConfigurationEnabled = autoConfigurationEnabled
    @dhcpV6Enabled = dhcpV6Enabled
  end
end

# {urn:vim25}HostIpConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dhcp - SOAP::SOAPBoolean
#   ipAddress - SOAP::SOAPString
#   subnetMask - SOAP::SOAPString
#   ipV6Config - Bosh::Director::CloudProviders::VSphere::HostIpConfigIpV6AddressConfiguration
class HostIpConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dhcp
  attr_accessor :ipAddress
  attr_accessor :subnetMask
  attr_accessor :ipV6Config

  def initialize(dynamicType = nil, dynamicProperty = [], dhcp = nil, ipAddress = nil, subnetMask = nil, ipV6Config = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dhcp = dhcp
    @ipAddress = ipAddress
    @subnetMask = subnetMask
    @ipV6Config = ipV6Config
  end
end

# {urn:vim25}HostIpRouteConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   defaultGateway - SOAP::SOAPString
#   gatewayDevice - SOAP::SOAPString
#   ipV6DefaultGateway - SOAP::SOAPString
#   ipV6GatewayDevice - SOAP::SOAPString
class HostIpRouteConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :defaultGateway
  attr_accessor :gatewayDevice
  attr_accessor :ipV6DefaultGateway
  attr_accessor :ipV6GatewayDevice

  def initialize(dynamicType = nil, dynamicProperty = [], defaultGateway = nil, gatewayDevice = nil, ipV6DefaultGateway = nil, ipV6GatewayDevice = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @defaultGateway = defaultGateway
    @gatewayDevice = gatewayDevice
    @ipV6DefaultGateway = ipV6DefaultGateway
    @ipV6GatewayDevice = ipV6GatewayDevice
  end
end

# {urn:vim25}HostIpRouteConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   defaultGateway - SOAP::SOAPString
#   gatewayDevice - SOAP::SOAPString
#   ipV6DefaultGateway - SOAP::SOAPString
#   ipV6GatewayDevice - SOAP::SOAPString
#   gatewayDeviceConnection - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConnection
#   ipV6GatewayDeviceConnection - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConnection
class HostIpRouteConfigSpec < HostIpRouteConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :defaultGateway
  attr_accessor :gatewayDevice
  attr_accessor :ipV6DefaultGateway
  attr_accessor :ipV6GatewayDevice
  attr_accessor :gatewayDeviceConnection
  attr_accessor :ipV6GatewayDeviceConnection

  def initialize(dynamicType = nil, dynamicProperty = [], defaultGateway = nil, gatewayDevice = nil, ipV6DefaultGateway = nil, ipV6GatewayDevice = nil, gatewayDeviceConnection = nil, ipV6GatewayDeviceConnection = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @defaultGateway = defaultGateway
    @gatewayDevice = gatewayDevice
    @ipV6DefaultGateway = ipV6DefaultGateway
    @ipV6GatewayDevice = ipV6GatewayDevice
    @gatewayDeviceConnection = gatewayDeviceConnection
    @ipV6GatewayDeviceConnection = ipV6GatewayDeviceConnection
  end
end

# {urn:vim25}HostIpRouteEntry
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   gateway - SOAP::SOAPString
#   deviceName - SOAP::SOAPString
class HostIpRouteEntry < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :prefixLength
  attr_accessor :gateway
  attr_accessor :deviceName

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, prefixLength = nil, gateway = nil, deviceName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @prefixLength = prefixLength
    @gateway = gateway
    @deviceName = deviceName
  end
end

# {urn:vim25}HostIpRouteOp
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   route - Bosh::Director::CloudProviders::VSphere::HostIpRouteEntry
class HostIpRouteOp < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :route

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, route = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @route = route
  end
end

# {urn:vim25}HostIpRouteTableConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipRoute - Bosh::Director::CloudProviders::VSphere::HostIpRouteOp
#   ipv6Route - Bosh::Director::CloudProviders::VSphere::HostIpRouteOp
class HostIpRouteTableConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipRoute
  attr_accessor :ipv6Route

  def initialize(dynamicType = nil, dynamicProperty = [], ipRoute = [], ipv6Route = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipRoute = ipRoute
    @ipv6Route = ipv6Route
  end
end

# {urn:vim25}HostIpRouteTableInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipRoute - Bosh::Director::CloudProviders::VSphere::HostIpRouteEntry
#   ipv6Route - Bosh::Director::CloudProviders::VSphere::HostIpRouteEntry
class HostIpRouteTableInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipRoute
  attr_accessor :ipv6Route

  def initialize(dynamicType = nil, dynamicProperty = [], ipRoute = [], ipv6Route = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipRoute = ipRoute
    @ipv6Route = ipv6Route
  end
end

# {urn:vim25}HostIpmiInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   bmcIpAddress - SOAP::SOAPString
#   bmcMacAddress - SOAP::SOAPString
#   login - SOAP::SOAPString
#   password - SOAP::SOAPString
class HostIpmiInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :bmcIpAddress
  attr_accessor :bmcMacAddress
  attr_accessor :login
  attr_accessor :password

  def initialize(dynamicType = nil, dynamicProperty = [], bmcIpAddress = nil, bmcMacAddress = nil, login = nil, password = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @bmcIpAddress = bmcIpAddress
    @bmcMacAddress = bmcMacAddress
    @login = login
    @password = password
  end
end

# {urn:vim25}KernelModuleSectionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   address - SOAP::SOAPLong
#   length - SOAP::SOAPInt
class KernelModuleSectionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :address
  attr_accessor :length

  def initialize(dynamicType = nil, dynamicProperty = [], address = nil, length = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @address = address
    @length = length
  end
end

# {urn:vim25}KernelModuleInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   version - SOAP::SOAPString
#   filename - SOAP::SOAPString
#   optionString - SOAP::SOAPString
#   loaded - SOAP::SOAPBoolean
#   enabled - SOAP::SOAPBoolean
#   useCount - SOAP::SOAPInt
#   readOnlySection - Bosh::Director::CloudProviders::VSphere::KernelModuleSectionInfo
#   writableSection - Bosh::Director::CloudProviders::VSphere::KernelModuleSectionInfo
#   textSection - Bosh::Director::CloudProviders::VSphere::KernelModuleSectionInfo
#   dataSection - Bosh::Director::CloudProviders::VSphere::KernelModuleSectionInfo
#   bssSection - Bosh::Director::CloudProviders::VSphere::KernelModuleSectionInfo
class KernelModuleInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :name
  attr_accessor :version
  attr_accessor :filename
  attr_accessor :optionString
  attr_accessor :loaded
  attr_accessor :enabled
  attr_accessor :useCount
  attr_accessor :readOnlySection
  attr_accessor :writableSection
  attr_accessor :textSection
  attr_accessor :dataSection
  attr_accessor :bssSection

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, name = nil, version = nil, filename = nil, optionString = nil, loaded = nil, enabled = nil, useCount = nil, readOnlySection = nil, writableSection = nil, textSection = nil, dataSection = nil, bssSection = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @name = name
    @version = version
    @filename = filename
    @optionString = optionString
    @loaded = loaded
    @enabled = enabled
    @useCount = useCount
    @readOnlySection = readOnlySection
    @writableSection = writableSection
    @textSection = textSection
    @dataSection = dataSection
    @bssSection = bssSection
  end
end

# {urn:vim25}HostLicenseSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   source - Bosh::Director::CloudProviders::VSphere::LicenseSource
#   editionKey - SOAP::SOAPString
#   disabledFeatureKey - SOAP::SOAPString
#   enabledFeatureKey - SOAP::SOAPString
class HostLicenseSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :source
  attr_accessor :editionKey
  attr_accessor :disabledFeatureKey
  attr_accessor :enabledFeatureKey

  def initialize(dynamicType = nil, dynamicProperty = [], source = nil, editionKey = nil, disabledFeatureKey = [], enabledFeatureKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @source = source
    @editionKey = editionKey
    @disabledFeatureKey = disabledFeatureKey
    @enabledFeatureKey = enabledFeatureKey
  end
end

# {urn:vim25}LinkDiscoveryProtocolConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   protocol - SOAP::SOAPString
#   operation - SOAP::SOAPString
class LinkDiscoveryProtocolConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :protocol
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], protocol = nil, operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @protocol = protocol
    @operation = operation
  end
end

# {urn:vim25}HostAccountSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   password - SOAP::SOAPString
#   description - SOAP::SOAPString
class HostAccountSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :password
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, password = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @password = password
    @description = description
  end
end

# {urn:vim25}HostPosixAccountSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   password - SOAP::SOAPString
#   description - SOAP::SOAPString
#   posixId - SOAP::SOAPInt
#   shellAccess - SOAP::SOAPBoolean
class HostPosixAccountSpec < HostAccountSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :password
  attr_accessor :description
  attr_accessor :posixId
  attr_accessor :shellAccess

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, password = nil, description = nil, posixId = nil, shellAccess = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @password = password
    @description = description
    @posixId = posixId
    @shellAccess = shellAccess
  end
end

# {urn:vim25}ServiceConsoleReservationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serviceConsoleReservedCfg - SOAP::SOAPLong
#   serviceConsoleReserved - SOAP::SOAPLong
#   unreserved - SOAP::SOAPLong
class ServiceConsoleReservationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serviceConsoleReservedCfg
  attr_accessor :serviceConsoleReserved
  attr_accessor :unreserved

  def initialize(dynamicType = nil, dynamicProperty = [], serviceConsoleReservedCfg = nil, serviceConsoleReserved = nil, unreserved = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serviceConsoleReservedCfg = serviceConsoleReservedCfg
    @serviceConsoleReserved = serviceConsoleReserved
    @unreserved = unreserved
  end
end

# {urn:vim25}VirtualMachineMemoryReservationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   virtualMachineMin - SOAP::SOAPLong
#   virtualMachineMax - SOAP::SOAPLong
#   virtualMachineReserved - SOAP::SOAPLong
#   allocationPolicy - SOAP::SOAPString
class VirtualMachineMemoryReservationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :virtualMachineMin
  attr_accessor :virtualMachineMax
  attr_accessor :virtualMachineReserved
  attr_accessor :allocationPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], virtualMachineMin = nil, virtualMachineMax = nil, virtualMachineReserved = nil, allocationPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @virtualMachineMin = virtualMachineMin
    @virtualMachineMax = virtualMachineMax
    @virtualMachineReserved = virtualMachineReserved
    @allocationPolicy = allocationPolicy
  end
end

# {urn:vim25}VirtualMachineMemoryReservationSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   virtualMachineReserved - SOAP::SOAPLong
#   allocationPolicy - SOAP::SOAPString
class VirtualMachineMemoryReservationSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :virtualMachineReserved
  attr_accessor :allocationPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], virtualMachineReserved = nil, allocationPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @virtualMachineReserved = virtualMachineReserved
    @allocationPolicy = allocationPolicy
  end
end

# {urn:vim25}HostMemorySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serviceConsoleReservation - SOAP::SOAPLong
class HostMemorySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serviceConsoleReservation

  def initialize(dynamicType = nil, dynamicProperty = [], serviceConsoleReservation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serviceConsoleReservation = serviceConsoleReservation
  end
end

# {urn:vim25}HostMountInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - SOAP::SOAPString
#   accessMode - SOAP::SOAPString
#   accessible - SOAP::SOAPBoolean
class HostMountInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :accessMode
  attr_accessor :accessible

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, accessMode = nil, accessible = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @accessMode = accessMode
    @accessible = accessible
  end
end

# {urn:vim25}HostMultipathInfoLogicalUnitPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - SOAP::SOAPString
class HostMultipathInfoLogicalUnitPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
  end
end

# {urn:vim25}HostMultipathInfoFixedLogicalUnitPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - SOAP::SOAPString
#   prefer - SOAP::SOAPString
class HostMultipathInfoFixedLogicalUnitPolicy < HostMultipathInfoLogicalUnitPolicy
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy
  attr_accessor :prefer

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil, prefer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
    @prefer = prefer
  end
end

# {urn:vim25}HostMultipathInfoLogicalUnitStorageArrayTypePolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - SOAP::SOAPString
class HostMultipathInfoLogicalUnitStorageArrayTypePolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
  end
end

# {urn:vim25}HostMultipathInfoLogicalUnit
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   id - SOAP::SOAPString
#   lun - SOAP::SOAPString
#   path - Bosh::Director::CloudProviders::VSphere::HostMultipathInfoPath
#   policy - Bosh::Director::CloudProviders::VSphere::HostMultipathInfoLogicalUnitPolicy
#   storageArrayTypePolicy - Bosh::Director::CloudProviders::VSphere::HostMultipathInfoLogicalUnitStorageArrayTypePolicy
class HostMultipathInfoLogicalUnit < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :id
  attr_accessor :lun
  attr_accessor :path
  attr_accessor :policy
  attr_accessor :storageArrayTypePolicy

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, id = nil, lun = nil, path = [], policy = nil, storageArrayTypePolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @id = id
    @lun = lun
    @path = path
    @policy = policy
    @storageArrayTypePolicy = storageArrayTypePolicy
  end
end

# {urn:vim25}HostMultipathInfoPath
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   pathState - SOAP::SOAPString
#   state - SOAP::SOAPString
#   isWorkingPath - SOAP::SOAPBoolean
#   adapter - SOAP::SOAPString
#   lun - SOAP::SOAPString
#   transport - Bosh::Director::CloudProviders::VSphere::HostTargetTransport
class HostMultipathInfoPath < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :pathState
  attr_accessor :state
  attr_accessor :isWorkingPath
  attr_accessor :adapter
  attr_accessor :lun
  attr_accessor :transport

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, pathState = nil, state = nil, isWorkingPath = nil, adapter = nil, lun = nil, transport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @pathState = pathState
    @state = state
    @isWorkingPath = isWorkingPath
    @adapter = adapter
    @lun = lun
    @transport = transport
  end
end

# {urn:vim25}HostMultipathInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   lun - Bosh::Director::CloudProviders::VSphere::HostMultipathInfoLogicalUnit
class HostMultipathInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :lun

  def initialize(dynamicType = nil, dynamicProperty = [], lun = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @lun = lun
  end
end

# {urn:vim25}HostMultipathStateInfoPath
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   pathState - SOAP::SOAPString
class HostMultipathStateInfoPath < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :pathState

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, pathState = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @pathState = pathState
  end
end

# {urn:vim25}HostMultipathStateInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - Bosh::Director::CloudProviders::VSphere::HostMultipathStateInfoPath
class HostMultipathStateInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path

  def initialize(dynamicType = nil, dynamicProperty = [], path = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
  end
end

# {urn:vim25}HostNatServicePortForwardSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
#   hostPort - SOAP::SOAPInt
#   guestPort - SOAP::SOAPInt
#   guestIpAddress - SOAP::SOAPString
class HostNatServicePortForwardSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :name
  attr_accessor :hostPort
  attr_accessor :guestPort
  attr_accessor :guestIpAddress

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, name = nil, hostPort = nil, guestPort = nil, guestIpAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @name = name
    @hostPort = hostPort
    @guestPort = guestPort
    @guestIpAddress = guestIpAddress
  end
end

# {urn:vim25}HostNatServiceNameServiceSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dnsAutoDetect - SOAP::SOAPBoolean
#   dnsPolicy - SOAP::SOAPString
#   dnsRetries - SOAP::SOAPInt
#   dnsTimeout - SOAP::SOAPInt
#   dnsNameServer - SOAP::SOAPString
#   nbdsTimeout - SOAP::SOAPInt
#   nbnsRetries - SOAP::SOAPInt
#   nbnsTimeout - SOAP::SOAPInt
class HostNatServiceNameServiceSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dnsAutoDetect
  attr_accessor :dnsPolicy
  attr_accessor :dnsRetries
  attr_accessor :dnsTimeout
  attr_accessor :dnsNameServer
  attr_accessor :nbdsTimeout
  attr_accessor :nbnsRetries
  attr_accessor :nbnsTimeout

  def initialize(dynamicType = nil, dynamicProperty = [], dnsAutoDetect = nil, dnsPolicy = nil, dnsRetries = nil, dnsTimeout = nil, dnsNameServer = [], nbdsTimeout = nil, nbnsRetries = nil, nbnsTimeout = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dnsAutoDetect = dnsAutoDetect
    @dnsPolicy = dnsPolicy
    @dnsRetries = dnsRetries
    @dnsTimeout = dnsTimeout
    @dnsNameServer = dnsNameServer
    @nbdsTimeout = nbdsTimeout
    @nbnsRetries = nbnsRetries
    @nbnsTimeout = nbnsTimeout
  end
end

# {urn:vim25}HostNatServiceSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   virtualSwitch - SOAP::SOAPString
#   activeFtp - SOAP::SOAPBoolean
#   allowAnyOui - SOAP::SOAPBoolean
#   configPort - SOAP::SOAPBoolean
#   ipGatewayAddress - SOAP::SOAPString
#   udpTimeout - SOAP::SOAPInt
#   portForward - Bosh::Director::CloudProviders::VSphere::HostNatServicePortForwardSpec
#   nameService - Bosh::Director::CloudProviders::VSphere::HostNatServiceNameServiceSpec
class HostNatServiceSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :virtualSwitch
  attr_accessor :activeFtp
  attr_accessor :allowAnyOui
  attr_accessor :configPort
  attr_accessor :ipGatewayAddress
  attr_accessor :udpTimeout
  attr_accessor :portForward
  attr_accessor :nameService

  def initialize(dynamicType = nil, dynamicProperty = [], virtualSwitch = nil, activeFtp = nil, allowAnyOui = nil, configPort = nil, ipGatewayAddress = nil, udpTimeout = nil, portForward = [], nameService = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @virtualSwitch = virtualSwitch
    @activeFtp = activeFtp
    @allowAnyOui = allowAnyOui
    @configPort = configPort
    @ipGatewayAddress = ipGatewayAddress
    @udpTimeout = udpTimeout
    @portForward = portForward
    @nameService = nameService
  end
end

# {urn:vim25}HostNatServiceConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   key - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostNatServiceSpec
class HostNatServiceConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :key
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, key = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @key = key
    @spec = spec
  end
end

# {urn:vim25}HostNatService
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostNatServiceSpec
class HostNatService < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @spec = spec
  end
end

# {urn:vim25}HostNetCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   canSetPhysicalNicLinkSpeed - SOAP::SOAPBoolean
#   supportsNicTeaming - SOAP::SOAPBoolean
#   nicTeamingPolicy - SOAP::SOAPString
#   supportsVlan - SOAP::SOAPBoolean
#   usesServiceConsoleNic - SOAP::SOAPBoolean
#   supportsNetworkHints - SOAP::SOAPBoolean
#   maxPortGroupsPerVswitch - SOAP::SOAPInt
#   vswitchConfigSupported - SOAP::SOAPBoolean
#   vnicConfigSupported - SOAP::SOAPBoolean
#   ipRouteConfigSupported - SOAP::SOAPBoolean
#   dnsConfigSupported - SOAP::SOAPBoolean
#   dhcpOnVnicSupported - SOAP::SOAPBoolean
#   ipV6Supported - SOAP::SOAPBoolean
class HostNetCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :canSetPhysicalNicLinkSpeed
  attr_accessor :supportsNicTeaming
  attr_accessor :nicTeamingPolicy
  attr_accessor :supportsVlan
  attr_accessor :usesServiceConsoleNic
  attr_accessor :supportsNetworkHints
  attr_accessor :maxPortGroupsPerVswitch
  attr_accessor :vswitchConfigSupported
  attr_accessor :vnicConfigSupported
  attr_accessor :ipRouteConfigSupported
  attr_accessor :dnsConfigSupported
  attr_accessor :dhcpOnVnicSupported
  attr_accessor :ipV6Supported

  def initialize(dynamicType = nil, dynamicProperty = [], canSetPhysicalNicLinkSpeed = nil, supportsNicTeaming = nil, nicTeamingPolicy = [], supportsVlan = nil, usesServiceConsoleNic = nil, supportsNetworkHints = nil, maxPortGroupsPerVswitch = nil, vswitchConfigSupported = nil, vnicConfigSupported = nil, ipRouteConfigSupported = nil, dnsConfigSupported = nil, dhcpOnVnicSupported = nil, ipV6Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @canSetPhysicalNicLinkSpeed = canSetPhysicalNicLinkSpeed
    @supportsNicTeaming = supportsNicTeaming
    @nicTeamingPolicy = nicTeamingPolicy
    @supportsVlan = supportsVlan
    @usesServiceConsoleNic = usesServiceConsoleNic
    @supportsNetworkHints = supportsNetworkHints
    @maxPortGroupsPerVswitch = maxPortGroupsPerVswitch
    @vswitchConfigSupported = vswitchConfigSupported
    @vnicConfigSupported = vnicConfigSupported
    @ipRouteConfigSupported = ipRouteConfigSupported
    @dnsConfigSupported = dnsConfigSupported
    @dhcpOnVnicSupported = dhcpOnVnicSupported
    @ipV6Supported = ipV6Supported
  end
end

# {urn:vim25}HostNetOffloadCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   csumOffload - SOAP::SOAPBoolean
#   tcpSegmentation - SOAP::SOAPBoolean
#   zeroCopyXmit - SOAP::SOAPBoolean
class HostNetOffloadCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :csumOffload
  attr_accessor :tcpSegmentation
  attr_accessor :zeroCopyXmit

  def initialize(dynamicType = nil, dynamicProperty = [], csumOffload = nil, tcpSegmentation = nil, zeroCopyXmit = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @csumOffload = csumOffload
    @tcpSegmentation = tcpSegmentation
    @zeroCopyXmit = zeroCopyXmit
  end
end

# {urn:vim25}HostNetworkConfigResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vnicDevice - SOAP::SOAPString
#   consoleVnicDevice - SOAP::SOAPString
class HostNetworkConfigResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vnicDevice
  attr_accessor :consoleVnicDevice

  def initialize(dynamicType = nil, dynamicProperty = [], vnicDevice = [], consoleVnicDevice = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vnicDevice = vnicDevice
    @consoleVnicDevice = consoleVnicDevice
  end
end

# {urn:vim25}HostNetworkConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vswitch - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchConfig
#   proxySwitch - Bosh::Director::CloudProviders::VSphere::HostProxySwitchConfig
#   portgroup - Bosh::Director::CloudProviders::VSphere::HostPortGroupConfig
#   pnic - Bosh::Director::CloudProviders::VSphere::PhysicalNicConfig
#   vnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConfig
#   consoleVnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConfig
#   dnsConfig - Bosh::Director::CloudProviders::VSphere::HostDnsConfig
#   ipRouteConfig - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
#   consoleIpRouteConfig - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
#   routeTableConfig - Bosh::Director::CloudProviders::VSphere::HostIpRouteTableConfig
#   dhcp - Bosh::Director::CloudProviders::VSphere::HostDhcpServiceConfig
#   nat - Bosh::Director::CloudProviders::VSphere::HostNatServiceConfig
#   ipV6Enabled - SOAP::SOAPBoolean
class HostNetworkConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vswitch
  attr_accessor :proxySwitch
  attr_accessor :portgroup
  attr_accessor :pnic
  attr_accessor :vnic
  attr_accessor :consoleVnic
  attr_accessor :dnsConfig
  attr_accessor :ipRouteConfig
  attr_accessor :consoleIpRouteConfig
  attr_accessor :routeTableConfig
  attr_accessor :dhcp
  attr_accessor :nat
  attr_accessor :ipV6Enabled

  def initialize(dynamicType = nil, dynamicProperty = [], vswitch = [], proxySwitch = [], portgroup = [], pnic = [], vnic = [], consoleVnic = [], dnsConfig = nil, ipRouteConfig = nil, consoleIpRouteConfig = nil, routeTableConfig = nil, dhcp = [], nat = [], ipV6Enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vswitch = vswitch
    @proxySwitch = proxySwitch
    @portgroup = portgroup
    @pnic = pnic
    @vnic = vnic
    @consoleVnic = consoleVnic
    @dnsConfig = dnsConfig
    @ipRouteConfig = ipRouteConfig
    @consoleIpRouteConfig = consoleIpRouteConfig
    @routeTableConfig = routeTableConfig
    @dhcp = dhcp
    @nat = nat
    @ipV6Enabled = ipV6Enabled
  end
end

# {urn:vim25}HostNetworkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vswitch - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitch
#   proxySwitch - Bosh::Director::CloudProviders::VSphere::HostProxySwitch
#   portgroup - Bosh::Director::CloudProviders::VSphere::HostPortGroup
#   pnic - Bosh::Director::CloudProviders::VSphere::PhysicalNic
#   vnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNic
#   consoleVnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNic
#   dnsConfig - Bosh::Director::CloudProviders::VSphere::HostDnsConfig
#   ipRouteConfig - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
#   consoleIpRouteConfig - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
#   routeTableInfo - Bosh::Director::CloudProviders::VSphere::HostIpRouteTableInfo
#   dhcp - Bosh::Director::CloudProviders::VSphere::HostDhcpService
#   nat - Bosh::Director::CloudProviders::VSphere::HostNatService
#   ipV6Enabled - SOAP::SOAPBoolean
#   atBootIpV6Enabled - SOAP::SOAPBoolean
class HostNetworkInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vswitch
  attr_accessor :proxySwitch
  attr_accessor :portgroup
  attr_accessor :pnic
  attr_accessor :vnic
  attr_accessor :consoleVnic
  attr_accessor :dnsConfig
  attr_accessor :ipRouteConfig
  attr_accessor :consoleIpRouteConfig
  attr_accessor :routeTableInfo
  attr_accessor :dhcp
  attr_accessor :nat
  attr_accessor :ipV6Enabled
  attr_accessor :atBootIpV6Enabled

  def initialize(dynamicType = nil, dynamicProperty = [], vswitch = [], proxySwitch = [], portgroup = [], pnic = [], vnic = [], consoleVnic = [], dnsConfig = nil, ipRouteConfig = nil, consoleIpRouteConfig = nil, routeTableInfo = nil, dhcp = [], nat = [], ipV6Enabled = nil, atBootIpV6Enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vswitch = vswitch
    @proxySwitch = proxySwitch
    @portgroup = portgroup
    @pnic = pnic
    @vnic = vnic
    @consoleVnic = consoleVnic
    @dnsConfig = dnsConfig
    @ipRouteConfig = ipRouteConfig
    @consoleIpRouteConfig = consoleIpRouteConfig
    @routeTableInfo = routeTableInfo
    @dhcp = dhcp
    @nat = nat
    @ipV6Enabled = ipV6Enabled
    @atBootIpV6Enabled = atBootIpV6Enabled
  end
end

# {urn:vim25}HostNetworkSecurityPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   allowPromiscuous - SOAP::SOAPBoolean
#   macChanges - SOAP::SOAPBoolean
#   forgedTransmits - SOAP::SOAPBoolean
class HostNetworkSecurityPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :allowPromiscuous
  attr_accessor :macChanges
  attr_accessor :forgedTransmits

  def initialize(dynamicType = nil, dynamicProperty = [], allowPromiscuous = nil, macChanges = nil, forgedTransmits = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @allowPromiscuous = allowPromiscuous
    @macChanges = macChanges
    @forgedTransmits = forgedTransmits
  end
end

# {urn:vim25}HostNetworkTrafficShapingPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   averageBandwidth - SOAP::SOAPLong
#   peakBandwidth - SOAP::SOAPLong
#   burstSize - SOAP::SOAPLong
class HostNetworkTrafficShapingPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :averageBandwidth
  attr_accessor :peakBandwidth
  attr_accessor :burstSize

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, averageBandwidth = nil, peakBandwidth = nil, burstSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @averageBandwidth = averageBandwidth
    @peakBandwidth = peakBandwidth
    @burstSize = burstSize
  end
end

# {urn:vim25}HostNicFailureCriteria
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   checkSpeed - SOAP::SOAPString
#   speed - SOAP::SOAPInt
#   checkDuplex - SOAP::SOAPBoolean
#   fullDuplex - SOAP::SOAPBoolean
#   checkErrorPercent - SOAP::SOAPBoolean
#   percentage - SOAP::SOAPInt
#   checkBeacon - SOAP::SOAPBoolean
class HostNicFailureCriteria < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :checkSpeed
  attr_accessor :speed
  attr_accessor :checkDuplex
  attr_accessor :fullDuplex
  attr_accessor :checkErrorPercent
  attr_accessor :percentage
  attr_accessor :checkBeacon

  def initialize(dynamicType = nil, dynamicProperty = [], checkSpeed = nil, speed = nil, checkDuplex = nil, fullDuplex = nil, checkErrorPercent = nil, percentage = nil, checkBeacon = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @checkSpeed = checkSpeed
    @speed = speed
    @checkDuplex = checkDuplex
    @fullDuplex = fullDuplex
    @checkErrorPercent = checkErrorPercent
    @percentage = percentage
    @checkBeacon = checkBeacon
  end
end

# {urn:vim25}HostNicOrderPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeNic - SOAP::SOAPString
#   standbyNic - SOAP::SOAPString
class HostNicOrderPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeNic
  attr_accessor :standbyNic

  def initialize(dynamicType = nil, dynamicProperty = [], activeNic = [], standbyNic = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeNic = activeNic
    @standbyNic = standbyNic
  end
end

# {urn:vim25}HostNicTeamingPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - SOAP::SOAPString
#   reversePolicy - SOAP::SOAPBoolean
#   notifySwitches - SOAP::SOAPBoolean
#   rollingOrder - SOAP::SOAPBoolean
#   failureCriteria - Bosh::Director::CloudProviders::VSphere::HostNicFailureCriteria
#   nicOrder - Bosh::Director::CloudProviders::VSphere::HostNicOrderPolicy
class HostNicTeamingPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy
  attr_accessor :reversePolicy
  attr_accessor :notifySwitches
  attr_accessor :rollingOrder
  attr_accessor :failureCriteria
  attr_accessor :nicOrder

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil, reversePolicy = nil, notifySwitches = nil, rollingOrder = nil, failureCriteria = nil, nicOrder = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
    @reversePolicy = reversePolicy
    @notifySwitches = notifySwitches
    @rollingOrder = rollingOrder
    @failureCriteria = failureCriteria
    @nicOrder = nicOrder
  end
end

# {urn:vim25}HostNetworkPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   security - Bosh::Director::CloudProviders::VSphere::HostNetworkSecurityPolicy
#   nicTeaming - Bosh::Director::CloudProviders::VSphere::HostNicTeamingPolicy
#   offloadPolicy - Bosh::Director::CloudProviders::VSphere::HostNetOffloadCapabilities
#   shapingPolicy - Bosh::Director::CloudProviders::VSphere::HostNetworkTrafficShapingPolicy
class HostNetworkPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :security
  attr_accessor :nicTeaming
  attr_accessor :offloadPolicy
  attr_accessor :shapingPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], security = nil, nicTeaming = nil, offloadPolicy = nil, shapingPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @security = security
    @nicTeaming = nicTeaming
    @offloadPolicy = offloadPolicy
    @shapingPolicy = shapingPolicy
  end
end

# {urn:vim25}HostNtpConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   server - SOAP::SOAPString
class HostNtpConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :server

  def initialize(dynamicType = nil, dynamicProperty = [], server = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @server = server
  end
end

# {urn:vim25}HostNumericSensorInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   healthState - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   currentReading - SOAP::SOAPLong
#   unitModifier - SOAP::SOAPInt
#   baseUnits - SOAP::SOAPString
#   rateUnits - SOAP::SOAPString
#   sensorType - SOAP::SOAPString
class HostNumericSensorInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :healthState
  attr_accessor :currentReading
  attr_accessor :unitModifier
  attr_accessor :baseUnits
  attr_accessor :rateUnits
  attr_accessor :sensorType

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, healthState = nil, currentReading = nil, unitModifier = nil, baseUnits = nil, rateUnits = nil, sensorType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @healthState = healthState
    @currentReading = currentReading
    @unitModifier = unitModifier
    @baseUnits = baseUnits
    @rateUnits = rateUnits
    @sensorType = sensorType
  end
end

# {urn:vim25}HostPatchManagerResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   version - SOAP::SOAPString
#   status - Bosh::Director::CloudProviders::VSphere::HostPatchManagerStatus
#   xmlResult - SOAP::SOAPString
class HostPatchManagerResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :version
  attr_accessor :status
  attr_accessor :xmlResult

  def initialize(dynamicType = nil, dynamicProperty = [], version = nil, status = [], xmlResult = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @version = version
    @status = status
    @xmlResult = xmlResult
  end
end

# {urn:vim25}HostPatchManagerStatusPrerequisitePatch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   installState - SOAP::SOAPString
class HostPatchManagerStatusPrerequisitePatch < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :installState

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, installState = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @installState = installState
  end
end

# {urn:vim25}HostPatchManagerStatus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   applicable - SOAP::SOAPBoolean
#   reason - SOAP::SOAPString
#   integrity - SOAP::SOAPString
#   installed - SOAP::SOAPBoolean
#   installState - SOAP::SOAPString
#   prerequisitePatch - Bosh::Director::CloudProviders::VSphere::HostPatchManagerStatusPrerequisitePatch
#   restartRequired - SOAP::SOAPBoolean
#   reconnectRequired - SOAP::SOAPBoolean
#   vmOffRequired - SOAP::SOAPBoolean
#   supersededPatchIds - SOAP::SOAPString
class HostPatchManagerStatus < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :applicable
  attr_accessor :reason
  attr_accessor :integrity
  attr_accessor :installed
  attr_accessor :installState
  attr_accessor :prerequisitePatch
  attr_accessor :restartRequired
  attr_accessor :reconnectRequired
  attr_accessor :vmOffRequired
  attr_accessor :supersededPatchIds

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, applicable = nil, reason = [], integrity = nil, installed = nil, installState = [], prerequisitePatch = [], restartRequired = nil, reconnectRequired = nil, vmOffRequired = nil, supersededPatchIds = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @applicable = applicable
    @reason = reason
    @integrity = integrity
    @installed = installed
    @installState = installState
    @prerequisitePatch = prerequisitePatch
    @restartRequired = restartRequired
    @reconnectRequired = reconnectRequired
    @vmOffRequired = vmOffRequired
    @supersededPatchIds = supersededPatchIds
  end
end

# {urn:vim25}HostPatchManagerLocator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   url - SOAP::SOAPString
#   proxy - SOAP::SOAPString
class HostPatchManagerLocator < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :url
  attr_accessor :proxy

  def initialize(dynamicType = nil, dynamicProperty = [], url = nil, proxy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @url = url
    @proxy = proxy
  end
end

# {urn:vim25}HostPatchManagerPatchManagerOperationSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   proxy - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
#   cmdOption - SOAP::SOAPString
class HostPatchManagerPatchManagerOperationSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :proxy
  attr_accessor :port
  attr_accessor :userName
  attr_accessor :password
  attr_accessor :cmdOption

  def initialize(dynamicType = nil, dynamicProperty = [], proxy = nil, port = nil, userName = nil, password = nil, cmdOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @proxy = proxy
    @port = port
    @userName = userName
    @password = password
    @cmdOption = cmdOption
  end
end

# {urn:vim25}HostPathSelectionPolicyOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - Bosh::Director::CloudProviders::VSphere::ElementDescription
class HostPathSelectionPolicyOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
  end
end

# {urn:vim25}HostPciDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   classId - SOAP::SOAPShort
#   bus - SOAP::SOAPByte
#   slot - SOAP::SOAPByte
#   function - SOAP::SOAPByte
#   vendorId - SOAP::SOAPShort
#   subVendorId - SOAP::SOAPShort
#   vendorName - SOAP::SOAPString
#   deviceId - SOAP::SOAPShort
#   subDeviceId - SOAP::SOAPShort
#   parentBridge - SOAP::SOAPString
#   deviceName - SOAP::SOAPString
class HostPciDevice < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :classId
  attr_accessor :bus
  attr_accessor :slot
  attr_accessor :function
  attr_accessor :vendorId
  attr_accessor :subVendorId
  attr_accessor :vendorName
  attr_accessor :deviceId
  attr_accessor :subDeviceId
  attr_accessor :parentBridge
  attr_accessor :deviceName

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, classId = nil, bus = nil, slot = nil, function = nil, vendorId = nil, subVendorId = nil, vendorName = nil, deviceId = nil, subDeviceId = nil, parentBridge = nil, deviceName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @classId = classId
    @bus = bus
    @slot = slot
    @function = function
    @vendorId = vendorId
    @subVendorId = subVendorId
    @vendorName = vendorName
    @deviceId = deviceId
    @subDeviceId = subDeviceId
    @parentBridge = parentBridge
    @deviceName = deviceName
  end
end

# {urn:vim25}HostPciPassthruConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   passthruEnabled - SOAP::SOAPBoolean
class HostPciPassthruConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :passthruEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, passthruEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @passthruEnabled = passthruEnabled
  end
end

# {urn:vim25}HostPciPassthruInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   dependentDevice - SOAP::SOAPString
#   passthruEnabled - SOAP::SOAPBoolean
#   passthruCapable - SOAP::SOAPBoolean
#   passthruActive - SOAP::SOAPBoolean
class HostPciPassthruInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :dependentDevice
  attr_accessor :passthruEnabled
  attr_accessor :passthruCapable
  attr_accessor :passthruActive

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, dependentDevice = nil, passthruEnabled = nil, passthruCapable = nil, passthruActive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @dependentDevice = dependentDevice
    @passthruEnabled = passthruEnabled
    @passthruCapable = passthruCapable
    @passthruActive = passthruActive
  end
end

# {urn:vim25}PhysicalNicSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ip - Bosh::Director::CloudProviders::VSphere::HostIpConfig
#   linkSpeed - Bosh::Director::CloudProviders::VSphere::PhysicalNicLinkInfo
class PhysicalNicSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ip
  attr_accessor :linkSpeed

  def initialize(dynamicType = nil, dynamicProperty = [], ip = nil, linkSpeed = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ip = ip
    @linkSpeed = linkSpeed
  end
end

# {urn:vim25}PhysicalNicConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::PhysicalNicSpec
class PhysicalNicConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], device = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @spec = spec
  end
end

# {urn:vim25}PhysicalNicLinkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   speedMb - SOAP::SOAPInt
#   duplex - SOAP::SOAPBoolean
class PhysicalNicLinkInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :speedMb
  attr_accessor :duplex

  def initialize(dynamicType = nil, dynamicProperty = [], speedMb = nil, duplex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @speedMb = speedMb
    @duplex = duplex
  end
end

# {urn:vim25}PhysicalNicHint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vlanId - SOAP::SOAPInt
class PhysicalNicHint < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vlanId

  def initialize(dynamicType = nil, dynamicProperty = [], vlanId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vlanId = vlanId
  end
end

# {urn:vim25}PhysicalNicIpHint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vlanId - SOAP::SOAPInt
#   ipSubnet - SOAP::SOAPString
class PhysicalNicIpHint < PhysicalNicHint
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vlanId
  attr_accessor :ipSubnet

  def initialize(dynamicType = nil, dynamicProperty = [], vlanId = nil, ipSubnet = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vlanId = vlanId
    @ipSubnet = ipSubnet
  end
end

# {urn:vim25}PhysicalNicNameHint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vlanId - SOAP::SOAPInt
#   network - SOAP::SOAPString
class PhysicalNicNameHint < PhysicalNicHint
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vlanId
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], vlanId = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vlanId = vlanId
    @network = network
  end
end

# {urn:vim25}PhysicalNicHintInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - SOAP::SOAPString
#   subnet - Bosh::Director::CloudProviders::VSphere::PhysicalNicIpHint
#   network - Bosh::Director::CloudProviders::VSphere::PhysicalNicNameHint
#   connectedSwitchPort - Bosh::Director::CloudProviders::VSphere::PhysicalNicCdpInfo
class PhysicalNicHintInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :subnet
  attr_accessor :network
  attr_accessor :connectedSwitchPort

  def initialize(dynamicType = nil, dynamicProperty = [], device = nil, subnet = [], network = [], connectedSwitchPort = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @subnet = subnet
    @network = network
    @connectedSwitchPort = connectedSwitchPort
  end
end

# {urn:vim25}PhysicalNicCdpDeviceCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   router - SOAP::SOAPBoolean
#   transparentBridge - SOAP::SOAPBoolean
#   sourceRouteBridge - SOAP::SOAPBoolean
#   networkSwitch - SOAP::SOAPBoolean
#   host - SOAP::SOAPBoolean
#   igmpEnabled - SOAP::SOAPBoolean
#   repeater - SOAP::SOAPBoolean
class PhysicalNicCdpDeviceCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :router
  attr_accessor :transparentBridge
  attr_accessor :sourceRouteBridge
  attr_accessor :networkSwitch
  attr_accessor :host
  attr_accessor :igmpEnabled
  attr_accessor :repeater

  def initialize(dynamicType = nil, dynamicProperty = [], router = nil, transparentBridge = nil, sourceRouteBridge = nil, networkSwitch = nil, host = nil, igmpEnabled = nil, repeater = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @router = router
    @transparentBridge = transparentBridge
    @sourceRouteBridge = sourceRouteBridge
    @networkSwitch = networkSwitch
    @host = host
    @igmpEnabled = igmpEnabled
    @repeater = repeater
  end
end

# {urn:vim25}PhysicalNicCdpInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   cdpVersion - SOAP::SOAPInt
#   timeout - SOAP::SOAPInt
#   ttl - SOAP::SOAPInt
#   samples - SOAP::SOAPInt
#   devId - SOAP::SOAPString
#   address - SOAP::SOAPString
#   portId - SOAP::SOAPString
#   deviceCapability - Bosh::Director::CloudProviders::VSphere::PhysicalNicCdpDeviceCapability
#   softwareVersion - SOAP::SOAPString
#   hardwarePlatform - SOAP::SOAPString
#   ipPrefix - SOAP::SOAPString
#   ipPrefixLen - SOAP::SOAPInt
#   vlan - SOAP::SOAPInt
#   fullDuplex - SOAP::SOAPBoolean
#   mtu - SOAP::SOAPInt
#   systemName - SOAP::SOAPString
#   systemOID - SOAP::SOAPString
#   mgmtAddr - SOAP::SOAPString
#   location - SOAP::SOAPString
class PhysicalNicCdpInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :cdpVersion
  attr_accessor :timeout
  attr_accessor :ttl
  attr_accessor :samples
  attr_accessor :devId
  attr_accessor :address
  attr_accessor :portId
  attr_accessor :deviceCapability
  attr_accessor :softwareVersion
  attr_accessor :hardwarePlatform
  attr_accessor :ipPrefix
  attr_accessor :ipPrefixLen
  attr_accessor :vlan
  attr_accessor :fullDuplex
  attr_accessor :mtu
  attr_accessor :systemName
  attr_accessor :systemOID
  attr_accessor :mgmtAddr
  attr_accessor :location

  def initialize(dynamicType = nil, dynamicProperty = [], cdpVersion = nil, timeout = nil, ttl = nil, samples = nil, devId = nil, address = nil, portId = nil, deviceCapability = nil, softwareVersion = nil, hardwarePlatform = nil, ipPrefix = nil, ipPrefixLen = nil, vlan = nil, fullDuplex = nil, mtu = nil, systemName = nil, systemOID = nil, mgmtAddr = nil, location = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @cdpVersion = cdpVersion
    @timeout = timeout
    @ttl = ttl
    @samples = samples
    @devId = devId
    @address = address
    @portId = portId
    @deviceCapability = deviceCapability
    @softwareVersion = softwareVersion
    @hardwarePlatform = hardwarePlatform
    @ipPrefix = ipPrefix
    @ipPrefixLen = ipPrefixLen
    @vlan = vlan
    @fullDuplex = fullDuplex
    @mtu = mtu
    @systemName = systemName
    @systemOID = systemOID
    @mgmtAddr = mgmtAddr
    @location = location
  end
end

# {urn:vim25}PhysicalNic
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   device - SOAP::SOAPString
#   pci - SOAP::SOAPString
#   driver - SOAP::SOAPString
#   linkSpeed - Bosh::Director::CloudProviders::VSphere::PhysicalNicLinkInfo
#   validLinkSpecification - Bosh::Director::CloudProviders::VSphere::PhysicalNicLinkInfo
#   spec - Bosh::Director::CloudProviders::VSphere::PhysicalNicSpec
#   wakeOnLanSupported - SOAP::SOAPBoolean
#   mac - SOAP::SOAPString
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
#   vmDirectPathGen2SupportedMode - SOAP::SOAPString
#   resourcePoolSchedulerAllowed - SOAP::SOAPBoolean
#   resourcePoolSchedulerDisallowedReason - SOAP::SOAPString
#   autoNegotiateSupported - SOAP::SOAPBoolean
class PhysicalNic < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :device
  attr_accessor :pci
  attr_accessor :driver
  attr_accessor :linkSpeed
  attr_accessor :validLinkSpecification
  attr_accessor :spec
  attr_accessor :wakeOnLanSupported
  attr_accessor :mac
  attr_accessor :vmDirectPathGen2Supported
  attr_accessor :vmDirectPathGen2SupportedMode
  attr_accessor :resourcePoolSchedulerAllowed
  attr_accessor :resourcePoolSchedulerDisallowedReason
  attr_accessor :autoNegotiateSupported

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, device = nil, pci = nil, driver = nil, linkSpeed = nil, validLinkSpecification = [], spec = nil, wakeOnLanSupported = nil, mac = nil, vmDirectPathGen2Supported = nil, vmDirectPathGen2SupportedMode = nil, resourcePoolSchedulerAllowed = nil, resourcePoolSchedulerDisallowedReason = [], autoNegotiateSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @device = device
    @pci = pci
    @driver = driver
    @linkSpeed = linkSpeed
    @validLinkSpecification = validLinkSpecification
    @spec = spec
    @wakeOnLanSupported = wakeOnLanSupported
    @mac = mac
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
    @vmDirectPathGen2SupportedMode = vmDirectPathGen2SupportedMode
    @resourcePoolSchedulerAllowed = resourcePoolSchedulerAllowed
    @resourcePoolSchedulerDisallowedReason = resourcePoolSchedulerDisallowedReason
    @autoNegotiateSupported = autoNegotiateSupported
  end
end

# {urn:vim25}HostPlugStoreTopologyAdapter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   adapter - SOAP::SOAPString
#   path - SOAP::SOAPString
class HostPlugStoreTopologyAdapter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :adapter
  attr_accessor :path

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, adapter = nil, path = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @adapter = adapter
    @path = path
  end
end

# {urn:vim25}HostPlugStoreTopologyPath
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   channelNumber - SOAP::SOAPInt
#   targetNumber - SOAP::SOAPInt
#   lunNumber - SOAP::SOAPInt
#   adapter - SOAP::SOAPString
#   target - SOAP::SOAPString
#   device - SOAP::SOAPString
class HostPlugStoreTopologyPath < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :channelNumber
  attr_accessor :targetNumber
  attr_accessor :lunNumber
  attr_accessor :adapter
  attr_accessor :target
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, channelNumber = nil, targetNumber = nil, lunNumber = nil, adapter = nil, target = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @channelNumber = channelNumber
    @targetNumber = targetNumber
    @lunNumber = lunNumber
    @adapter = adapter
    @target = target
    @device = device
  end
end

# {urn:vim25}HostPlugStoreTopologyDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   lun - SOAP::SOAPString
#   path - SOAP::SOAPString
class HostPlugStoreTopologyDevice < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :lun
  attr_accessor :path

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, lun = nil, path = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @lun = lun
    @path = path
  end
end

# {urn:vim25}HostPlugStoreTopologyPlugin
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   device - SOAP::SOAPString
#   claimedPath - SOAP::SOAPString
class HostPlugStoreTopologyPlugin < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :device
  attr_accessor :claimedPath

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, device = [], claimedPath = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @device = device
    @claimedPath = claimedPath
  end
end

# {urn:vim25}HostPlugStoreTopologyTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   transport - Bosh::Director::CloudProviders::VSphere::HostTargetTransport
class HostPlugStoreTopologyTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :transport

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, transport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @transport = transport
  end
end

# {urn:vim25}HostPlugStoreTopology
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   adapter - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopologyAdapter
#   path - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopologyPath
#   target - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopologyTarget
#   device - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopologyDevice
#   plugin - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopologyPlugin
class HostPlugStoreTopology < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :adapter
  attr_accessor :path
  attr_accessor :target
  attr_accessor :device
  attr_accessor :plugin

  def initialize(dynamicType = nil, dynamicProperty = [], adapter = [], path = [], target = [], device = [], plugin = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @adapter = adapter
    @path = path
    @target = target
    @device = device
    @plugin = plugin
  end
end

# {urn:vim25}HostPortGroupSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   vlanId - SOAP::SOAPInt
#   vswitchName - SOAP::SOAPString
#   policy - Bosh::Director::CloudProviders::VSphere::HostNetworkPolicy
class HostPortGroupSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :vlanId
  attr_accessor :vswitchName
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, vlanId = nil, vswitchName = nil, policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @vlanId = vlanId
    @vswitchName = vswitchName
    @policy = policy
  end
end

# {urn:vim25}HostPortGroupConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPortGroupSpec
class HostPortGroupConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @spec = spec
  end
end

# {urn:vim25}HostPortGroupPort
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   mac - SOAP::SOAPString
#   type - SOAP::SOAPString
class HostPortGroupPort < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :mac
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, mac = [], type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @mac = mac
    @type = type
  end
end

# {urn:vim25}HostPortGroup
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   port - Bosh::Director::CloudProviders::VSphere::HostPortGroupPort
#   vswitch - SOAP::SOAPString
#   computedPolicy - Bosh::Director::CloudProviders::VSphere::HostNetworkPolicy
#   spec - Bosh::Director::CloudProviders::VSphere::HostPortGroupSpec
class HostPortGroup < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :port
  attr_accessor :vswitch
  attr_accessor :computedPolicy
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, port = [], vswitch = nil, computedPolicy = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @port = port
    @vswitch = vswitch
    @computedPolicy = computedPolicy
    @spec = spec
  end
end

# {urn:vim25}HostPowerPolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   shortName - SOAP::SOAPString
#   description - SOAP::SOAPString
class HostPowerPolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :shortName
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, shortName = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @shortName = shortName
    @description = description
  end
end

# {urn:vim25}PowerSystemCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   availablePolicy - Bosh::Director::CloudProviders::VSphere::HostPowerPolicy
class PowerSystemCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :availablePolicy

  def initialize(dynamicType = nil, dynamicProperty = [], availablePolicy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @availablePolicy = availablePolicy
  end
end

# {urn:vim25}PowerSystemInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   currentPolicy - Bosh::Director::CloudProviders::VSphere::HostPowerPolicy
class PowerSystemInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :currentPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], currentPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @currentPolicy = currentPolicy
  end
end

# {urn:vim25}HostResignatureRescanResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   rescan - Bosh::Director::CloudProviders::VSphere::HostVmfsRescanResult
#   result - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HostResignatureRescanResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :rescan
  attr_accessor :result

  def initialize(dynamicType = nil, dynamicProperty = [], rescan = [], result = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @rescan = rescan
    @result = result
  end
end

# {urn:vim25}HostFirewallRule
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   port - SOAP::SOAPInt
#   endPort - SOAP::SOAPInt
#   direction - Bosh::Director::CloudProviders::VSphere::HostFirewallRuleDirection
#   protocol - SOAP::SOAPString
class HostFirewallRule < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :port
  attr_accessor :endPort
  attr_accessor :direction
  attr_accessor :protocol

  def initialize(dynamicType = nil, dynamicProperty = [], port = nil, endPort = nil, direction = nil, protocol = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @port = port
    @endPort = endPort
    @direction = direction
    @protocol = protocol
  end
end

# {urn:vim25}HostFirewallRuleset
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   label - SOAP::SOAPString
#   required - SOAP::SOAPBoolean
#   rule - Bosh::Director::CloudProviders::VSphere::HostFirewallRule
#   service - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class HostFirewallRuleset < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :label
  attr_accessor :required
  attr_accessor :rule
  attr_accessor :service
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, label = nil, required = nil, rule = [], service = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @label = label
    @required = required
    @rule = rule
    @service = service
    @enabled = enabled
  end
end

# {urn:vim25}HostRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   connectionState - Bosh::Director::CloudProviders::VSphere::HostSystemConnectionState
#   powerState - Bosh::Director::CloudProviders::VSphere::HostSystemPowerState
#   standbyMode - SOAP::SOAPString
#   inMaintenanceMode - SOAP::SOAPBoolean
#   bootTime - SOAP::SOAPDateTime
#   healthSystemRuntime - Bosh::Director::CloudProviders::VSphere::HealthSystemRuntime
#   tpmPcrValues - Bosh::Director::CloudProviders::VSphere::HostTpmDigestInfo
class HostRuntimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :connectionState
  attr_accessor :powerState
  attr_accessor :standbyMode
  attr_accessor :inMaintenanceMode
  attr_accessor :bootTime
  attr_accessor :healthSystemRuntime
  attr_accessor :tpmPcrValues

  def initialize(dynamicType = nil, dynamicProperty = [], connectionState = nil, powerState = nil, standbyMode = nil, inMaintenanceMode = nil, bootTime = nil, healthSystemRuntime = nil, tpmPcrValues = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @connectionState = connectionState
    @powerState = powerState
    @standbyMode = standbyMode
    @inMaintenanceMode = inMaintenanceMode
    @bootTime = bootTime
    @healthSystemRuntime = healthSystemRuntime
    @tpmPcrValues = tpmPcrValues
  end
end

# {urn:vim25}HostScsiDiskPartition
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskName - SOAP::SOAPString
#   partition - SOAP::SOAPInt
class HostScsiDiskPartition < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskName
  attr_accessor :partition

  def initialize(dynamicType = nil, dynamicProperty = [], diskName = nil, partition = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskName = diskName
    @partition = partition
  end
end

# {urn:vim25}ScsiLunCapabilities
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   updateDisplayNameSupported - SOAP::SOAPBoolean
class ScsiLunCapabilities < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :updateDisplayNameSupported

  def initialize(dynamicType = nil, dynamicProperty = [], updateDisplayNameSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @updateDisplayNameSupported = updateDisplayNameSupported
  end
end

# {urn:vim25}ScsiLunDurableName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   namespace - SOAP::SOAPString
#   namespaceId - SOAP::SOAPByte
#   data - SOAP::SOAPByte
class ScsiLunDurableName < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :namespace
  attr_accessor :namespaceId
  attr_accessor :data

  def initialize(dynamicType = nil, dynamicProperty = [], namespace = nil, namespaceId = nil, data = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @namespace = namespace
    @namespaceId = namespaceId
    @data = data
  end
end

# {urn:vim25}ScsiLunDescriptor
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   quality - SOAP::SOAPString
#   id - SOAP::SOAPString
class ScsiLunDescriptor < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :quality
  attr_accessor :id

  def initialize(dynamicType = nil, dynamicProperty = [], quality = nil, id = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @quality = quality
    @id = id
  end
end

# {urn:vim25}HostScsiTopologyInterface
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   adapter - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::HostScsiTopologyTarget
class HostScsiTopologyInterface < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :adapter
  attr_accessor :target

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, adapter = nil, target = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @adapter = adapter
    @target = target
  end
end

# {urn:vim25}HostScsiTopologyTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   target - SOAP::SOAPInt
#   lun - Bosh::Director::CloudProviders::VSphere::HostScsiTopologyLun
#   transport - Bosh::Director::CloudProviders::VSphere::HostTargetTransport
class HostScsiTopologyTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :target
  attr_accessor :lun
  attr_accessor :transport

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, target = nil, lun = [], transport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @target = target
    @lun = lun
    @transport = transport
  end
end

# {urn:vim25}HostScsiTopologyLun
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   lun - SOAP::SOAPInt
#   scsiLun - SOAP::SOAPString
class HostScsiTopologyLun < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :lun
  attr_accessor :scsiLun

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, lun = nil, scsiLun = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @lun = lun
    @scsiLun = scsiLun
  end
end

# {urn:vim25}HostScsiTopology
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   adapter - Bosh::Director::CloudProviders::VSphere::HostScsiTopologyInterface
class HostScsiTopology < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :adapter

  def initialize(dynamicType = nil, dynamicProperty = [], adapter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @adapter = adapter
  end
end

# {urn:vim25}HostSecuritySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   adminPassword - SOAP::SOAPString
#   removePermission - Bosh::Director::CloudProviders::VSphere::Permission
#   addPermission - Bosh::Director::CloudProviders::VSphere::Permission
class HostSecuritySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :adminPassword
  attr_accessor :removePermission
  attr_accessor :addPermission

  def initialize(dynamicType = nil, dynamicProperty = [], adminPassword = nil, removePermission = [], addPermission = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @adminPassword = adminPassword
    @removePermission = removePermission
    @addPermission = addPermission
  end
end

# {urn:vim25}HostService
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   label - SOAP::SOAPString
#   required - SOAP::SOAPBoolean
#   uninstallable - SOAP::SOAPBoolean
#   running - SOAP::SOAPBoolean
#   ruleset - SOAP::SOAPString
#   policy - SOAP::SOAPString
class HostService < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :label
  attr_accessor :required
  attr_accessor :uninstallable
  attr_accessor :running
  attr_accessor :ruleset
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, label = nil, required = nil, uninstallable = nil, running = nil, ruleset = [], policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @label = label
    @required = required
    @uninstallable = uninstallable
    @running = running
    @ruleset = ruleset
    @policy = policy
  end
end

# {urn:vim25}HostServiceConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serviceId - SOAP::SOAPString
#   startupPolicy - SOAP::SOAPString
class HostServiceConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serviceId
  attr_accessor :startupPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], serviceId = nil, startupPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serviceId = serviceId
    @startupPolicy = startupPolicy
  end
end

# {urn:vim25}HostServiceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   service - Bosh::Director::CloudProviders::VSphere::HostService
class HostServiceInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :service

  def initialize(dynamicType = nil, dynamicProperty = [], service = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @service = service
  end
end

# {urn:vim25}HostSnmpDestination
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostName - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   community - SOAP::SOAPString
class HostSnmpDestination < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostName
  attr_accessor :port
  attr_accessor :community

  def initialize(dynamicType = nil, dynamicProperty = [], hostName = nil, port = nil, community = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostName = hostName
    @port = port
    @community = community
  end
end

# {urn:vim25}HostSnmpConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   port - SOAP::SOAPInt
#   readOnlyCommunities - SOAP::SOAPString
#   trapTargets - Bosh::Director::CloudProviders::VSphere::HostSnmpDestination
class HostSnmpConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :port
  attr_accessor :readOnlyCommunities
  attr_accessor :trapTargets

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, port = nil, readOnlyCommunities = [], trapTargets = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @port = port
    @readOnlyCommunities = readOnlyCommunities
    @trapTargets = trapTargets
  end
end

# {urn:vim25}HostSnmpSystemAgentLimits
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   maxReadOnlyCommunities - SOAP::SOAPInt
#   maxTrapDestinations - SOAP::SOAPInt
#   maxCommunityLength - SOAP::SOAPInt
#   maxBufferSize - SOAP::SOAPInt
#   capability - Bosh::Director::CloudProviders::VSphere::HostSnmpAgentCapability
class HostSnmpSystemAgentLimits < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :maxReadOnlyCommunities
  attr_accessor :maxTrapDestinations
  attr_accessor :maxCommunityLength
  attr_accessor :maxBufferSize
  attr_accessor :capability

  def initialize(dynamicType = nil, dynamicProperty = [], maxReadOnlyCommunities = nil, maxTrapDestinations = nil, maxCommunityLength = nil, maxBufferSize = nil, capability = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @maxReadOnlyCommunities = maxReadOnlyCommunities
    @maxTrapDestinations = maxTrapDestinations
    @maxCommunityLength = maxCommunityLength
    @maxBufferSize = maxBufferSize
    @capability = capability
  end
end

# {urn:vim25}HostSslThumbprintInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   principal - SOAP::SOAPString
#   sslThumbprints - SOAP::SOAPString
class HostSslThumbprintInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :principal
  attr_accessor :sslThumbprints

  def initialize(dynamicType = nil, dynamicProperty = [], principal = nil, sslThumbprints = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @principal = principal
    @sslThumbprints = sslThumbprints
  end
end

# {urn:vim25}HostStorageArrayTypePolicyOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   policy - Bosh::Director::CloudProviders::VSphere::ElementDescription
class HostStorageArrayTypePolicyOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], policy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @policy = policy
  end
end

# {urn:vim25}HostStorageDeviceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostBusAdapter - Bosh::Director::CloudProviders::VSphere::HostHostBusAdapter
#   scsiLun - Bosh::Director::CloudProviders::VSphere::ScsiLun
#   scsiTopology - Bosh::Director::CloudProviders::VSphere::HostScsiTopology
#   multipathInfo - Bosh::Director::CloudProviders::VSphere::HostMultipathInfo
#   plugStoreTopology - Bosh::Director::CloudProviders::VSphere::HostPlugStoreTopology
#   softwareInternetScsiEnabled - SOAP::SOAPBoolean
class HostStorageDeviceInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostBusAdapter
  attr_accessor :scsiLun
  attr_accessor :scsiTopology
  attr_accessor :multipathInfo
  attr_accessor :plugStoreTopology
  attr_accessor :softwareInternetScsiEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], hostBusAdapter = [], scsiLun = [], scsiTopology = nil, multipathInfo = nil, plugStoreTopology = nil, softwareInternetScsiEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostBusAdapter = hostBusAdapter
    @scsiLun = scsiLun
    @scsiTopology = scsiTopology
    @multipathInfo = multipathInfo
    @plugStoreTopology = plugStoreTopology
    @softwareInternetScsiEnabled = softwareInternetScsiEnabled
  end
end

# {urn:vim25}HostHardwareSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vendor - SOAP::SOAPString
#   model - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   otherIdentifyingInfo - Bosh::Director::CloudProviders::VSphere::HostSystemIdentificationInfo
#   memorySize - SOAP::SOAPLong
#   cpuModel - SOAP::SOAPString
#   cpuMhz - SOAP::SOAPInt
#   numCpuPkgs - SOAP::SOAPShort
#   numCpuCores - SOAP::SOAPShort
#   numCpuThreads - SOAP::SOAPShort
#   numNics - SOAP::SOAPInt
#   numHBAs - SOAP::SOAPInt
class HostHardwareSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vendor
  attr_accessor :model
  attr_accessor :uuid
  attr_accessor :otherIdentifyingInfo
  attr_accessor :memorySize
  attr_accessor :cpuModel
  attr_accessor :cpuMhz
  attr_accessor :numCpuPkgs
  attr_accessor :numCpuCores
  attr_accessor :numCpuThreads
  attr_accessor :numNics
  attr_accessor :numHBAs

  def initialize(dynamicType = nil, dynamicProperty = [], vendor = nil, model = nil, uuid = nil, otherIdentifyingInfo = [], memorySize = nil, cpuModel = nil, cpuMhz = nil, numCpuPkgs = nil, numCpuCores = nil, numCpuThreads = nil, numNics = nil, numHBAs = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vendor = vendor
    @model = model
    @uuid = uuid
    @otherIdentifyingInfo = otherIdentifyingInfo
    @memorySize = memorySize
    @cpuModel = cpuModel
    @cpuMhz = cpuMhz
    @numCpuPkgs = numCpuPkgs
    @numCpuCores = numCpuCores
    @numCpuThreads = numCpuThreads
    @numNics = numNics
    @numHBAs = numHBAs
  end
end

# {urn:vim25}HostListSummaryQuickStats
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   overallCpuUsage - SOAP::SOAPInt
#   overallMemoryUsage - SOAP::SOAPInt
#   distributedCpuFairness - SOAP::SOAPInt
#   distributedMemoryFairness - SOAP::SOAPInt
#   uptime - SOAP::SOAPInt
class HostListSummaryQuickStats < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :overallCpuUsage
  attr_accessor :overallMemoryUsage
  attr_accessor :distributedCpuFairness
  attr_accessor :distributedMemoryFairness
  attr_accessor :uptime

  def initialize(dynamicType = nil, dynamicProperty = [], overallCpuUsage = nil, overallMemoryUsage = nil, distributedCpuFairness = nil, distributedMemoryFairness = nil, uptime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @overallCpuUsage = overallCpuUsage
    @overallMemoryUsage = overallMemoryUsage
    @distributedCpuFairness = distributedCpuFairness
    @distributedMemoryFairness = distributedMemoryFairness
    @uptime = uptime
  end
end

# {urn:vim25}HostConfigSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   sslThumbprint - SOAP::SOAPString
#   product - Bosh::Director::CloudProviders::VSphere::AboutInfo
#   vmotionEnabled - SOAP::SOAPBoolean
#   faultToleranceEnabled - SOAP::SOAPBoolean
#   featureVersion - Bosh::Director::CloudProviders::VSphere::HostFeatureVersionInfo
class HostConfigSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :port
  attr_accessor :sslThumbprint
  attr_accessor :product
  attr_accessor :vmotionEnabled
  attr_accessor :faultToleranceEnabled
  attr_accessor :featureVersion

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, port = nil, sslThumbprint = nil, product = nil, vmotionEnabled = nil, faultToleranceEnabled = nil, featureVersion = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @port = port
    @sslThumbprint = sslThumbprint
    @product = product
    @vmotionEnabled = vmotionEnabled
    @faultToleranceEnabled = faultToleranceEnabled
    @featureVersion = featureVersion
  end
end

# {urn:vim25}HostListSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hardware - Bosh::Director::CloudProviders::VSphere::HostHardwareSummary
#   runtime - Bosh::Director::CloudProviders::VSphere::HostRuntimeInfo
#   config - Bosh::Director::CloudProviders::VSphere::HostConfigSummary
#   quickStats - Bosh::Director::CloudProviders::VSphere::HostListSummaryQuickStats
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   rebootRequired - SOAP::SOAPBoolean
#   customValue - Bosh::Director::CloudProviders::VSphere::CustomFieldValue
#   managementServerIp - SOAP::SOAPString
#   maxEVCModeKey - SOAP::SOAPString
#   currentEVCModeKey - SOAP::SOAPString
class HostListSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :hardware
  attr_accessor :runtime
  attr_accessor :config
  attr_accessor :quickStats
  attr_accessor :overallStatus
  attr_accessor :rebootRequired
  attr_accessor :customValue
  attr_accessor :managementServerIp
  attr_accessor :maxEVCModeKey
  attr_accessor :currentEVCModeKey

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, hardware = nil, runtime = nil, config = nil, quickStats = nil, overallStatus = nil, rebootRequired = nil, customValue = [], managementServerIp = nil, maxEVCModeKey = nil, currentEVCModeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @hardware = hardware
    @runtime = runtime
    @config = config
    @quickStats = quickStats
    @overallStatus = overallStatus
    @rebootRequired = rebootRequired
    @customValue = customValue
    @managementServerIp = managementServerIp
    @maxEVCModeKey = maxEVCModeKey
    @currentEVCModeKey = currentEVCModeKey
  end
end

# {urn:vim25}HostSystemHealthInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numericSensorInfo - Bosh::Director::CloudProviders::VSphere::HostNumericSensorInfo
class HostSystemHealthInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numericSensorInfo

  def initialize(dynamicType = nil, dynamicProperty = [], numericSensorInfo = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numericSensorInfo = numericSensorInfo
  end
end

# {urn:vim25}HostSystemIdentificationInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   identifierValue - SOAP::SOAPString
#   identifierType - Bosh::Director::CloudProviders::VSphere::ElementDescription
class HostSystemIdentificationInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :identifierValue
  attr_accessor :identifierType

  def initialize(dynamicType = nil, dynamicProperty = [], identifierValue = nil, identifierType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @identifierValue = identifierValue
    @identifierType = identifierType
  end
end

# {urn:vim25}HostSystemResourceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   config - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   child - Bosh::Director::CloudProviders::VSphere::HostSystemResourceInfo
class HostSystemResourceInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :config
  attr_accessor :child

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, config = nil, child = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @config = config
    @child = child
  end
end

# {urn:vim25}HostTargetTransport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostTargetTransport < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostParallelScsiTargetTransport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostParallelScsiTargetTransport < HostTargetTransport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostBlockAdapterTargetTransport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostBlockAdapterTargetTransport < HostTargetTransport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostFibreChannelTargetTransport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   portWorldWideName - SOAP::SOAPLong
#   nodeWorldWideName - SOAP::SOAPLong
class HostFibreChannelTargetTransport < HostTargetTransport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :portWorldWideName
  attr_accessor :nodeWorldWideName

  def initialize(dynamicType = nil, dynamicProperty = [], portWorldWideName = nil, nodeWorldWideName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @portWorldWideName = portWorldWideName
    @nodeWorldWideName = nodeWorldWideName
  end
end

# {urn:vim25}HostInternetScsiTargetTransport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   iScsiName - SOAP::SOAPString
#   iScsiAlias - SOAP::SOAPString
#   address - SOAP::SOAPString
class HostInternetScsiTargetTransport < HostTargetTransport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :iScsiName
  attr_accessor :iScsiAlias
  attr_accessor :address

  def initialize(dynamicType = nil, dynamicProperty = [], iScsiName = nil, iScsiAlias = nil, address = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @iScsiName = iScsiName
    @iScsiAlias = iScsiAlias
    @address = address
  end
end

# {urn:vim25}HostDigestInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   digestMethod - SOAP::SOAPString
#   digestValue - SOAP::SOAPByte
#   objectName - SOAP::SOAPString
class HostDigestInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :digestMethod
  attr_accessor :digestValue
  attr_accessor :objectName

  def initialize(dynamicType = nil, dynamicProperty = [], digestMethod = nil, digestValue = [], objectName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @digestMethod = digestMethod
    @digestValue = digestValue
    @objectName = objectName
  end
end

# {urn:vim25}HostTpmDigestInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   digestMethod - SOAP::SOAPString
#   digestValue - SOAP::SOAPByte
#   objectName - SOAP::SOAPString
#   pcrNumber - SOAP::SOAPInt
class HostTpmDigestInfo < HostDigestInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :digestMethod
  attr_accessor :digestValue
  attr_accessor :objectName
  attr_accessor :pcrNumber

  def initialize(dynamicType = nil, dynamicProperty = [], digestMethod = nil, digestValue = [], objectName = nil, pcrNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @digestMethod = digestMethod
    @digestValue = digestValue
    @objectName = objectName
    @pcrNumber = pcrNumber
  end
end

# {urn:vim25}HostUnresolvedVmfsExtent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
#   devicePath - SOAP::SOAPString
#   vmfsUuid - SOAP::SOAPString
#   isHeadExtent - SOAP::SOAPBoolean
#   ordinal - SOAP::SOAPInt
#   startBlock - SOAP::SOAPInt
#   endBlock - SOAP::SOAPInt
#   reason - SOAP::SOAPString
class HostUnresolvedVmfsExtent < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :devicePath
  attr_accessor :vmfsUuid
  attr_accessor :isHeadExtent
  attr_accessor :ordinal
  attr_accessor :startBlock
  attr_accessor :endBlock
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], device = nil, devicePath = nil, vmfsUuid = nil, isHeadExtent = nil, ordinal = nil, startBlock = nil, endBlock = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @devicePath = devicePath
    @vmfsUuid = vmfsUuid
    @isHeadExtent = isHeadExtent
    @ordinal = ordinal
    @startBlock = startBlock
    @endBlock = endBlock
    @reason = reason
  end
end

# {urn:vim25}HostUnresolvedVmfsResignatureSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   extentDevicePath - SOAP::SOAPString
class HostUnresolvedVmfsResignatureSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :extentDevicePath

  def initialize(dynamicType = nil, dynamicProperty = [], extentDevicePath = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @extentDevicePath = extentDevicePath
  end
end

# {urn:vim25}HostUnresolvedVmfsResolutionResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   spec - Bosh::Director::CloudProviders::VSphere::HostUnresolvedVmfsResolutionSpec
#   vmfs - Bosh::Director::CloudProviders::VSphere::HostVmfsVolume
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class HostUnresolvedVmfsResolutionResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :spec
  attr_accessor :vmfs
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], spec = nil, vmfs = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @spec = spec
    @vmfs = vmfs
    @fault = fault
  end
end

# {urn:vim25}HostUnresolvedVmfsResolutionSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   extentDevicePath - SOAP::SOAPString
#   uuidResolution - SOAP::SOAPString
class HostUnresolvedVmfsResolutionSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :extentDevicePath
  attr_accessor :uuidResolution

  def initialize(dynamicType = nil, dynamicProperty = [], extentDevicePath = [], uuidResolution = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @extentDevicePath = extentDevicePath
    @uuidResolution = uuidResolution
  end
end

# {urn:vim25}HostUnresolvedVmfsVolumeResolveStatus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   resolvable - SOAP::SOAPBoolean
#   incompleteExtents - SOAP::SOAPBoolean
#   multipleCopies - SOAP::SOAPBoolean
class HostUnresolvedVmfsVolumeResolveStatus < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :resolvable
  attr_accessor :incompleteExtents
  attr_accessor :multipleCopies

  def initialize(dynamicType = nil, dynamicProperty = [], resolvable = nil, incompleteExtents = nil, multipleCopies = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @resolvable = resolvable
    @incompleteExtents = incompleteExtents
    @multipleCopies = multipleCopies
  end
end

# {urn:vim25}HostUnresolvedVmfsVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   extent - Bosh::Director::CloudProviders::VSphere::HostUnresolvedVmfsExtent
#   vmfsLabel - SOAP::SOAPString
#   vmfsUuid - SOAP::SOAPString
#   totalBlocks - SOAP::SOAPInt
#   resolveStatus - Bosh::Director::CloudProviders::VSphere::HostUnresolvedVmfsVolumeResolveStatus
class HostUnresolvedVmfsVolume < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :extent
  attr_accessor :vmfsLabel
  attr_accessor :vmfsUuid
  attr_accessor :totalBlocks
  attr_accessor :resolveStatus

  def initialize(dynamicType = nil, dynamicProperty = [], extent = [], vmfsLabel = nil, vmfsUuid = nil, totalBlocks = nil, resolveStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @extent = extent
    @vmfsLabel = vmfsLabel
    @vmfsUuid = vmfsUuid
    @totalBlocks = totalBlocks
    @resolveStatus = resolveStatus
  end
end

# {urn:vim25}HostVMotionConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmotionNicKey - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class HostVMotionConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmotionNicKey
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], vmotionNicKey = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmotionNicKey = vmotionNicKey
    @enabled = enabled
  end
end

# {urn:vim25}HostVMotionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   netConfig - Bosh::Director::CloudProviders::VSphere::HostVMotionNetConfig
#   ipConfig - Bosh::Director::CloudProviders::VSphere::HostIpConfig
class HostVMotionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :netConfig
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], netConfig = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @netConfig = netConfig
    @ipConfig = ipConfig
  end
end

# {urn:vim25}HostVMotionNetConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   candidateVnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNic
#   selectedVnic - SOAP::SOAPString
class HostVMotionNetConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :candidateVnic
  attr_accessor :selectedVnic

  def initialize(dynamicType = nil, dynamicProperty = [], candidateVnic = [], selectedVnic = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @candidateVnic = candidateVnic
    @selectedVnic = selectedVnic
  end
end

# {urn:vim25}HostVirtualNicSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ip - Bosh::Director::CloudProviders::VSphere::HostIpConfig
#   mac - SOAP::SOAPString
#   distributedVirtualPort - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnection
#   portgroup - SOAP::SOAPString
#   mtu - SOAP::SOAPInt
#   tsoEnabled - SOAP::SOAPBoolean
class HostVirtualNicSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ip
  attr_accessor :mac
  attr_accessor :distributedVirtualPort
  attr_accessor :portgroup
  attr_accessor :mtu
  attr_accessor :tsoEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], ip = nil, mac = nil, distributedVirtualPort = nil, portgroup = nil, mtu = nil, tsoEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ip = ip
    @mac = mac
    @distributedVirtualPort = distributedVirtualPort
    @portgroup = portgroup
    @mtu = mtu
    @tsoEnabled = tsoEnabled
  end
end

# {urn:vim25}HostVirtualNicConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   device - SOAP::SOAPString
#   portgroup - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
class HostVirtualNicConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :device
  attr_accessor :portgroup
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, device = nil, portgroup = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @device = device
    @portgroup = portgroup
    @spec = spec
  end
end

# {urn:vim25}HostVirtualNic
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - SOAP::SOAPString
#   key - SOAP::SOAPString
#   portgroup - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
#   port - SOAP::SOAPString
class HostVirtualNic < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :key
  attr_accessor :portgroup
  attr_accessor :spec
  attr_accessor :port

  def initialize(dynamicType = nil, dynamicProperty = [], device = nil, key = nil, portgroup = nil, spec = nil, port = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @key = key
    @portgroup = portgroup
    @spec = spec
    @port = port
  end
end

# {urn:vim25}HostVirtualNicConnection
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   portgroup - SOAP::SOAPString
#   dvPort - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnection
class HostVirtualNicConnection < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :portgroup
  attr_accessor :dvPort

  def initialize(dynamicType = nil, dynamicProperty = [], portgroup = nil, dvPort = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @portgroup = portgroup
    @dvPort = dvPort
  end
end

# {urn:vim25}HostVirtualNicManagerNicTypeSelection
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicConnection
#   nicType - SOAP::SOAPString
class HostVirtualNicManagerNicTypeSelection < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vnic
  attr_accessor :nicType

  def initialize(dynamicType = nil, dynamicProperty = [], vnic = nil, nicType = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vnic = vnic
    @nicType = nicType
  end
end

# {urn:vim25}VirtualNicManagerNetConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   nicType - SOAP::SOAPString
#   multiSelectAllowed - SOAP::SOAPBoolean
#   candidateVnic - Bosh::Director::CloudProviders::VSphere::HostVirtualNic
#   selectedVnic - SOAP::SOAPString
class VirtualNicManagerNetConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :nicType
  attr_accessor :multiSelectAllowed
  attr_accessor :candidateVnic
  attr_accessor :selectedVnic

  def initialize(dynamicType = nil, dynamicProperty = [], nicType = nil, multiSelectAllowed = nil, candidateVnic = [], selectedVnic = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @nicType = nicType
    @multiSelectAllowed = multiSelectAllowed
    @candidateVnic = candidateVnic
    @selectedVnic = selectedVnic
  end
end

# {urn:vim25}HostVirtualNicManagerInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   netConfig - Bosh::Director::CloudProviders::VSphere::VirtualNicManagerNetConfig
class HostVirtualNicManagerInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :netConfig

  def initialize(dynamicType = nil, dynamicProperty = [], netConfig = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @netConfig = netConfig
  end
end

# {urn:vim25}HostVirtualSwitchBridge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class HostVirtualSwitchBridge < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}HostVirtualSwitchAutoBridge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   excludedNicDevice - SOAP::SOAPString
class HostVirtualSwitchAutoBridge < HostVirtualSwitchBridge
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :excludedNicDevice

  def initialize(dynamicType = nil, dynamicProperty = [], excludedNicDevice = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @excludedNicDevice = excludedNicDevice
  end
end

# {urn:vim25}HostVirtualSwitchSimpleBridge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   nicDevice - SOAP::SOAPString
class HostVirtualSwitchSimpleBridge < HostVirtualSwitchBridge
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :nicDevice

  def initialize(dynamicType = nil, dynamicProperty = [], nicDevice = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @nicDevice = nicDevice
  end
end

# {urn:vim25}HostVirtualSwitchBondBridge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   nicDevice - SOAP::SOAPString
#   beacon - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchBeaconConfig
#   linkDiscoveryProtocolConfig - Bosh::Director::CloudProviders::VSphere::LinkDiscoveryProtocolConfig
class HostVirtualSwitchBondBridge < HostVirtualSwitchBridge
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :nicDevice
  attr_accessor :beacon
  attr_accessor :linkDiscoveryProtocolConfig

  def initialize(dynamicType = nil, dynamicProperty = [], nicDevice = [], beacon = nil, linkDiscoveryProtocolConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @nicDevice = nicDevice
    @beacon = beacon
    @linkDiscoveryProtocolConfig = linkDiscoveryProtocolConfig
  end
end

# {urn:vim25}HostVirtualSwitchBeaconConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   interval - SOAP::SOAPInt
class HostVirtualSwitchBeaconConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :interval

  def initialize(dynamicType = nil, dynamicProperty = [], interval = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @interval = interval
  end
end

# {urn:vim25}HostVirtualSwitchSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numPorts - SOAP::SOAPInt
#   bridge - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchBridge
#   policy - Bosh::Director::CloudProviders::VSphere::HostNetworkPolicy
#   mtu - SOAP::SOAPInt
class HostVirtualSwitchSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numPorts
  attr_accessor :bridge
  attr_accessor :policy
  attr_accessor :mtu

  def initialize(dynamicType = nil, dynamicProperty = [], numPorts = nil, bridge = nil, policy = nil, mtu = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numPorts = numPorts
    @bridge = bridge
    @policy = policy
    @mtu = mtu
  end
end

# {urn:vim25}HostVirtualSwitchConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeOperation - SOAP::SOAPString
#   name - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchSpec
class HostVirtualSwitchConfig < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeOperation
  attr_accessor :name
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], changeOperation = nil, name = nil, spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeOperation = changeOperation
    @name = name
    @spec = spec
  end
end

# {urn:vim25}HostVirtualSwitch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   key - SOAP::SOAPString
#   numPorts - SOAP::SOAPInt
#   numPortsAvailable - SOAP::SOAPInt
#   mtu - SOAP::SOAPInt
#   portgroup - SOAP::SOAPString
#   pnic - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchSpec
class HostVirtualSwitch < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :key
  attr_accessor :numPorts
  attr_accessor :numPortsAvailable
  attr_accessor :mtu
  attr_accessor :portgroup
  attr_accessor :pnic
  attr_accessor :spec

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, key = nil, numPorts = nil, numPortsAvailable = nil, mtu = nil, portgroup = [], pnic = [], spec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @key = key
    @numPorts = numPorts
    @numPortsAvailable = numPortsAvailable
    @mtu = mtu
    @portgroup = portgroup
    @pnic = pnic
    @spec = spec
  end
end

# {urn:vim25}HostVmfsRescanResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class HostVmfsRescanResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :host
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], host = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @host = host
    @fault = fault
  end
end

# {urn:vim25}HostVmfsSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
#   blockSizeMb - SOAP::SOAPInt
#   majorVersion - SOAP::SOAPInt
#   volumeName - SOAP::SOAPString
class HostVmfsSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :extent
  attr_accessor :blockSizeMb
  attr_accessor :majorVersion
  attr_accessor :volumeName

  def initialize(dynamicType = nil, dynamicProperty = [], extent = nil, blockSizeMb = nil, majorVersion = nil, volumeName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @extent = extent
    @blockSizeMb = blockSizeMb
    @majorVersion = majorVersion
    @volumeName = volumeName
  end
end

# {urn:vim25}NetDhcpConfigInfoDhcpOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enable - SOAP::SOAPBoolean
#   config - Bosh::Director::CloudProviders::VSphere::KeyValue
class NetDhcpConfigInfoDhcpOptions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enable
  attr_accessor :config

  def initialize(dynamicType = nil, dynamicProperty = [], enable = nil, config = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enable = enable
    @config = config
  end
end

# {urn:vim25}NetDhcpConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipv6 - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigInfoDhcpOptions
#   ipv4 - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigInfoDhcpOptions
class NetDhcpConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipv6
  attr_accessor :ipv4

  def initialize(dynamicType = nil, dynamicProperty = [], ipv6 = nil, ipv4 = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipv6 = ipv6
    @ipv4 = ipv4
  end
end

# {urn:vim25}NetDhcpConfigSpecDhcpOptionsSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enable - SOAP::SOAPBoolean
#   config - Bosh::Director::CloudProviders::VSphere::KeyValue
#   operation - SOAP::SOAPString
class NetDhcpConfigSpecDhcpOptionsSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enable
  attr_accessor :config
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], enable = nil, config = [], operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enable = enable
    @config = config
    @operation = operation
  end
end

# {urn:vim25}NetDhcpConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipv6 - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigSpecDhcpOptionsSpec
#   ipv4 - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigSpecDhcpOptionsSpec
class NetDhcpConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipv6
  attr_accessor :ipv4

  def initialize(dynamicType = nil, dynamicProperty = [], ipv6 = nil, ipv4 = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipv6 = ipv6
    @ipv4 = ipv4
  end
end

# {urn:vim25}NetDnsConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dhcp - SOAP::SOAPBoolean
#   hostName - SOAP::SOAPString
#   domainName - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   searchDomain - SOAP::SOAPString
class NetDnsConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dhcp
  attr_accessor :hostName
  attr_accessor :domainName
  attr_accessor :ipAddress
  attr_accessor :searchDomain

  def initialize(dynamicType = nil, dynamicProperty = [], dhcp = nil, hostName = nil, domainName = nil, ipAddress = [], searchDomain = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dhcp = dhcp
    @hostName = hostName
    @domainName = domainName
    @ipAddress = ipAddress
    @searchDomain = searchDomain
  end
end

# {urn:vim25}NetDnsConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dhcp - SOAP::SOAPBoolean
#   hostName - SOAP::SOAPString
#   domainName - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   searchDomain - SOAP::SOAPString
class NetDnsConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dhcp
  attr_accessor :hostName
  attr_accessor :domainName
  attr_accessor :ipAddress
  attr_accessor :searchDomain

  def initialize(dynamicType = nil, dynamicProperty = [], dhcp = nil, hostName = nil, domainName = nil, ipAddress = [], searchDomain = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dhcp = dhcp
    @hostName = hostName
    @domainName = domainName
    @ipAddress = ipAddress
    @searchDomain = searchDomain
  end
end

# {urn:vim25}NetIpConfigInfoIpAddress
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   origin - SOAP::SOAPString
#   state - SOAP::SOAPString
#   lifetime - SOAP::SOAPDateTime
class NetIpConfigInfoIpAddress < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :prefixLength
  attr_accessor :origin
  attr_accessor :state
  attr_accessor :lifetime

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, prefixLength = nil, origin = nil, state = nil, lifetime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @prefixLength = prefixLength
    @origin = origin
    @state = state
    @lifetime = lifetime
  end
end

# {urn:vim25}NetIpConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - Bosh::Director::CloudProviders::VSphere::NetIpConfigInfoIpAddress
#   dhcp - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigInfo
#   autoConfigurationEnabled - SOAP::SOAPBoolean
class NetIpConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :dhcp
  attr_accessor :autoConfigurationEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = [], dhcp = nil, autoConfigurationEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @dhcp = dhcp
    @autoConfigurationEnabled = autoConfigurationEnabled
  end
end

# {urn:vim25}NetIpConfigSpecIpAddressSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   operation - SOAP::SOAPString
class NetIpConfigSpecIpAddressSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :prefixLength
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, prefixLength = nil, operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @prefixLength = prefixLength
    @operation = operation
  end
end

# {urn:vim25}NetIpConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - Bosh::Director::CloudProviders::VSphere::NetIpConfigSpecIpAddressSpec
#   dhcp - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigSpec
#   autoConfigurationEnabled - SOAP::SOAPBoolean
class NetIpConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :dhcp
  attr_accessor :autoConfigurationEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = [], dhcp = nil, autoConfigurationEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @dhcp = dhcp
    @autoConfigurationEnabled = autoConfigurationEnabled
  end
end

# {urn:vim25}NetIpRouteConfigInfoGateway
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   device - SOAP::SOAPString
class NetIpRouteConfigInfoGateway < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @device = device
  end
end

# {urn:vim25}NetIpRouteConfigInfoIpRoute
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   gateway - Bosh::Director::CloudProviders::VSphere::NetIpRouteConfigInfoGateway
class NetIpRouteConfigInfoIpRoute < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :prefixLength
  attr_accessor :gateway

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, prefixLength = nil, gateway = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @prefixLength = prefixLength
    @gateway = gateway
  end
end

# {urn:vim25}NetIpRouteConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipRoute - Bosh::Director::CloudProviders::VSphere::NetIpRouteConfigInfoIpRoute
class NetIpRouteConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipRoute

  def initialize(dynamicType = nil, dynamicProperty = [], ipRoute = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipRoute = ipRoute
  end
end

# {urn:vim25}NetIpRouteConfigSpecGatewaySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   device - SOAP::SOAPString
class NetIpRouteConfigSpecGatewaySpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @device = device
  end
end

# {urn:vim25}NetIpRouteConfigSpecIpRouteSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - SOAP::SOAPString
#   prefixLength - SOAP::SOAPInt
#   gateway - Bosh::Director::CloudProviders::VSphere::NetIpRouteConfigSpecGatewaySpec
#   operation - SOAP::SOAPString
class NetIpRouteConfigSpecIpRouteSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :prefixLength
  attr_accessor :gateway
  attr_accessor :operation

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, prefixLength = nil, gateway = nil, operation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @prefixLength = prefixLength
    @gateway = gateway
    @operation = operation
  end
end

# {urn:vim25}NetIpRouteConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipRoute - Bosh::Director::CloudProviders::VSphere::NetIpRouteConfigSpecIpRouteSpec
class NetIpRouteConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipRoute

  def initialize(dynamicType = nil, dynamicProperty = [], ipRoute = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipRoute = ipRoute
  end
end

# {urn:vim25}NetIpStackInfoNetToMedia
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   physicalAddress - SOAP::SOAPString
#   device - SOAP::SOAPString
#   type - SOAP::SOAPString
class NetIpStackInfoNetToMedia < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :physicalAddress
  attr_accessor :device
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, physicalAddress = nil, device = nil, type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @physicalAddress = physicalAddress
    @device = device
    @type = type
  end
end

# {urn:vim25}NetIpStackInfoDefaultRouter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   device - SOAP::SOAPString
#   lifetime - SOAP::SOAPDateTime
#   preference - SOAP::SOAPString
class NetIpStackInfoDefaultRouter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :device
  attr_accessor :lifetime
  attr_accessor :preference

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, device = nil, lifetime = nil, preference = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @device = device
    @lifetime = lifetime
    @preference = preference
  end
end

# {urn:vim25}NetIpStackInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   neighbor - Bosh::Director::CloudProviders::VSphere::NetIpStackInfoNetToMedia
#   defaultRouter - Bosh::Director::CloudProviders::VSphere::NetIpStackInfoDefaultRouter
class NetIpStackInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :neighbor
  attr_accessor :defaultRouter

  def initialize(dynamicType = nil, dynamicProperty = [], neighbor = [], defaultRouter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @neighbor = neighbor
    @defaultRouter = defaultRouter
  end
end

# {urn:vim25}NetBIOSConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   mode - SOAP::SOAPString
class NetBIOSConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :mode

  def initialize(dynamicType = nil, dynamicProperty = [], mode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @mode = mode
  end
end

# {urn:vim25}WinNetBIOSConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   mode - SOAP::SOAPString
#   primaryWINS - SOAP::SOAPString
#   secondaryWINS - SOAP::SOAPString
class WinNetBIOSConfigInfo < NetBIOSConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :mode
  attr_accessor :primaryWINS
  attr_accessor :secondaryWINS

  def initialize(dynamicType = nil, dynamicProperty = [], mode = nil, primaryWINS = nil, secondaryWINS = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @mode = mode
    @primaryWINS = primaryWINS
    @secondaryWINS = secondaryWINS
  end
end

# {urn:vim25}ArrayUpdateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
class ArrayUpdateSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
  end
end

# {urn:vim25}ClusterDasVmConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::ClusterDasVmConfigInfo
class ClusterDasVmConfigSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}ClusterDrsVmConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::ClusterDrsVmConfigInfo
class ClusterDrsVmConfigSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}ClusterRuleSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::ClusterRuleInfo
class ClusterRuleSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}ClusterDpmHostConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::ClusterDpmHostConfigInfo
class ClusterDpmHostConfigSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}ClusterGroupSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::ClusterGroupInfo
class ClusterGroupSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}VAppProductSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
class VAppProductSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}VAppPropertySpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::VAppPropertyInfo
class VAppPropertySpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}VAppOvfSectionSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::VAppOvfSectionInfo
class VAppOvfSectionSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}VirtualMachineCpuIdInfoSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::ArrayUpdateOperation
#   removeKey - (any)
#   info - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
class VirtualMachineCpuIdInfoSpec < ArrayUpdateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :removeKey
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, removeKey = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @removeKey = removeKey
    @info = info
  end
end

# {urn:vim25}OptionType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
class OptionType < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
  end
end

# {urn:vim25}BoolOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   supported - SOAP::SOAPBoolean
#   defaultValue - SOAP::SOAPBoolean
class BoolOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :supported
  attr_accessor :defaultValue

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, supported = nil, defaultValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @supported = supported
    @defaultValue = defaultValue
  end
end

# {urn:vim25}ChoiceOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   choiceInfo - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   defaultIndex - SOAP::SOAPInt
class ChoiceOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :choiceInfo
  attr_accessor :defaultIndex

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, choiceInfo = [], defaultIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @choiceInfo = choiceInfo
    @defaultIndex = defaultIndex
  end
end

# {urn:vim25}FloatOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   min - SOAP::SOAPFloat
#   max - SOAP::SOAPFloat
#   defaultValue - SOAP::SOAPFloat
class FloatOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :min
  attr_accessor :max
  attr_accessor :defaultValue

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, min = nil, max = nil, defaultValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @min = min
    @max = max
    @defaultValue = defaultValue
  end
end

# {urn:vim25}IntOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   min - SOAP::SOAPInt
#   max - SOAP::SOAPInt
#   defaultValue - SOAP::SOAPInt
class IntOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :min
  attr_accessor :max
  attr_accessor :defaultValue

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, min = nil, max = nil, defaultValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @min = min
    @max = max
    @defaultValue = defaultValue
  end
end

# {urn:vim25}LongOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   min - SOAP::SOAPLong
#   max - SOAP::SOAPLong
#   defaultValue - SOAP::SOAPLong
class LongOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :min
  attr_accessor :max
  attr_accessor :defaultValue

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, min = nil, max = nil, defaultValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @min = min
    @max = max
    @defaultValue = defaultValue
  end
end

# {urn:vim25}StringOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   valueIsReadonly - SOAP::SOAPBoolean
#   defaultValue - SOAP::SOAPString
#   validCharacters - SOAP::SOAPString
class StringOption < OptionType
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :valueIsReadonly
  attr_accessor :defaultValue
  attr_accessor :validCharacters

  def initialize(dynamicType = nil, dynamicProperty = [], valueIsReadonly = nil, defaultValue = nil, validCharacters = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @valueIsReadonly = valueIsReadonly
    @defaultValue = defaultValue
    @validCharacters = validCharacters
  end
end

# {urn:vim25}OptionValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - (any)
class OptionValue < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
  end
end

# {urn:vim25}HostInternetScsiHbaParamValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   value - (any)
#   isInherited - SOAP::SOAPBoolean
class HostInternetScsiHbaParamValue < OptionValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :value
  attr_accessor :isInherited

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, value = nil, isInherited = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @value = value
    @isInherited = isInherited
  end
end

# {urn:vim25}ApplyProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class ApplyProfile < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}HostApplyProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   memory - Bosh::Director::CloudProviders::VSphere::HostMemoryProfile
#   storage - Bosh::Director::CloudProviders::VSphere::StorageProfile
#   network - Bosh::Director::CloudProviders::VSphere::NetworkProfile
#   datetime - Bosh::Director::CloudProviders::VSphere::DateTimeProfile
#   firewall - Bosh::Director::CloudProviders::VSphere::FirewallProfile
#   security - Bosh::Director::CloudProviders::VSphere::SecurityProfile
#   service - Bosh::Director::CloudProviders::VSphere::ServiceProfile
#   option - Bosh::Director::CloudProviders::VSphere::OptionProfile
#   userAccount - Bosh::Director::CloudProviders::VSphere::UserProfile
#   usergroupAccount - Bosh::Director::CloudProviders::VSphere::UserGroupProfile
#   authentication - Bosh::Director::CloudProviders::VSphere::AuthenticationProfile
class HostApplyProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :memory
  attr_accessor :storage
  attr_accessor :network
  attr_accessor :datetime
  attr_accessor :firewall
  attr_accessor :security
  attr_accessor :service
  attr_accessor :option
  attr_accessor :userAccount
  attr_accessor :usergroupAccount
  attr_accessor :authentication

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], memory = nil, storage = nil, network = nil, datetime = nil, firewall = nil, security = nil, service = [], option = [], userAccount = [], usergroupAccount = [], authentication = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @memory = memory
    @storage = storage
    @network = network
    @datetime = datetime
    @firewall = firewall
    @security = security
    @service = service
    @option = option
    @userAccount = userAccount
    @usergroupAccount = usergroupAccount
    @authentication = authentication
  end
end

# {urn:vim25}PhysicalNicProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class PhysicalNicProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}HostMemoryProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class HostMemoryProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}UserProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class UserProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}UserGroupProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class UserGroupProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}SecurityProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   permission - Bosh::Director::CloudProviders::VSphere::PermissionProfile
class SecurityProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :permission

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], permission = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @permission = permission
  end
end

# {urn:vim25}OptionProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class OptionProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}DateTimeProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class DateTimeProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}ServiceProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class ServiceProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}FirewallProfileRulesetProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class FirewallProfileRulesetProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}FirewallProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   ruleset - Bosh::Director::CloudProviders::VSphere::FirewallProfileRulesetProfile
class FirewallProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :ruleset

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], ruleset = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @ruleset = ruleset
  end
end

# {urn:vim25}NasStorageProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class NasStorageProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}StorageProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   nasStorage - Bosh::Director::CloudProviders::VSphere::NasStorageProfile
class StorageProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :nasStorage

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], nasStorage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @nasStorage = nasStorage
  end
end

# {urn:vim25}NetworkProfileDnsConfigProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class NetworkProfileDnsConfigProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}NetworkProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   vswitch - Bosh::Director::CloudProviders::VSphere::VirtualSwitchProfile
#   vmPortGroup - Bosh::Director::CloudProviders::VSphere::VmPortGroupProfile
#   hostPortGroup - Bosh::Director::CloudProviders::VSphere::HostPortGroupProfile
#   serviceConsolePortGroup - Bosh::Director::CloudProviders::VSphere::ServiceConsolePortGroupProfile
#   dnsConfig - Bosh::Director::CloudProviders::VSphere::NetworkProfileDnsConfigProfile
#   ipRouteConfig - Bosh::Director::CloudProviders::VSphere::IpRouteProfile
#   consoleIpRouteConfig - Bosh::Director::CloudProviders::VSphere::IpRouteProfile
#   pnic - Bosh::Director::CloudProviders::VSphere::PhysicalNicProfile
#   dvswitch - Bosh::Director::CloudProviders::VSphere::DvsProfile
#   dvsServiceConsoleNic - Bosh::Director::CloudProviders::VSphere::DvsServiceConsoleVNicProfile
#   dvsHostNic - Bosh::Director::CloudProviders::VSphere::DvsHostVNicProfile
class NetworkProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :vswitch
  attr_accessor :vmPortGroup
  attr_accessor :hostPortGroup
  attr_accessor :serviceConsolePortGroup
  attr_accessor :dnsConfig
  attr_accessor :ipRouteConfig
  attr_accessor :consoleIpRouteConfig
  attr_accessor :pnic
  attr_accessor :dvswitch
  attr_accessor :dvsServiceConsoleNic
  attr_accessor :dvsHostNic

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], vswitch = [], vmPortGroup = [], hostPortGroup = [], serviceConsolePortGroup = [], dnsConfig = nil, ipRouteConfig = nil, consoleIpRouteConfig = nil, pnic = [], dvswitch = [], dvsServiceConsoleNic = [], dvsHostNic = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @vswitch = vswitch
    @vmPortGroup = vmPortGroup
    @hostPortGroup = hostPortGroup
    @serviceConsolePortGroup = serviceConsolePortGroup
    @dnsConfig = dnsConfig
    @ipRouteConfig = ipRouteConfig
    @consoleIpRouteConfig = consoleIpRouteConfig
    @pnic = pnic
    @dvswitch = dvswitch
    @dvsServiceConsoleNic = dvsServiceConsoleNic
    @dvsHostNic = dvsHostNic
  end
end

# {urn:vim25}DvsVNicProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   ipConfig - Bosh::Director::CloudProviders::VSphere::IpAddressProfile
class DvsVNicProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @ipConfig = ipConfig
  end
end

# {urn:vim25}DvsServiceConsoleVNicProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   ipConfig - Bosh::Director::CloudProviders::VSphere::IpAddressProfile
class DvsServiceConsoleVNicProfile < DvsVNicProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @ipConfig = ipConfig
  end
end

# {urn:vim25}DvsHostVNicProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   ipConfig - Bosh::Director::CloudProviders::VSphere::IpAddressProfile
class DvsHostVNicProfile < DvsVNicProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @ipConfig = ipConfig
  end
end

# {urn:vim25}DvsProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   uplink - Bosh::Director::CloudProviders::VSphere::PnicUplinkProfile
class DvsProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :uplink

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, uplink = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @uplink = uplink
  end
end

# {urn:vim25}PnicUplinkProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class PnicUplinkProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}IpRouteProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   staticRoute - Bosh::Director::CloudProviders::VSphere::StaticRouteProfile
class IpRouteProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :staticRoute

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], staticRoute = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @staticRoute = staticRoute
  end
end

# {urn:vim25}StaticRouteProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class StaticRouteProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}LinkProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class LinkProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}NumPortsProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class NumPortsProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}VirtualSwitchProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   link - Bosh::Director::CloudProviders::VSphere::LinkProfile
#   numPorts - Bosh::Director::CloudProviders::VSphere::NumPortsProfile
#   networkPolicy - Bosh::Director::CloudProviders::VSphere::NetworkPolicyProfile
class VirtualSwitchProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :link
  attr_accessor :numPorts
  attr_accessor :networkPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, link = nil, numPorts = nil, networkPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @link = link
    @numPorts = numPorts
    @networkPolicy = networkPolicy
  end
end

# {urn:vim25}VlanProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class VlanProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}VirtualSwitchSelectionProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class VirtualSwitchSelectionProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}PortGroupProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   vlan - Bosh::Director::CloudProviders::VSphere::VlanProfile
#   vswitch - Bosh::Director::CloudProviders::VSphere::VirtualSwitchSelectionProfile
#   networkPolicy - Bosh::Director::CloudProviders::VSphere::NetworkPolicyProfile
class PortGroupProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :vlan
  attr_accessor :vswitch
  attr_accessor :networkPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, vlan = nil, vswitch = nil, networkPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @vlan = vlan
    @vswitch = vswitch
    @networkPolicy = networkPolicy
  end
end

# {urn:vim25}VmPortGroupProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   vlan - Bosh::Director::CloudProviders::VSphere::VlanProfile
#   vswitch - Bosh::Director::CloudProviders::VSphere::VirtualSwitchSelectionProfile
#   networkPolicy - Bosh::Director::CloudProviders::VSphere::NetworkPolicyProfile
class VmPortGroupProfile < PortGroupProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :vlan
  attr_accessor :vswitch
  attr_accessor :networkPolicy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, vlan = nil, vswitch = nil, networkPolicy = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @vlan = vlan
    @vswitch = vswitch
    @networkPolicy = networkPolicy
  end
end

# {urn:vim25}HostPortGroupProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   vlan - Bosh::Director::CloudProviders::VSphere::VlanProfile
#   vswitch - Bosh::Director::CloudProviders::VSphere::VirtualSwitchSelectionProfile
#   networkPolicy - Bosh::Director::CloudProviders::VSphere::NetworkPolicyProfile
#   ipConfig - Bosh::Director::CloudProviders::VSphere::IpAddressProfile
class HostPortGroupProfile < PortGroupProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :vlan
  attr_accessor :vswitch
  attr_accessor :networkPolicy
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, vlan = nil, vswitch = nil, networkPolicy = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @vlan = vlan
    @vswitch = vswitch
    @networkPolicy = networkPolicy
    @ipConfig = ipConfig
  end
end

# {urn:vim25}ServiceConsolePortGroupProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
#   name - SOAP::SOAPString
#   vlan - Bosh::Director::CloudProviders::VSphere::VlanProfile
#   vswitch - Bosh::Director::CloudProviders::VSphere::VirtualSwitchSelectionProfile
#   networkPolicy - Bosh::Director::CloudProviders::VSphere::NetworkPolicyProfile
#   ipConfig - Bosh::Director::CloudProviders::VSphere::IpAddressProfile
class ServiceConsolePortGroupProfile < PortGroupProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key
  attr_accessor :name
  attr_accessor :vlan
  attr_accessor :vswitch
  attr_accessor :networkPolicy
  attr_accessor :ipConfig

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil, name = nil, vlan = nil, vswitch = nil, networkPolicy = nil, ipConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
    @name = name
    @vlan = vlan
    @vswitch = vswitch
    @networkPolicy = networkPolicy
    @ipConfig = ipConfig
  end
end

# {urn:vim25}NetworkPolicyProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class NetworkPolicyProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}IpAddressProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class IpAddressProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}AuthenticationProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   activeDirectory - Bosh::Director::CloudProviders::VSphere::ActiveDirectoryProfile
class AuthenticationProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :activeDirectory

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], activeDirectory = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @activeDirectory = activeDirectory
  end
end

# {urn:vim25}ActiveDirectoryProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
class ActiveDirectoryProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
  end
end

# {urn:vim25}PermissionProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   policy - Bosh::Director::CloudProviders::VSphere::ProfilePolicy
#   key - SOAP::SOAPString
class PermissionProfile < ApplyProfile
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :policy
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, policy = [], key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @policy = policy
    @key = key
  end
end

# {urn:vim25}ComplianceLocator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expressionName - SOAP::SOAPString
#   applyPath - Bosh::Director::CloudProviders::VSphere::ProfilePropertyPath
class ComplianceLocator < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expressionName
  attr_accessor :applyPath

  def initialize(dynamicType = nil, dynamicProperty = [], expressionName = nil, applyPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expressionName = expressionName
    @applyPath = applyPath
  end
end

# {urn:vim25}ComplianceProfile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expression - Bosh::Director::CloudProviders::VSphere::ProfileExpression
#   rootExpression - SOAP::SOAPString
class ComplianceProfile < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expression
  attr_accessor :rootExpression

  def initialize(dynamicType = nil, dynamicProperty = [], expression = [], rootExpression = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expression = expression
    @rootExpression = rootExpression
  end
end

# {urn:vim25}ComplianceFailure
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   failureType - SOAP::SOAPString
#   message - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   expressionName - SOAP::SOAPString
class ComplianceFailure < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :failureType
  attr_accessor :message
  attr_accessor :expressionName

  def initialize(dynamicType = nil, dynamicProperty = [], failureType = nil, message = nil, expressionName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @failureType = failureType
    @message = message
    @expressionName = expressionName
  end
end

# {urn:vim25}ComplianceResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   profile - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   complianceStatus - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   checkTime - SOAP::SOAPDateTime
#   failure - Bosh::Director::CloudProviders::VSphere::ComplianceFailure
class ComplianceResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :profile
  attr_accessor :complianceStatus
  attr_accessor :entity
  attr_accessor :checkTime
  attr_accessor :failure

  def initialize(dynamicType = nil, dynamicProperty = [], profile = nil, complianceStatus = nil, entity = nil, checkTime = nil, failure = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @profile = profile
    @complianceStatus = complianceStatus
    @entity = entity
    @checkTime = checkTime
    @failure = failure
  end
end

# {urn:vim25}ProfileDeferredPolicyOptionParameter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   inputPath - Bosh::Director::CloudProviders::VSphere::ProfilePropertyPath
#   parameter - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class ProfileDeferredPolicyOptionParameter < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :inputPath
  attr_accessor :parameter

  def initialize(dynamicType = nil, dynamicProperty = [], inputPath = nil, parameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @inputPath = inputPath
    @parameter = parameter
  end
end

# {urn:vim25}ProfileExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   displayName - SOAP::SOAPString
#   negated - SOAP::SOAPBoolean
class ProfileExpression < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :displayName
  attr_accessor :negated

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, displayName = nil, negated = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @displayName = displayName
    @negated = negated
  end
end

# {urn:vim25}ProfileSimpleExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   displayName - SOAP::SOAPString
#   negated - SOAP::SOAPBoolean
#   expressionType - SOAP::SOAPString
#   parameter - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class ProfileSimpleExpression < ProfileExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :displayName
  attr_accessor :negated
  attr_accessor :expressionType
  attr_accessor :parameter

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, displayName = nil, negated = nil, expressionType = nil, parameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @displayName = displayName
    @negated = negated
    @expressionType = expressionType
    @parameter = parameter
  end
end

# {urn:vim25}ProfileCompositeExpression
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   displayName - SOAP::SOAPString
#   negated - SOAP::SOAPBoolean
#   operator - SOAP::SOAPString
#   expressionName - SOAP::SOAPString
class ProfileCompositeExpression < ProfileExpression
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :displayName
  attr_accessor :negated
  attr_accessor :operator
  attr_accessor :expressionName

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, displayName = nil, negated = nil, operator = nil, expressionName = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @displayName = displayName
    @negated = negated
    @operator = operator
    @expressionName = expressionName
  end
end

# {urn:vim25}ProfileExpressionMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   expressionId - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   parameter - Bosh::Director::CloudProviders::VSphere::ProfileParameterMetadata
class ProfileExpressionMetadata < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :expressionId
  attr_accessor :parameter

  def initialize(dynamicType = nil, dynamicProperty = [], expressionId = nil, parameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @expressionId = expressionId
    @parameter = parameter
  end
end

# {urn:vim25}ProfileParameterMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   type - SOAP::SOAPString
#   optional - SOAP::SOAPBoolean
#   defaultValue - (any)
class ProfileParameterMetadata < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :type
  attr_accessor :optional
  attr_accessor :defaultValue

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, type = nil, optional = nil, defaultValue = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @type = type
    @optional = optional
    @defaultValue = defaultValue
  end
end

# {urn:vim25}ProfilePolicy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   policyOption - Bosh::Director::CloudProviders::VSphere::PolicyOption
class ProfilePolicy < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :policyOption

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, policyOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @policyOption = policyOption
  end
end

# {urn:vim25}ProfilePolicyOptionMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   parameter - Bosh::Director::CloudProviders::VSphere::ProfileParameterMetadata
class ProfilePolicyOptionMetadata < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :parameter

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, parameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @parameter = parameter
  end
end

# {urn:vim25}ProfileCompositePolicyOptionMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   parameter - Bosh::Director::CloudProviders::VSphere::ProfileParameterMetadata
#   option - SOAP::SOAPString
class ProfileCompositePolicyOptionMetadata < ProfilePolicyOptionMetadata
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :parameter
  attr_accessor :option

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, parameter = [], option = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @parameter = parameter
    @option = option
  end
end

# {urn:vim25}UserInputRequiredParameterMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   parameter - Bosh::Director::CloudProviders::VSphere::ProfileParameterMetadata
#   userInputParameter - Bosh::Director::CloudProviders::VSphere::ProfileParameterMetadata
class UserInputRequiredParameterMetadata < ProfilePolicyOptionMetadata
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :parameter
  attr_accessor :userInputParameter

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, parameter = [], userInputParameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @parameter = parameter
    @userInputParameter = userInputParameter
  end
end

# {urn:vim25}ProfilePolicyMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   possibleOption - Bosh::Director::CloudProviders::VSphere::ProfilePolicyOptionMetadata
class ProfilePolicyMetadata < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :possibleOption

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, possibleOption = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @possibleOption = possibleOption
  end
end

# {urn:vim25}PolicyOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   parameter - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class PolicyOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :parameter

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, parameter = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @parameter = parameter
  end
end

# {urn:vim25}CompositePolicyOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   parameter - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
#   option - Bosh::Director::CloudProviders::VSphere::PolicyOption
class CompositePolicyOption < PolicyOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :parameter
  attr_accessor :option

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, parameter = [], option = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @parameter = parameter
    @option = option
  end
end

# {urn:vim25}ProfileCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class ProfileCreateSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
  end
end

# {urn:vim25}ProfileSerializedCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   profileConfigString - SOAP::SOAPString
class ProfileSerializedCreateSpec < ProfileCreateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :profileConfigString

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, profileConfigString = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @profileConfigString = profileConfigString
  end
end

# {urn:vim25}ClusterProfileCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class ClusterProfileCreateSpec < ProfileCreateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
  end
end

# {urn:vim25}ClusterProfileConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class ClusterProfileConfigSpec < ClusterProfileCreateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
  end
end

# {urn:vim25}ClusterProfileCompleteConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   complyProfile - Bosh::Director::CloudProviders::VSphere::ComplianceProfile
class ClusterProfileCompleteConfigSpec < ClusterProfileConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :complyProfile

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, complyProfile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @complyProfile = complyProfile
  end
end

# {urn:vim25}ClusterProfileConfigServiceCreateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   serviceType - SOAP::SOAPString
class ClusterProfileConfigServiceCreateSpec < ClusterProfileConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :serviceType

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, serviceType = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @serviceType = serviceType
  end
end

# {urn:vim25}HostProfileConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class HostProfileConfigSpec < ProfileCreateSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
  end
end

# {urn:vim25}HostProfileCompleteConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   applyProfile - Bosh::Director::CloudProviders::VSphere::HostApplyProfile
#   customComplyProfile - Bosh::Director::CloudProviders::VSphere::ComplianceProfile
#   disabledExpressionListChanged - SOAP::SOAPBoolean
#   disabledExpressionList - SOAP::SOAPString
class HostProfileCompleteConfigSpec < HostProfileConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :applyProfile
  attr_accessor :customComplyProfile
  attr_accessor :disabledExpressionListChanged
  attr_accessor :disabledExpressionList

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, applyProfile = nil, customComplyProfile = nil, disabledExpressionListChanged = nil, disabledExpressionList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @applyProfile = applyProfile
    @customComplyProfile = customComplyProfile
    @disabledExpressionListChanged = disabledExpressionListChanged
    @disabledExpressionList = disabledExpressionList
  end
end

# {urn:vim25}HostProfileHostBasedConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HostProfileHostBasedConfigSpec < HostProfileConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @host = host
  end
end

# {urn:vim25}ProfileConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
class ProfileConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
  end
end

# {urn:vim25}ClusterProfileConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   complyProfile - Bosh::Director::CloudProviders::VSphere::ComplianceProfile
class ClusterProfileConfigInfo < ProfileConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :complyProfile

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, complyProfile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @complyProfile = complyProfile
  end
end

# {urn:vim25}HostProfileConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   applyProfile - Bosh::Director::CloudProviders::VSphere::HostApplyProfile
#   defaultComplyProfile - Bosh::Director::CloudProviders::VSphere::ComplianceProfile
#   defaultComplyLocator - Bosh::Director::CloudProviders::VSphere::ComplianceLocator
#   customComplyProfile - Bosh::Director::CloudProviders::VSphere::ComplianceProfile
#   disabledExpressionList - SOAP::SOAPString
class HostProfileConfigInfo < ProfileConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :annotation
  attr_accessor :enabled
  attr_accessor :applyProfile
  attr_accessor :defaultComplyProfile
  attr_accessor :defaultComplyLocator
  attr_accessor :customComplyProfile
  attr_accessor :disabledExpressionList

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, annotation = nil, enabled = nil, applyProfile = nil, defaultComplyProfile = nil, defaultComplyLocator = [], customComplyProfile = nil, disabledExpressionList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @annotation = annotation
    @enabled = enabled
    @applyProfile = applyProfile
    @defaultComplyProfile = defaultComplyProfile
    @defaultComplyLocator = defaultComplyLocator
    @customComplyProfile = customComplyProfile
    @disabledExpressionList = disabledExpressionList
  end
end

# {urn:vim25}ProfileDescriptionSection
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   description - Bosh::Director::CloudProviders::VSphere::ExtendedElementDescription
#   message - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ProfileDescriptionSection < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :description
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], description = nil, message = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @description = description
    @message = message
  end
end

# {urn:vim25}ProfileDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   section - Bosh::Director::CloudProviders::VSphere::ProfileDescriptionSection
class ProfileDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :section

  def initialize(dynamicType = nil, dynamicProperty = [], section = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @section = section
  end
end

# {urn:vim25}ProfileMetadata
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   description - Bosh::Director::CloudProviders::VSphere::ExtendedDescription
class ProfileMetadata < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @description = description
  end
end

# {urn:vim25}ProfilePropertyPath
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   profilePath - SOAP::SOAPString
#   policyId - SOAP::SOAPString
class ProfilePropertyPath < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :profilePath
  attr_accessor :policyId

  def initialize(dynamicType = nil, dynamicProperty = [], profilePath = nil, policyId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @profilePath = profilePath
    @policyId = policyId
  end
end

# {urn:vim25}ProfileExecuteError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   path - Bosh::Director::CloudProviders::VSphere::ProfilePropertyPath
#   message - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ProfileExecuteError < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :path
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], path = nil, message = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @path = path
    @message = message
  end
end

# {urn:vim25}ProfileExecuteResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   status - SOAP::SOAPString
#   configSpec - Bosh::Director::CloudProviders::VSphere::HostConfigSpec
#   inapplicablePath - SOAP::SOAPString
#   requireInput - Bosh::Director::CloudProviders::VSphere::ProfileDeferredPolicyOptionParameter
#   error - Bosh::Director::CloudProviders::VSphere::ProfileExecuteError
class ProfileExecuteResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :status
  attr_accessor :configSpec
  attr_accessor :inapplicablePath
  attr_accessor :requireInput
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], status = nil, configSpec = nil, inapplicablePath = [], requireInput = [], error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @status = status
    @configSpec = configSpec
    @inapplicablePath = inapplicablePath
    @requireInput = requireInput
    @error = error
  end
end

# {urn:vim25}HostProfileManagerConfigTaskList
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configSpec - Bosh::Director::CloudProviders::VSphere::HostConfigSpec
#   taskDescription - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostProfileManagerConfigTaskList < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configSpec
  attr_accessor :taskDescription

  def initialize(dynamicType = nil, dynamicProperty = [], configSpec = nil, taskDescription = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configSpec = configSpec
    @taskDescription = taskDescription
  end
end

# {urn:vim25}ScheduledTaskDescription
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   action - Bosh::Director::CloudProviders::VSphere::TypeDescription
#   schedulerInfo - Bosh::Director::CloudProviders::VSphere::ScheduledTaskDetail
#   state - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   dayOfWeek - Bosh::Director::CloudProviders::VSphere::ElementDescription
#   weekOfMonth - Bosh::Director::CloudProviders::VSphere::ElementDescription
class ScheduledTaskDescription < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :action
  attr_accessor :schedulerInfo
  attr_accessor :state
  attr_accessor :dayOfWeek
  attr_accessor :weekOfMonth

  def initialize(dynamicType = nil, dynamicProperty = [], action = [], schedulerInfo = [], state = [], dayOfWeek = [], weekOfMonth = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @action = action
    @schedulerInfo = schedulerInfo
    @state = state
    @dayOfWeek = dayOfWeek
    @weekOfMonth = weekOfMonth
  end
end

# {urn:vim25}TaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
class TaskScheduler < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
  end
end

# {urn:vim25}AfterStartupTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   minute - SOAP::SOAPInt
class AfterStartupTaskScheduler < TaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :minute

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, minute = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @minute = minute
  end
end

# {urn:vim25}OnceTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   runAt - SOAP::SOAPDateTime
class OnceTaskScheduler < TaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :runAt

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, runAt = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @runAt = runAt
  end
end

# {urn:vim25}RecurrentTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
class RecurrentTaskScheduler < TaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
  end
end

# {urn:vim25}HourlyTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
class HourlyTaskScheduler < RecurrentTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
  end
end

# {urn:vim25}DailyTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
#   hour - SOAP::SOAPInt
class DailyTaskScheduler < HourlyTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute
  attr_accessor :hour

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil, hour = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
    @hour = hour
  end
end

# {urn:vim25}WeeklyTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
#   hour - SOAP::SOAPInt
#   sunday - SOAP::SOAPBoolean
#   monday - SOAP::SOAPBoolean
#   tuesday - SOAP::SOAPBoolean
#   wednesday - SOAP::SOAPBoolean
#   thursday - SOAP::SOAPBoolean
#   friday - SOAP::SOAPBoolean
#   saturday - SOAP::SOAPBoolean
class WeeklyTaskScheduler < DailyTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute
  attr_accessor :hour
  attr_accessor :sunday
  attr_accessor :monday
  attr_accessor :tuesday
  attr_accessor :wednesday
  attr_accessor :thursday
  attr_accessor :friday
  attr_accessor :saturday

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil, hour = nil, sunday = nil, monday = nil, tuesday = nil, wednesday = nil, thursday = nil, friday = nil, saturday = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
    @hour = hour
    @sunday = sunday
    @monday = monday
    @tuesday = tuesday
    @wednesday = wednesday
    @thursday = thursday
    @friday = friday
    @saturday = saturday
  end
end

# {urn:vim25}MonthlyTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
#   hour - SOAP::SOAPInt
class MonthlyTaskScheduler < DailyTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute
  attr_accessor :hour

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil, hour = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
    @hour = hour
  end
end

# {urn:vim25}MonthlyByDayTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
#   hour - SOAP::SOAPInt
#   day - SOAP::SOAPInt
class MonthlyByDayTaskScheduler < MonthlyTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute
  attr_accessor :hour
  attr_accessor :day

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil, hour = nil, day = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
    @hour = hour
    @day = day
  end
end

# {urn:vim25}MonthlyByWeekdayTaskScheduler
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   activeTime - SOAP::SOAPDateTime
#   expireTime - SOAP::SOAPDateTime
#   interval - SOAP::SOAPInt
#   minute - SOAP::SOAPInt
#   hour - SOAP::SOAPInt
#   offset - Bosh::Director::CloudProviders::VSphere::WeekOfMonth
#   weekday - Bosh::Director::CloudProviders::VSphere::DayOfWeek
class MonthlyByWeekdayTaskScheduler < MonthlyTaskScheduler
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :activeTime
  attr_accessor :expireTime
  attr_accessor :interval
  attr_accessor :minute
  attr_accessor :hour
  attr_accessor :offset
  attr_accessor :weekday

  def initialize(dynamicType = nil, dynamicProperty = [], activeTime = nil, expireTime = nil, interval = nil, minute = nil, hour = nil, offset = nil, weekday = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @activeTime = activeTime
    @expireTime = expireTime
    @interval = interval
    @minute = minute
    @hour = hour
    @offset = offset
    @weekday = weekday
  end
end

# {urn:vim25}ScheduledTaskSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   scheduler - Bosh::Director::CloudProviders::VSphere::TaskScheduler
#   action - Bosh::Director::CloudProviders::VSphere::Action
#   notification - SOAP::SOAPString
class ScheduledTaskSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description
  attr_accessor :enabled
  attr_accessor :scheduler
  attr_accessor :action
  attr_accessor :notification

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil, enabled = nil, scheduler = nil, action = nil, notification = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
    @enabled = enabled
    @scheduler = scheduler
    @action = action
    @notification = notification
  end
end

# {urn:vim25}ScheduledTaskInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   enabled - SOAP::SOAPBoolean
#   scheduler - Bosh::Director::CloudProviders::VSphere::TaskScheduler
#   action - Bosh::Director::CloudProviders::VSphere::Action
#   notification - SOAP::SOAPString
#   scheduledTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   lastModifiedTime - SOAP::SOAPDateTime
#   lastModifiedUser - SOAP::SOAPString
#   nextRunTime - SOAP::SOAPDateTime
#   prevRunTime - SOAP::SOAPDateTime
#   state - Bosh::Director::CloudProviders::VSphere::TaskInfoState
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   result - (any)
#   progress - SOAP::SOAPInt
#   activeTask - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   taskObject - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ScheduledTaskInfo < ScheduledTaskSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :description
  attr_accessor :enabled
  attr_accessor :scheduler
  attr_accessor :action
  attr_accessor :notification
  attr_accessor :scheduledTask
  attr_accessor :entity
  attr_accessor :lastModifiedTime
  attr_accessor :lastModifiedUser
  attr_accessor :nextRunTime
  attr_accessor :prevRunTime
  attr_accessor :state
  attr_accessor :error
  attr_accessor :result
  attr_accessor :progress
  attr_accessor :activeTask
  attr_accessor :taskObject

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, description = nil, enabled = nil, scheduler = nil, action = nil, notification = nil, scheduledTask = nil, entity = nil, lastModifiedTime = nil, lastModifiedUser = nil, nextRunTime = nil, prevRunTime = nil, state = nil, error = nil, result = nil, progress = nil, activeTask = nil, taskObject = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @description = description
    @enabled = enabled
    @scheduler = scheduler
    @action = action
    @notification = notification
    @scheduledTask = scheduledTask
    @entity = entity
    @lastModifiedTime = lastModifiedTime
    @lastModifiedUser = lastModifiedUser
    @nextRunTime = nextRunTime
    @prevRunTime = prevRunTime
    @state = state
    @error = error
    @result = result
    @progress = progress
    @activeTask = activeTask
    @taskObject = taskObject
  end
end

# {urn:vim25}VAppCloneSpecNetworkMappingPair
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   source - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destination - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VAppCloneSpecNetworkMappingPair < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :source
  attr_accessor :destination

  def initialize(dynamicType = nil, dynamicProperty = [], source = nil, destination = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @source = source
    @destination = destination
  end
end

# {urn:vim25}VAppCloneSpecResourceMap
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   source - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   parent - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resourceSpec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   location - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VAppCloneSpecResourceMap < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :source
  attr_accessor :parent
  attr_accessor :resourceSpec
  attr_accessor :location

  def initialize(dynamicType = nil, dynamicProperty = [], source = nil, parent = nil, resourceSpec = nil, location = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @source = source
    @parent = parent
    @resourceSpec = resourceSpec
    @location = location
  end
end

# {urn:vim25}VAppCloneSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   location - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resourceSpec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   vmFolder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   networkMapping - Bosh::Director::CloudProviders::VSphere::VAppCloneSpecNetworkMappingPair
#   property - Bosh::Director::CloudProviders::VSphere::KeyValue
#   resourceMapping - Bosh::Director::CloudProviders::VSphere::VAppCloneSpecResourceMap
#   provisioning - SOAP::SOAPString
class VAppCloneSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :location
  attr_accessor :host
  attr_accessor :resourceSpec
  attr_accessor :vmFolder
  attr_accessor :networkMapping
  attr_accessor :property
  attr_accessor :resourceMapping
  attr_accessor :provisioning

  def initialize(dynamicType = nil, dynamicProperty = [], location = nil, host = nil, resourceSpec = nil, vmFolder = nil, networkMapping = [], property = [], resourceMapping = [], provisioning = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @location = location
    @host = host
    @resourceSpec = resourceSpec
    @vmFolder = vmFolder
    @networkMapping = networkMapping
    @property = property
    @resourceMapping = resourceMapping
    @provisioning = provisioning
  end
end

# {urn:vim25}VAppEntityConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   tag - SOAP::SOAPString
#   startOrder - SOAP::SOAPInt
#   startDelay - SOAP::SOAPInt
#   waitingForGuest - SOAP::SOAPBoolean
#   startAction - SOAP::SOAPString
#   stopDelay - SOAP::SOAPInt
#   stopAction - SOAP::SOAPString
#   destroyWithParent - SOAP::SOAPBoolean
class VAppEntityConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :tag
  attr_accessor :startOrder
  attr_accessor :startDelay
  attr_accessor :waitingForGuest
  attr_accessor :startAction
  attr_accessor :stopDelay
  attr_accessor :stopAction
  attr_accessor :destroyWithParent

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, tag = nil, startOrder = nil, startDelay = nil, waitingForGuest = nil, startAction = nil, stopDelay = nil, stopAction = nil, destroyWithParent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @tag = tag
    @startOrder = startOrder
    @startDelay = startDelay
    @waitingForGuest = waitingForGuest
    @startAction = startAction
    @stopDelay = stopDelay
    @stopAction = stopAction
    @destroyWithParent = destroyWithParent
  end
end

# {urn:vim25}VAppIPAssignmentInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   supportedAllocationScheme - SOAP::SOAPString
#   ipAllocationPolicy - SOAP::SOAPString
#   supportedIpProtocol - SOAP::SOAPString
#   ipProtocol - SOAP::SOAPString
class VAppIPAssignmentInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :supportedAllocationScheme
  attr_accessor :ipAllocationPolicy
  attr_accessor :supportedIpProtocol
  attr_accessor :ipProtocol

  def initialize(dynamicType = nil, dynamicProperty = [], supportedAllocationScheme = [], ipAllocationPolicy = nil, supportedIpProtocol = [], ipProtocol = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @supportedAllocationScheme = supportedAllocationScheme
    @ipAllocationPolicy = ipAllocationPolicy
    @supportedIpProtocol = supportedIpProtocol
    @ipProtocol = ipProtocol
  end
end

# {urn:vim25}IpPoolIpPoolConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   subnetAddress - SOAP::SOAPString
#   netmask - SOAP::SOAPString
#   gateway - SOAP::SOAPString
#   range - SOAP::SOAPString
#   dns - SOAP::SOAPString
#   dhcpServerAvailable - SOAP::SOAPBoolean
#   ipPoolEnabled - SOAP::SOAPBoolean
class IpPoolIpPoolConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :subnetAddress
  attr_accessor :netmask
  attr_accessor :gateway
  attr_accessor :range
  attr_accessor :dns
  attr_accessor :dhcpServerAvailable
  attr_accessor :ipPoolEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], subnetAddress = nil, netmask = nil, gateway = nil, range = nil, dns = [], dhcpServerAvailable = nil, ipPoolEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @subnetAddress = subnetAddress
    @netmask = netmask
    @gateway = gateway
    @range = range
    @dns = dns
    @dhcpServerAvailable = dhcpServerAvailable
    @ipPoolEnabled = ipPoolEnabled
  end
end

# {urn:vim25}IpPoolAssociation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   networkName - SOAP::SOAPString
class IpPoolAssociation < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :networkName

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, networkName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @networkName = networkName
  end
end

# {urn:vim25}IpPool
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   ipv4Config - Bosh::Director::CloudProviders::VSphere::IpPoolIpPoolConfigInfo
#   ipv6Config - Bosh::Director::CloudProviders::VSphere::IpPoolIpPoolConfigInfo
#   dnsDomain - SOAP::SOAPString
#   dnsSearchPath - SOAP::SOAPString
#   hostPrefix - SOAP::SOAPString
#   httpProxy - SOAP::SOAPString
#   networkAssociation - Bosh::Director::CloudProviders::VSphere::IpPoolAssociation
class IpPool < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :name
  attr_accessor :ipv4Config
  attr_accessor :ipv6Config
  attr_accessor :dnsDomain
  attr_accessor :dnsSearchPath
  attr_accessor :hostPrefix
  attr_accessor :httpProxy
  attr_accessor :networkAssociation

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, name = nil, ipv4Config = nil, ipv6Config = nil, dnsDomain = nil, dnsSearchPath = nil, hostPrefix = nil, httpProxy = nil, networkAssociation = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @name = name
    @ipv4Config = ipv4Config
    @ipv6Config = ipv6Config
    @dnsDomain = dnsDomain
    @dnsSearchPath = dnsSearchPath
    @hostPrefix = hostPrefix
    @httpProxy = httpProxy
    @networkAssociation = networkAssociation
  end
end

# {urn:vim25}VAppOvfSectionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   namespace - SOAP::SOAPString
#   type - SOAP::SOAPString
#   atEnvelopeLevel - SOAP::SOAPBoolean
#   contents - SOAP::SOAPString
class VAppOvfSectionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :namespace
  attr_accessor :type
  attr_accessor :atEnvelopeLevel
  attr_accessor :contents

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, namespace = nil, type = nil, atEnvelopeLevel = nil, contents = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @namespace = namespace
    @type = type
    @atEnvelopeLevel = atEnvelopeLevel
    @contents = contents
  end
end

# {urn:vim25}VAppProductInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   classId - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   name - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   version - SOAP::SOAPString
#   fullVersion - SOAP::SOAPString
#   vendorUrl - SOAP::SOAPString
#   productUrl - SOAP::SOAPString
#   appUrl - SOAP::SOAPString
class VAppProductInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :classId
  attr_accessor :instanceId
  attr_accessor :name
  attr_accessor :vendor
  attr_accessor :version
  attr_accessor :fullVersion
  attr_accessor :vendorUrl
  attr_accessor :productUrl
  attr_accessor :appUrl

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, classId = nil, instanceId = nil, name = nil, vendor = nil, version = nil, fullVersion = nil, vendorUrl = nil, productUrl = nil, appUrl = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @classId = classId
    @instanceId = instanceId
    @name = name
    @vendor = vendor
    @version = version
    @fullVersion = fullVersion
    @vendorUrl = vendorUrl
    @productUrl = productUrl
    @appUrl = appUrl
  end
end

# {urn:vim25}VAppPropertyInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   classId - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   userConfigurable - SOAP::SOAPBoolean
#   defaultValue - SOAP::SOAPString
#   value - SOAP::SOAPString
#   description - SOAP::SOAPString
class VAppPropertyInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :classId
  attr_accessor :instanceId
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :userConfigurable
  attr_accessor :defaultValue
  attr_accessor :value
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, classId = nil, instanceId = nil, id = nil, category = nil, label = nil, type = nil, userConfigurable = nil, defaultValue = nil, value = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @classId = classId
    @instanceId = instanceId
    @id = id
    @category = category
    @label = label
    @type = type
    @userConfigurable = userConfigurable
    @defaultValue = defaultValue
    @value = value
    @description = description
  end
end

# {urn:vim25}VmConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
#   property - Bosh::Director::CloudProviders::VSphere::VAppPropertyInfo
#   ipAssignment - Bosh::Director::CloudProviders::VSphere::VAppIPAssignmentInfo
#   eula - SOAP::SOAPString
#   ovfSection - Bosh::Director::CloudProviders::VSphere::VAppOvfSectionInfo
#   ovfEnvironmentTransport - SOAP::SOAPString
#   installBootRequired - SOAP::SOAPBoolean
#   installBootStopDelay - SOAP::SOAPInt
class VmConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :product
  attr_accessor :property
  attr_accessor :ipAssignment
  attr_accessor :eula
  attr_accessor :ovfSection
  attr_accessor :ovfEnvironmentTransport
  attr_accessor :installBootRequired
  attr_accessor :installBootStopDelay

  def initialize(dynamicType = nil, dynamicProperty = [], product = [], property = [], ipAssignment = nil, eula = [], ovfSection = [], ovfEnvironmentTransport = [], installBootRequired = nil, installBootStopDelay = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @product = product
    @property = property
    @ipAssignment = ipAssignment
    @eula = eula
    @ovfSection = ovfSection
    @ovfEnvironmentTransport = ovfEnvironmentTransport
    @installBootRequired = installBootRequired
    @installBootStopDelay = installBootStopDelay
  end
end

# {urn:vim25}VAppConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
#   property - Bosh::Director::CloudProviders::VSphere::VAppPropertyInfo
#   ipAssignment - Bosh::Director::CloudProviders::VSphere::VAppIPAssignmentInfo
#   eula - SOAP::SOAPString
#   ovfSection - Bosh::Director::CloudProviders::VSphere::VAppOvfSectionInfo
#   ovfEnvironmentTransport - SOAP::SOAPString
#   installBootRequired - SOAP::SOAPBoolean
#   installBootStopDelay - SOAP::SOAPInt
#   entityConfig - Bosh::Director::CloudProviders::VSphere::VAppEntityConfigInfo
#   annotation - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
class VAppConfigInfo < VmConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :product
  attr_accessor :property
  attr_accessor :ipAssignment
  attr_accessor :eula
  attr_accessor :ovfSection
  attr_accessor :ovfEnvironmentTransport
  attr_accessor :installBootRequired
  attr_accessor :installBootStopDelay
  attr_accessor :entityConfig
  attr_accessor :annotation
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], product = [], property = [], ipAssignment = nil, eula = [], ovfSection = [], ovfEnvironmentTransport = [], installBootRequired = nil, installBootStopDelay = nil, entityConfig = [], annotation = nil, instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @product = product
    @property = property
    @ipAssignment = ipAssignment
    @eula = eula
    @ovfSection = ovfSection
    @ovfEnvironmentTransport = ovfEnvironmentTransport
    @installBootRequired = installBootRequired
    @installBootStopDelay = installBootStopDelay
    @entityConfig = entityConfig
    @annotation = annotation
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}VmConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductSpec
#   property - Bosh::Director::CloudProviders::VSphere::VAppPropertySpec
#   ipAssignment - Bosh::Director::CloudProviders::VSphere::VAppIPAssignmentInfo
#   eula - SOAP::SOAPString
#   ovfSection - Bosh::Director::CloudProviders::VSphere::VAppOvfSectionSpec
#   ovfEnvironmentTransport - SOAP::SOAPString
#   installBootRequired - SOAP::SOAPBoolean
#   installBootStopDelay - SOAP::SOAPInt
class VmConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :product
  attr_accessor :property
  attr_accessor :ipAssignment
  attr_accessor :eula
  attr_accessor :ovfSection
  attr_accessor :ovfEnvironmentTransport
  attr_accessor :installBootRequired
  attr_accessor :installBootStopDelay

  def initialize(dynamicType = nil, dynamicProperty = [], product = [], property = [], ipAssignment = nil, eula = [], ovfSection = [], ovfEnvironmentTransport = [], installBootRequired = nil, installBootStopDelay = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @product = product
    @property = property
    @ipAssignment = ipAssignment
    @eula = eula
    @ovfSection = ovfSection
    @ovfEnvironmentTransport = ovfEnvironmentTransport
    @installBootRequired = installBootRequired
    @installBootStopDelay = installBootStopDelay
  end
end

# {urn:vim25}VAppConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductSpec
#   property - Bosh::Director::CloudProviders::VSphere::VAppPropertySpec
#   ipAssignment - Bosh::Director::CloudProviders::VSphere::VAppIPAssignmentInfo
#   eula - SOAP::SOAPString
#   ovfSection - Bosh::Director::CloudProviders::VSphere::VAppOvfSectionSpec
#   ovfEnvironmentTransport - SOAP::SOAPString
#   installBootRequired - SOAP::SOAPBoolean
#   installBootStopDelay - SOAP::SOAPInt
#   entityConfig - Bosh::Director::CloudProviders::VSphere::VAppEntityConfigInfo
#   annotation - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
class VAppConfigSpec < VmConfigSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :product
  attr_accessor :property
  attr_accessor :ipAssignment
  attr_accessor :eula
  attr_accessor :ovfSection
  attr_accessor :ovfEnvironmentTransport
  attr_accessor :installBootRequired
  attr_accessor :installBootStopDelay
  attr_accessor :entityConfig
  attr_accessor :annotation
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], product = [], property = [], ipAssignment = nil, eula = [], ovfSection = [], ovfEnvironmentTransport = [], installBootRequired = nil, installBootStopDelay = nil, entityConfig = [], annotation = nil, instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @product = product
    @property = property
    @ipAssignment = ipAssignment
    @eula = eula
    @ovfSection = ovfSection
    @ovfEnvironmentTransport = ovfEnvironmentTransport
    @installBootRequired = installBootRequired
    @installBootStopDelay = installBootStopDelay
    @entityConfig = entityConfig
    @annotation = annotation
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}VirtualMachineAffinityInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   affinitySet - SOAP::SOAPInt
class VirtualMachineAffinityInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :affinitySet

  def initialize(dynamicType = nil, dynamicProperty = [], affinitySet = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @affinitySet = affinitySet
  end
end

# {urn:vim25}VirtualMachineBootOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   bootDelay - SOAP::SOAPLong
#   enterBIOSSetup - SOAP::SOAPBoolean
#   bootRetryEnabled - SOAP::SOAPBoolean
#   bootRetryDelay - SOAP::SOAPLong
class VirtualMachineBootOptions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :bootDelay
  attr_accessor :enterBIOSSetup
  attr_accessor :bootRetryEnabled
  attr_accessor :bootRetryDelay

  def initialize(dynamicType = nil, dynamicProperty = [], bootDelay = nil, enterBIOSSetup = nil, bootRetryEnabled = nil, bootRetryDelay = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @bootDelay = bootDelay
    @enterBIOSSetup = enterBIOSSetup
    @bootRetryEnabled = bootRetryEnabled
    @bootRetryDelay = bootRetryDelay
  end
end

# {urn:vim25}VirtualMachineCapability
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   snapshotOperationsSupported - SOAP::SOAPBoolean
#   multipleSnapshotsSupported - SOAP::SOAPBoolean
#   snapshotConfigSupported - SOAP::SOAPBoolean
#   poweredOffSnapshotsSupported - SOAP::SOAPBoolean
#   memorySnapshotsSupported - SOAP::SOAPBoolean
#   revertToSnapshotSupported - SOAP::SOAPBoolean
#   quiescedSnapshotsSupported - SOAP::SOAPBoolean
#   disableSnapshotsSupported - SOAP::SOAPBoolean
#   lockSnapshotsSupported - SOAP::SOAPBoolean
#   consolePreferencesSupported - SOAP::SOAPBoolean
#   cpuFeatureMaskSupported - SOAP::SOAPBoolean
#   s1AcpiManagementSupported - SOAP::SOAPBoolean
#   settingScreenResolutionSupported - SOAP::SOAPBoolean
#   toolsAutoUpdateSupported - SOAP::SOAPBoolean
#   vmNpivWwnSupported - SOAP::SOAPBoolean
#   npivWwnOnNonRdmVmSupported - SOAP::SOAPBoolean
#   vmNpivWwnDisableSupported - SOAP::SOAPBoolean
#   vmNpivWwnUpdateSupported - SOAP::SOAPBoolean
#   swapPlacementSupported - SOAP::SOAPBoolean
#   toolsSyncTimeSupported - SOAP::SOAPBoolean
#   virtualMmuUsageSupported - SOAP::SOAPBoolean
#   diskSharesSupported - SOAP::SOAPBoolean
#   bootOptionsSupported - SOAP::SOAPBoolean
#   bootRetryOptionsSupported - SOAP::SOAPBoolean
#   settingVideoRamSizeSupported - SOAP::SOAPBoolean
#   settingDisplayTopologySupported - SOAP::SOAPBoolean
#   recordReplaySupported - SOAP::SOAPBoolean
#   changeTrackingSupported - SOAP::SOAPBoolean
class VirtualMachineCapability < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :snapshotOperationsSupported
  attr_accessor :multipleSnapshotsSupported
  attr_accessor :snapshotConfigSupported
  attr_accessor :poweredOffSnapshotsSupported
  attr_accessor :memorySnapshotsSupported
  attr_accessor :revertToSnapshotSupported
  attr_accessor :quiescedSnapshotsSupported
  attr_accessor :disableSnapshotsSupported
  attr_accessor :lockSnapshotsSupported
  attr_accessor :consolePreferencesSupported
  attr_accessor :cpuFeatureMaskSupported
  attr_accessor :s1AcpiManagementSupported
  attr_accessor :settingScreenResolutionSupported
  attr_accessor :toolsAutoUpdateSupported
  attr_accessor :vmNpivWwnSupported
  attr_accessor :npivWwnOnNonRdmVmSupported
  attr_accessor :vmNpivWwnDisableSupported
  attr_accessor :vmNpivWwnUpdateSupported
  attr_accessor :swapPlacementSupported
  attr_accessor :toolsSyncTimeSupported
  attr_accessor :virtualMmuUsageSupported
  attr_accessor :diskSharesSupported
  attr_accessor :bootOptionsSupported
  attr_accessor :bootRetryOptionsSupported
  attr_accessor :settingVideoRamSizeSupported
  attr_accessor :settingDisplayTopologySupported
  attr_accessor :recordReplaySupported
  attr_accessor :changeTrackingSupported

  def initialize(dynamicType = nil, dynamicProperty = [], snapshotOperationsSupported = nil, multipleSnapshotsSupported = nil, snapshotConfigSupported = nil, poweredOffSnapshotsSupported = nil, memorySnapshotsSupported = nil, revertToSnapshotSupported = nil, quiescedSnapshotsSupported = nil, disableSnapshotsSupported = nil, lockSnapshotsSupported = nil, consolePreferencesSupported = nil, cpuFeatureMaskSupported = nil, s1AcpiManagementSupported = nil, settingScreenResolutionSupported = nil, toolsAutoUpdateSupported = nil, vmNpivWwnSupported = nil, npivWwnOnNonRdmVmSupported = nil, vmNpivWwnDisableSupported = nil, vmNpivWwnUpdateSupported = nil, swapPlacementSupported = nil, toolsSyncTimeSupported = nil, virtualMmuUsageSupported = nil, diskSharesSupported = nil, bootOptionsSupported = nil, bootRetryOptionsSupported = nil, settingVideoRamSizeSupported = nil, settingDisplayTopologySupported = nil, recordReplaySupported = nil, changeTrackingSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @snapshotOperationsSupported = snapshotOperationsSupported
    @multipleSnapshotsSupported = multipleSnapshotsSupported
    @snapshotConfigSupported = snapshotConfigSupported
    @poweredOffSnapshotsSupported = poweredOffSnapshotsSupported
    @memorySnapshotsSupported = memorySnapshotsSupported
    @revertToSnapshotSupported = revertToSnapshotSupported
    @quiescedSnapshotsSupported = quiescedSnapshotsSupported
    @disableSnapshotsSupported = disableSnapshotsSupported
    @lockSnapshotsSupported = lockSnapshotsSupported
    @consolePreferencesSupported = consolePreferencesSupported
    @cpuFeatureMaskSupported = cpuFeatureMaskSupported
    @s1AcpiManagementSupported = s1AcpiManagementSupported
    @settingScreenResolutionSupported = settingScreenResolutionSupported
    @toolsAutoUpdateSupported = toolsAutoUpdateSupported
    @vmNpivWwnSupported = vmNpivWwnSupported
    @npivWwnOnNonRdmVmSupported = npivWwnOnNonRdmVmSupported
    @vmNpivWwnDisableSupported = vmNpivWwnDisableSupported
    @vmNpivWwnUpdateSupported = vmNpivWwnUpdateSupported
    @swapPlacementSupported = swapPlacementSupported
    @toolsSyncTimeSupported = toolsSyncTimeSupported
    @virtualMmuUsageSupported = virtualMmuUsageSupported
    @diskSharesSupported = diskSharesSupported
    @bootOptionsSupported = bootOptionsSupported
    @bootRetryOptionsSupported = bootRetryOptionsSupported
    @settingVideoRamSizeSupported = settingVideoRamSizeSupported
    @settingDisplayTopologySupported = settingDisplayTopologySupported
    @recordReplaySupported = recordReplaySupported
    @changeTrackingSupported = changeTrackingSupported
  end
end

# {urn:vim25}VirtualMachineCloneSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   location - Bosh::Director::CloudProviders::VSphere::VirtualMachineRelocateSpec
#   template - SOAP::SOAPBoolean
#   config - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
#   customization - Bosh::Director::CloudProviders::VSphere::CustomizationSpec
#   powerOn - SOAP::SOAPBoolean
#   snapshot - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualMachineCloneSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :location
  attr_accessor :template
  attr_accessor :config
  attr_accessor :customization
  attr_accessor :powerOn
  attr_accessor :snapshot

  def initialize(dynamicType = nil, dynamicProperty = [], location = nil, template = nil, config = nil, customization = nil, powerOn = nil, snapshot = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @location = location
    @template = template
    @config = config
    @customization = customization
    @powerOn = powerOn
    @snapshot = snapshot
  end
end

# {urn:vim25}VirtualMachineConfigInfoDatastoreUrlPair
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   url - SOAP::SOAPString
class VirtualMachineConfigInfoDatastoreUrlPair < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :url

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, url = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @url = url
  end
end

# {urn:vim25}VirtualMachineConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeVersion - SOAP::SOAPString
#   modified - SOAP::SOAPDateTime
#   name - SOAP::SOAPString
#   guestFullName - SOAP::SOAPString
#   version - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
#   npivNodeWorldWideName - SOAP::SOAPLong
#   npivPortWorldWideName - SOAP::SOAPLong
#   npivWorldWideNameType - SOAP::SOAPString
#   npivDesiredNodeWwns - SOAP::SOAPShort
#   npivDesiredPortWwns - SOAP::SOAPShort
#   npivTemporaryDisabled - SOAP::SOAPBoolean
#   npivOnNonRdmDisks - SOAP::SOAPBoolean
#   locationId - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   guestId - SOAP::SOAPString
#   alternateGuestName - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   files - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileInfo
#   tools - Bosh::Director::CloudProviders::VSphere::ToolsConfigInfo
#   flags - Bosh::Director::CloudProviders::VSphere::VirtualMachineFlagInfo
#   consolePreferences - Bosh::Director::CloudProviders::VSphere::VirtualMachineConsolePreferences
#   defaultPowerOps - Bosh::Director::CloudProviders::VSphere::VirtualMachineDefaultPowerOpInfo
#   hardware - Bosh::Director::CloudProviders::VSphere::VirtualHardware
#   cpuAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
#   memoryAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
#   memoryHotAddEnabled - SOAP::SOAPBoolean
#   cpuHotAddEnabled - SOAP::SOAPBoolean
#   cpuHotRemoveEnabled - SOAP::SOAPBoolean
#   hotPlugMemoryLimit - SOAP::SOAPLong
#   hotPlugMemoryIncrementSize - SOAP::SOAPLong
#   cpuAffinity - Bosh::Director::CloudProviders::VSphere::VirtualMachineAffinityInfo
#   memoryAffinity - Bosh::Director::CloudProviders::VSphere::VirtualMachineAffinityInfo
#   networkShaper - Bosh::Director::CloudProviders::VSphere::VirtualMachineNetworkShaperInfo
#   extraConfig - Bosh::Director::CloudProviders::VSphere::OptionValue
#   cpuFeatureMask - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
#   datastoreUrl - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigInfoDatastoreUrlPair
#   swapPlacement - SOAP::SOAPString
#   bootOptions - Bosh::Director::CloudProviders::VSphere::VirtualMachineBootOptions
#   ftInfo - Bosh::Director::CloudProviders::VSphere::FaultToleranceConfigInfo
#   vAppConfig - Bosh::Director::CloudProviders::VSphere::VmConfigInfo
#   vAssertsEnabled - SOAP::SOAPBoolean
#   changeTrackingEnabled - SOAP::SOAPBoolean
class VirtualMachineConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeVersion
  attr_accessor :modified
  attr_accessor :name
  attr_accessor :guestFullName
  attr_accessor :version
  attr_accessor :uuid
  attr_accessor :instanceUuid
  attr_accessor :npivNodeWorldWideName
  attr_accessor :npivPortWorldWideName
  attr_accessor :npivWorldWideNameType
  attr_accessor :npivDesiredNodeWwns
  attr_accessor :npivDesiredPortWwns
  attr_accessor :npivTemporaryDisabled
  attr_accessor :npivOnNonRdmDisks
  attr_accessor :locationId
  attr_accessor :template
  attr_accessor :guestId
  attr_accessor :alternateGuestName
  attr_accessor :annotation
  attr_accessor :files
  attr_accessor :tools
  attr_accessor :flags
  attr_accessor :consolePreferences
  attr_accessor :defaultPowerOps
  attr_accessor :hardware
  attr_accessor :cpuAllocation
  attr_accessor :memoryAllocation
  attr_accessor :memoryHotAddEnabled
  attr_accessor :cpuHotAddEnabled
  attr_accessor :cpuHotRemoveEnabled
  attr_accessor :hotPlugMemoryLimit
  attr_accessor :hotPlugMemoryIncrementSize
  attr_accessor :cpuAffinity
  attr_accessor :memoryAffinity
  attr_accessor :networkShaper
  attr_accessor :extraConfig
  attr_accessor :cpuFeatureMask
  attr_accessor :datastoreUrl
  attr_accessor :swapPlacement
  attr_accessor :bootOptions
  attr_accessor :ftInfo
  attr_accessor :vAppConfig
  attr_accessor :vAssertsEnabled
  attr_accessor :changeTrackingEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], changeVersion = nil, modified = nil, name = nil, guestFullName = nil, version = nil, uuid = nil, instanceUuid = nil, npivNodeWorldWideName = [], npivPortWorldWideName = [], npivWorldWideNameType = nil, npivDesiredNodeWwns = nil, npivDesiredPortWwns = nil, npivTemporaryDisabled = nil, npivOnNonRdmDisks = nil, locationId = nil, template = nil, guestId = nil, alternateGuestName = nil, annotation = nil, files = nil, tools = nil, flags = nil, consolePreferences = nil, defaultPowerOps = nil, hardware = nil, cpuAllocation = nil, memoryAllocation = nil, memoryHotAddEnabled = nil, cpuHotAddEnabled = nil, cpuHotRemoveEnabled = nil, hotPlugMemoryLimit = nil, hotPlugMemoryIncrementSize = nil, cpuAffinity = nil, memoryAffinity = nil, networkShaper = nil, extraConfig = [], cpuFeatureMask = [], datastoreUrl = [], swapPlacement = nil, bootOptions = nil, ftInfo = nil, vAppConfig = nil, vAssertsEnabled = nil, changeTrackingEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeVersion = changeVersion
    @modified = modified
    @name = name
    @guestFullName = guestFullName
    @version = version
    @uuid = uuid
    @instanceUuid = instanceUuid
    @npivNodeWorldWideName = npivNodeWorldWideName
    @npivPortWorldWideName = npivPortWorldWideName
    @npivWorldWideNameType = npivWorldWideNameType
    @npivDesiredNodeWwns = npivDesiredNodeWwns
    @npivDesiredPortWwns = npivDesiredPortWwns
    @npivTemporaryDisabled = npivTemporaryDisabled
    @npivOnNonRdmDisks = npivOnNonRdmDisks
    @locationId = locationId
    @template = template
    @guestId = guestId
    @alternateGuestName = alternateGuestName
    @annotation = annotation
    @files = files
    @tools = tools
    @flags = flags
    @consolePreferences = consolePreferences
    @defaultPowerOps = defaultPowerOps
    @hardware = hardware
    @cpuAllocation = cpuAllocation
    @memoryAllocation = memoryAllocation
    @memoryHotAddEnabled = memoryHotAddEnabled
    @cpuHotAddEnabled = cpuHotAddEnabled
    @cpuHotRemoveEnabled = cpuHotRemoveEnabled
    @hotPlugMemoryLimit = hotPlugMemoryLimit
    @hotPlugMemoryIncrementSize = hotPlugMemoryIncrementSize
    @cpuAffinity = cpuAffinity
    @memoryAffinity = memoryAffinity
    @networkShaper = networkShaper
    @extraConfig = extraConfig
    @cpuFeatureMask = cpuFeatureMask
    @datastoreUrl = datastoreUrl
    @swapPlacement = swapPlacement
    @bootOptions = bootOptions
    @ftInfo = ftInfo
    @vAppConfig = vAppConfig
    @vAssertsEnabled = vAssertsEnabled
    @changeTrackingEnabled = changeTrackingEnabled
  end
end

# {urn:vim25}VirtualMachineConfigOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   version - SOAP::SOAPString
#   description - SOAP::SOAPString
#   guestOSDescriptor - Bosh::Director::CloudProviders::VSphere::GuestOsDescriptor
#   guestOSDefaultIndex - SOAP::SOAPInt
#   hardwareOptions - Bosh::Director::CloudProviders::VSphere::VirtualHardwareOption
#   capabilities - Bosh::Director::CloudProviders::VSphere::VirtualMachineCapability
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreOption
#   defaultDevice - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   supportedMonitorType - SOAP::SOAPString
#   supportedOvfEnvironmentTransport - SOAP::SOAPString
#   supportedOvfInstallTransport - SOAP::SOAPString
class VirtualMachineConfigOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :version
  attr_accessor :description
  attr_accessor :guestOSDescriptor
  attr_accessor :guestOSDefaultIndex
  attr_accessor :hardwareOptions
  attr_accessor :capabilities
  attr_accessor :datastore
  attr_accessor :defaultDevice
  attr_accessor :supportedMonitorType
  attr_accessor :supportedOvfEnvironmentTransport
  attr_accessor :supportedOvfInstallTransport

  def initialize(dynamicType = nil, dynamicProperty = [], version = nil, description = nil, guestOSDescriptor = [], guestOSDefaultIndex = nil, hardwareOptions = nil, capabilities = nil, datastore = nil, defaultDevice = [], supportedMonitorType = [], supportedOvfEnvironmentTransport = [], supportedOvfInstallTransport = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @version = version
    @description = description
    @guestOSDescriptor = guestOSDescriptor
    @guestOSDefaultIndex = guestOSDefaultIndex
    @hardwareOptions = hardwareOptions
    @capabilities = capabilities
    @datastore = datastore
    @defaultDevice = defaultDevice
    @supportedMonitorType = supportedMonitorType
    @supportedOvfEnvironmentTransport = supportedOvfEnvironmentTransport
    @supportedOvfInstallTransport = supportedOvfInstallTransport
  end
end

# {urn:vim25}VirtualMachineConfigOptionDescriptor
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPString
#   description - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   createSupported - SOAP::SOAPBoolean
#   defaultConfigOption - SOAP::SOAPBoolean
class VirtualMachineConfigOptionDescriptor < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :description
  attr_accessor :host
  attr_accessor :createSupported
  attr_accessor :defaultConfigOption

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, description = nil, host = [], createSupported = nil, defaultConfigOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @description = description
    @host = host
    @createSupported = createSupported
    @defaultConfigOption = defaultConfigOption
  end
end

# {urn:vim25}VirtualMachineConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeVersion - SOAP::SOAPString
#   name - SOAP::SOAPString
#   version - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
#   npivNodeWorldWideName - SOAP::SOAPLong
#   npivPortWorldWideName - SOAP::SOAPLong
#   npivWorldWideNameType - SOAP::SOAPString
#   npivDesiredNodeWwns - SOAP::SOAPShort
#   npivDesiredPortWwns - SOAP::SOAPShort
#   npivTemporaryDisabled - SOAP::SOAPBoolean
#   npivOnNonRdmDisks - SOAP::SOAPBoolean
#   npivWorldWideNameOp - SOAP::SOAPString
#   locationId - SOAP::SOAPString
#   guestId - SOAP::SOAPString
#   alternateGuestName - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   files - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileInfo
#   tools - Bosh::Director::CloudProviders::VSphere::ToolsConfigInfo
#   flags - Bosh::Director::CloudProviders::VSphere::VirtualMachineFlagInfo
#   consolePreferences - Bosh::Director::CloudProviders::VSphere::VirtualMachineConsolePreferences
#   powerOpInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineDefaultPowerOpInfo
#   numCPUs - SOAP::SOAPInt
#   memoryMB - SOAP::SOAPLong
#   memoryHotAddEnabled - SOAP::SOAPBoolean
#   cpuHotAddEnabled - SOAP::SOAPBoolean
#   cpuHotRemoveEnabled - SOAP::SOAPBoolean
#   deviceChange - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConfigSpec
#   cpuAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
#   memoryAllocation - Bosh::Director::CloudProviders::VSphere::ResourceAllocationInfo
#   cpuAffinity - Bosh::Director::CloudProviders::VSphere::VirtualMachineAffinityInfo
#   memoryAffinity - Bosh::Director::CloudProviders::VSphere::VirtualMachineAffinityInfo
#   networkShaper - Bosh::Director::CloudProviders::VSphere::VirtualMachineNetworkShaperInfo
#   cpuFeatureMask - Bosh::Director::CloudProviders::VSphere::VirtualMachineCpuIdInfoSpec
#   extraConfig - Bosh::Director::CloudProviders::VSphere::OptionValue
#   swapPlacement - SOAP::SOAPString
#   bootOptions - Bosh::Director::CloudProviders::VSphere::VirtualMachineBootOptions
#   vAppConfig - Bosh::Director::CloudProviders::VSphere::VmConfigSpec
#   ftInfo - Bosh::Director::CloudProviders::VSphere::FaultToleranceConfigInfo
#   vAppConfigRemoved - SOAP::SOAPBoolean
#   vAssertsEnabled - SOAP::SOAPBoolean
#   changeTrackingEnabled - SOAP::SOAPBoolean
class VirtualMachineConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeVersion
  attr_accessor :name
  attr_accessor :version
  attr_accessor :uuid
  attr_accessor :instanceUuid
  attr_accessor :npivNodeWorldWideName
  attr_accessor :npivPortWorldWideName
  attr_accessor :npivWorldWideNameType
  attr_accessor :npivDesiredNodeWwns
  attr_accessor :npivDesiredPortWwns
  attr_accessor :npivTemporaryDisabled
  attr_accessor :npivOnNonRdmDisks
  attr_accessor :npivWorldWideNameOp
  attr_accessor :locationId
  attr_accessor :guestId
  attr_accessor :alternateGuestName
  attr_accessor :annotation
  attr_accessor :files
  attr_accessor :tools
  attr_accessor :flags
  attr_accessor :consolePreferences
  attr_accessor :powerOpInfo
  attr_accessor :numCPUs
  attr_accessor :memoryMB
  attr_accessor :memoryHotAddEnabled
  attr_accessor :cpuHotAddEnabled
  attr_accessor :cpuHotRemoveEnabled
  attr_accessor :deviceChange
  attr_accessor :cpuAllocation
  attr_accessor :memoryAllocation
  attr_accessor :cpuAffinity
  attr_accessor :memoryAffinity
  attr_accessor :networkShaper
  attr_accessor :cpuFeatureMask
  attr_accessor :extraConfig
  attr_accessor :swapPlacement
  attr_accessor :bootOptions
  attr_accessor :vAppConfig
  attr_accessor :ftInfo
  attr_accessor :vAppConfigRemoved
  attr_accessor :vAssertsEnabled
  attr_accessor :changeTrackingEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], changeVersion = nil, name = nil, version = nil, uuid = nil, instanceUuid = nil, npivNodeWorldWideName = [], npivPortWorldWideName = [], npivWorldWideNameType = nil, npivDesiredNodeWwns = nil, npivDesiredPortWwns = nil, npivTemporaryDisabled = nil, npivOnNonRdmDisks = nil, npivWorldWideNameOp = nil, locationId = nil, guestId = nil, alternateGuestName = nil, annotation = nil, files = nil, tools = nil, flags = nil, consolePreferences = nil, powerOpInfo = nil, numCPUs = nil, memoryMB = nil, memoryHotAddEnabled = nil, cpuHotAddEnabled = nil, cpuHotRemoveEnabled = nil, deviceChange = [], cpuAllocation = nil, memoryAllocation = nil, cpuAffinity = nil, memoryAffinity = nil, networkShaper = nil, cpuFeatureMask = [], extraConfig = [], swapPlacement = nil, bootOptions = nil, vAppConfig = nil, ftInfo = nil, vAppConfigRemoved = nil, vAssertsEnabled = nil, changeTrackingEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeVersion = changeVersion
    @name = name
    @version = version
    @uuid = uuid
    @instanceUuid = instanceUuid
    @npivNodeWorldWideName = npivNodeWorldWideName
    @npivPortWorldWideName = npivPortWorldWideName
    @npivWorldWideNameType = npivWorldWideNameType
    @npivDesiredNodeWwns = npivDesiredNodeWwns
    @npivDesiredPortWwns = npivDesiredPortWwns
    @npivTemporaryDisabled = npivTemporaryDisabled
    @npivOnNonRdmDisks = npivOnNonRdmDisks
    @npivWorldWideNameOp = npivWorldWideNameOp
    @locationId = locationId
    @guestId = guestId
    @alternateGuestName = alternateGuestName
    @annotation = annotation
    @files = files
    @tools = tools
    @flags = flags
    @consolePreferences = consolePreferences
    @powerOpInfo = powerOpInfo
    @numCPUs = numCPUs
    @memoryMB = memoryMB
    @memoryHotAddEnabled = memoryHotAddEnabled
    @cpuHotAddEnabled = cpuHotAddEnabled
    @cpuHotRemoveEnabled = cpuHotRemoveEnabled
    @deviceChange = deviceChange
    @cpuAllocation = cpuAllocation
    @memoryAllocation = memoryAllocation
    @cpuAffinity = cpuAffinity
    @memoryAffinity = memoryAffinity
    @networkShaper = networkShaper
    @cpuFeatureMask = cpuFeatureMask
    @extraConfig = extraConfig
    @swapPlacement = swapPlacement
    @bootOptions = bootOptions
    @vAppConfig = vAppConfig
    @ftInfo = ftInfo
    @vAppConfigRemoved = vAppConfigRemoved
    @vAssertsEnabled = vAssertsEnabled
    @changeTrackingEnabled = changeTrackingEnabled
  end
end

# {urn:vim25}ConfigTarget
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numCpus - SOAP::SOAPInt
#   numCpuCores - SOAP::SOAPInt
#   numNumaNodes - SOAP::SOAPInt
#   datastore - Bosh::Director::CloudProviders::VSphere::VirtualMachineDatastoreInfo
#   network - Bosh::Director::CloudProviders::VSphere::VirtualMachineNetworkInfo
#   distributedVirtualPortgroup - Bosh::Director::CloudProviders::VSphere::DistributedVirtualPortgroupInfo
#   distributedVirtualSwitch - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchInfo
#   cdRom - Bosh::Director::CloudProviders::VSphere::VirtualMachineCdromInfo
#   serial - Bosh::Director::CloudProviders::VSphere::VirtualMachineSerialInfo
#   parallel - Bosh::Director::CloudProviders::VSphere::VirtualMachineParallelInfo
#   sound - Bosh::Director::CloudProviders::VSphere::VirtualMachineSoundInfo
#   usb - Bosh::Director::CloudProviders::VSphere::VirtualMachineUsbInfo
#   floppy - Bosh::Director::CloudProviders::VSphere::VirtualMachineFloppyInfo
#   legacyNetworkInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineLegacyNetworkSwitchInfo
#   scsiPassthrough - Bosh::Director::CloudProviders::VSphere::VirtualMachineScsiPassthroughInfo
#   scsiDisk - Bosh::Director::CloudProviders::VSphere::VirtualMachineScsiDiskDeviceInfo
#   ideDisk - Bosh::Director::CloudProviders::VSphere::VirtualMachineIdeDiskDeviceInfo
#   maxMemMBOptimalPerf - SOAP::SOAPInt
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ResourcePoolRuntimeInfo
#   autoVmotion - SOAP::SOAPBoolean
#   pciPassthrough - Bosh::Director::CloudProviders::VSphere::VirtualMachinePciPassthroughInfo
class ConfigTarget < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numCpus
  attr_accessor :numCpuCores
  attr_accessor :numNumaNodes
  attr_accessor :datastore
  attr_accessor :network
  attr_accessor :distributedVirtualPortgroup
  attr_accessor :distributedVirtualSwitch
  attr_accessor :cdRom
  attr_accessor :serial
  attr_accessor :parallel
  attr_accessor :sound
  attr_accessor :usb
  attr_accessor :floppy
  attr_accessor :legacyNetworkInfo
  attr_accessor :scsiPassthrough
  attr_accessor :scsiDisk
  attr_accessor :ideDisk
  attr_accessor :maxMemMBOptimalPerf
  attr_accessor :resourcePool
  attr_accessor :autoVmotion
  attr_accessor :pciPassthrough

  def initialize(dynamicType = nil, dynamicProperty = [], numCpus = nil, numCpuCores = nil, numNumaNodes = nil, datastore = [], network = [], distributedVirtualPortgroup = [], distributedVirtualSwitch = [], cdRom = [], serial = [], parallel = [], sound = [], usb = [], floppy = [], legacyNetworkInfo = [], scsiPassthrough = [], scsiDisk = [], ideDisk = [], maxMemMBOptimalPerf = nil, resourcePool = nil, autoVmotion = nil, pciPassthrough = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numCpus = numCpus
    @numCpuCores = numCpuCores
    @numNumaNodes = numNumaNodes
    @datastore = datastore
    @network = network
    @distributedVirtualPortgroup = distributedVirtualPortgroup
    @distributedVirtualSwitch = distributedVirtualSwitch
    @cdRom = cdRom
    @serial = serial
    @parallel = parallel
    @sound = sound
    @usb = usb
    @floppy = floppy
    @legacyNetworkInfo = legacyNetworkInfo
    @scsiPassthrough = scsiPassthrough
    @scsiDisk = scsiDisk
    @ideDisk = ideDisk
    @maxMemMBOptimalPerf = maxMemMBOptimalPerf
    @resourcePool = resourcePool
    @autoVmotion = autoVmotion
    @pciPassthrough = pciPassthrough
  end
end

# {urn:vim25}VirtualMachineConsolePreferences
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   powerOnWhenOpened - SOAP::SOAPBoolean
#   enterFullScreenOnPowerOn - SOAP::SOAPBoolean
#   closeOnPowerOffOrSuspend - SOAP::SOAPBoolean
class VirtualMachineConsolePreferences < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :powerOnWhenOpened
  attr_accessor :enterFullScreenOnPowerOn
  attr_accessor :closeOnPowerOffOrSuspend

  def initialize(dynamicType = nil, dynamicProperty = [], powerOnWhenOpened = nil, enterFullScreenOnPowerOn = nil, closeOnPowerOffOrSuspend = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @powerOnWhenOpened = powerOnWhenOpened
    @enterFullScreenOnPowerOn = enterFullScreenOnPowerOn
    @closeOnPowerOffOrSuspend = closeOnPowerOffOrSuspend
  end
end

# {urn:vim25}VirtualMachineDatastoreVolumeOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileSystemType - SOAP::SOAPString
#   majorVersion - SOAP::SOAPInt
class VirtualMachineDatastoreVolumeOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileSystemType
  attr_accessor :majorVersion

  def initialize(dynamicType = nil, dynamicProperty = [], fileSystemType = nil, majorVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileSystemType = fileSystemType
    @majorVersion = majorVersion
  end
end

# {urn:vim25}DatastoreOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   unsupportedVolumes - Bosh::Director::CloudProviders::VSphere::VirtualMachineDatastoreVolumeOption
class DatastoreOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :unsupportedVolumes

  def initialize(dynamicType = nil, dynamicProperty = [], unsupportedVolumes = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @unsupportedVolumes = unsupportedVolumes
  end
end

# {urn:vim25}VirtualMachineDefaultPowerOpInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   powerOffType - SOAP::SOAPString
#   suspendType - SOAP::SOAPString
#   resetType - SOAP::SOAPString
#   defaultPowerOffType - SOAP::SOAPString
#   defaultSuspendType - SOAP::SOAPString
#   defaultResetType - SOAP::SOAPString
#   standbyAction - SOAP::SOAPString
class VirtualMachineDefaultPowerOpInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :powerOffType
  attr_accessor :suspendType
  attr_accessor :resetType
  attr_accessor :defaultPowerOffType
  attr_accessor :defaultSuspendType
  attr_accessor :defaultResetType
  attr_accessor :standbyAction

  def initialize(dynamicType = nil, dynamicProperty = [], powerOffType = nil, suspendType = nil, resetType = nil, defaultPowerOffType = nil, defaultSuspendType = nil, defaultResetType = nil, standbyAction = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @powerOffType = powerOffType
    @suspendType = suspendType
    @resetType = resetType
    @defaultPowerOffType = defaultPowerOffType
    @defaultSuspendType = defaultSuspendType
    @defaultResetType = defaultResetType
    @standbyAction = standbyAction
  end
end

# {urn:vim25}VirtualMachineDeviceRuntimeInfoDeviceRuntimeState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class VirtualMachineDeviceRuntimeInfoDeviceRuntimeState < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmDirectPathGen2Active - SOAP::SOAPBoolean
#   vmDirectPathGen2InactiveReasonVm - SOAP::SOAPString
#   vmDirectPathGen2InactiveReasonOther - SOAP::SOAPString
#   vmDirectPathGen2InactiveReasonExtended - SOAP::SOAPString
class VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState < VirtualMachineDeviceRuntimeInfoDeviceRuntimeState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmDirectPathGen2Active
  attr_accessor :vmDirectPathGen2InactiveReasonVm
  attr_accessor :vmDirectPathGen2InactiveReasonOther
  attr_accessor :vmDirectPathGen2InactiveReasonExtended

  def initialize(dynamicType = nil, dynamicProperty = [], vmDirectPathGen2Active = nil, vmDirectPathGen2InactiveReasonVm = [], vmDirectPathGen2InactiveReasonOther = [], vmDirectPathGen2InactiveReasonExtended = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmDirectPathGen2Active = vmDirectPathGen2Active
    @vmDirectPathGen2InactiveReasonVm = vmDirectPathGen2InactiveReasonVm
    @vmDirectPathGen2InactiveReasonOther = vmDirectPathGen2InactiveReasonOther
    @vmDirectPathGen2InactiveReasonExtended = vmDirectPathGen2InactiveReasonExtended
  end
end

# {urn:vim25}VirtualMachineDeviceRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   runtimeState - Bosh::Director::CloudProviders::VSphere::VirtualMachineDeviceRuntimeInfoDeviceRuntimeState
#   key - SOAP::SOAPInt
class VirtualMachineDeviceRuntimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :runtimeState
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], runtimeState = nil, key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @runtimeState = runtimeState
    @key = key
  end
end

# {urn:vim25}FaultToleranceConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   role - SOAP::SOAPInt
#   instanceUuids - SOAP::SOAPString
#   configPaths - SOAP::SOAPString
class FaultToleranceConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :role
  attr_accessor :instanceUuids
  attr_accessor :configPaths

  def initialize(dynamicType = nil, dynamicProperty = [], role = nil, instanceUuids = [], configPaths = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @role = role
    @instanceUuids = instanceUuids
    @configPaths = configPaths
  end
end

# {urn:vim25}FaultTolerancePrimaryConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   role - SOAP::SOAPInt
#   instanceUuids - SOAP::SOAPString
#   configPaths - SOAP::SOAPString
#   secondaries - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FaultTolerancePrimaryConfigInfo < FaultToleranceConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :role
  attr_accessor :instanceUuids
  attr_accessor :configPaths
  attr_accessor :secondaries

  def initialize(dynamicType = nil, dynamicProperty = [], role = nil, instanceUuids = [], configPaths = [], secondaries = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @role = role
    @instanceUuids = instanceUuids
    @configPaths = configPaths
    @secondaries = secondaries
  end
end

# {urn:vim25}FaultToleranceSecondaryConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   role - SOAP::SOAPInt
#   instanceUuids - SOAP::SOAPString
#   configPaths - SOAP::SOAPString
#   primaryVM - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FaultToleranceSecondaryConfigInfo < FaultToleranceConfigInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :role
  attr_accessor :instanceUuids
  attr_accessor :configPaths
  attr_accessor :primaryVM

  def initialize(dynamicType = nil, dynamicProperty = [], role = nil, instanceUuids = [], configPaths = [], primaryVM = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @role = role
    @instanceUuids = instanceUuids
    @configPaths = configPaths
    @primaryVM = primaryVM
  end
end

# {urn:vim25}FaultToleranceSecondaryOpResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   powerOnAttempted - SOAP::SOAPBoolean
#   powerOnResult - Bosh::Director::CloudProviders::VSphere::ClusterPowerOnVmResult
class FaultToleranceSecondaryOpResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :powerOnAttempted
  attr_accessor :powerOnResult

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, powerOnAttempted = nil, powerOnResult = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @powerOnAttempted = powerOnAttempted
    @powerOnResult = powerOnResult
  end
end

# {urn:vim25}VirtualMachineFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vmPathName - SOAP::SOAPString
#   snapshotDirectory - SOAP::SOAPString
#   suspendDirectory - SOAP::SOAPString
#   logDirectory - SOAP::SOAPString
class VirtualMachineFileInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vmPathName
  attr_accessor :snapshotDirectory
  attr_accessor :suspendDirectory
  attr_accessor :logDirectory

  def initialize(dynamicType = nil, dynamicProperty = [], vmPathName = nil, snapshotDirectory = nil, suspendDirectory = nil, logDirectory = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vmPathName = vmPathName
    @snapshotDirectory = snapshotDirectory
    @suspendDirectory = suspendDirectory
    @logDirectory = logDirectory
  end
end

# {urn:vim25}VirtualMachineFileLayoutDiskLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   diskFile - SOAP::SOAPString
class VirtualMachineFileLayoutDiskLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :diskFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, diskFile = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @diskFile = diskFile
  end
end

# {urn:vim25}VirtualMachineFileLayoutSnapshotLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   snapshotFile - SOAP::SOAPString
class VirtualMachineFileLayoutSnapshotLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :snapshotFile

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, snapshotFile = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @snapshotFile = snapshotFile
  end
end

# {urn:vim25}VirtualMachineFileLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   configFile - SOAP::SOAPString
#   logFile - SOAP::SOAPString
#   disk - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutDiskLayout
#   snapshot - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutSnapshotLayout
#   swapFile - SOAP::SOAPString
class VirtualMachineFileLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :configFile
  attr_accessor :logFile
  attr_accessor :disk
  attr_accessor :snapshot
  attr_accessor :swapFile

  def initialize(dynamicType = nil, dynamicProperty = [], configFile = [], logFile = [], disk = [], snapshot = [], swapFile = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @configFile = configFile
    @logFile = logFile
    @disk = disk
    @snapshot = snapshot
    @swapFile = swapFile
  end
end

# {urn:vim25}VirtualMachineFileLayoutExFileInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   type - SOAP::SOAPString
#   size - SOAP::SOAPLong
class VirtualMachineFileLayoutExFileInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :name
  attr_accessor :type
  attr_accessor :size

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, name = nil, type = nil, size = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @name = name
    @type = type
    @size = size
  end
end

# {urn:vim25}VirtualMachineFileLayoutExDiskUnit
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileKey - SOAP::SOAPInt
class VirtualMachineFileLayoutExDiskUnit < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileKey

  def initialize(dynamicType = nil, dynamicProperty = [], fileKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileKey = fileKey
  end
end

# {urn:vim25}VirtualMachineFileLayoutExDiskLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   chain - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutExDiskUnit
class VirtualMachineFileLayoutExDiskLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :chain

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, chain = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @chain = chain
  end
end

# {urn:vim25}VirtualMachineFileLayoutExSnapshotLayout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dataKey - SOAP::SOAPInt
#   disk - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutExDiskLayout
class VirtualMachineFileLayoutExSnapshotLayout < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :dataKey
  attr_accessor :disk

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, dataKey = nil, disk = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @dataKey = dataKey
    @disk = disk
  end
end

# {urn:vim25}VirtualMachineFileLayoutEx
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   file - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutExFileInfo
#   disk - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutExDiskLayout
#   snapshot - Bosh::Director::CloudProviders::VSphere::VirtualMachineFileLayoutExSnapshotLayout
#   timestamp - SOAP::SOAPDateTime
class VirtualMachineFileLayoutEx < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :file
  attr_accessor :disk
  attr_accessor :snapshot
  attr_accessor :timestamp

  def initialize(dynamicType = nil, dynamicProperty = [], file = [], disk = [], snapshot = [], timestamp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @file = file
    @disk = disk
    @snapshot = snapshot
    @timestamp = timestamp
  end
end

# {urn:vim25}VirtualMachineFlagInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   disableAcceleration - SOAP::SOAPBoolean
#   enableLogging - SOAP::SOAPBoolean
#   useToe - SOAP::SOAPBoolean
#   runWithDebugInfo - SOAP::SOAPBoolean
#   monitorType - SOAP::SOAPString
#   htSharing - SOAP::SOAPString
#   snapshotDisabled - SOAP::SOAPBoolean
#   snapshotLocked - SOAP::SOAPBoolean
#   diskUuidEnabled - SOAP::SOAPBoolean
#   virtualMmuUsage - SOAP::SOAPString
#   virtualExecUsage - SOAP::SOAPString
#   snapshotPowerOffBehavior - SOAP::SOAPString
#   recordReplayEnabled - SOAP::SOAPBoolean
class VirtualMachineFlagInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :disableAcceleration
  attr_accessor :enableLogging
  attr_accessor :useToe
  attr_accessor :runWithDebugInfo
  attr_accessor :monitorType
  attr_accessor :htSharing
  attr_accessor :snapshotDisabled
  attr_accessor :snapshotLocked
  attr_accessor :diskUuidEnabled
  attr_accessor :virtualMmuUsage
  attr_accessor :virtualExecUsage
  attr_accessor :snapshotPowerOffBehavior
  attr_accessor :recordReplayEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], disableAcceleration = nil, enableLogging = nil, useToe = nil, runWithDebugInfo = nil, monitorType = nil, htSharing = nil, snapshotDisabled = nil, snapshotLocked = nil, diskUuidEnabled = nil, virtualMmuUsage = nil, virtualExecUsage = nil, snapshotPowerOffBehavior = nil, recordReplayEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @disableAcceleration = disableAcceleration
    @enableLogging = enableLogging
    @useToe = useToe
    @runWithDebugInfo = runWithDebugInfo
    @monitorType = monitorType
    @htSharing = htSharing
    @snapshotDisabled = snapshotDisabled
    @snapshotLocked = snapshotLocked
    @diskUuidEnabled = diskUuidEnabled
    @virtualMmuUsage = virtualMmuUsage
    @virtualExecUsage = virtualExecUsage
    @snapshotPowerOffBehavior = snapshotPowerOffBehavior
    @recordReplayEnabled = recordReplayEnabled
  end
end

# {urn:vim25}GuestDiskInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskPath - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   freeSpace - SOAP::SOAPLong
class GuestDiskInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskPath
  attr_accessor :capacity
  attr_accessor :freeSpace

  def initialize(dynamicType = nil, dynamicProperty = [], diskPath = nil, capacity = nil, freeSpace = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskPath = diskPath
    @capacity = capacity
    @freeSpace = freeSpace
  end
end

# {urn:vim25}GuestNicInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   network - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
#   deviceConfigId - SOAP::SOAPInt
#   dnsConfig - Bosh::Director::CloudProviders::VSphere::NetDnsConfigInfo
#   ipConfig - Bosh::Director::CloudProviders::VSphere::NetIpConfigInfo
#   netBIOSConfig - Bosh::Director::CloudProviders::VSphere::NetBIOSConfigInfo
class GuestNicInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :network
  attr_accessor :ipAddress
  attr_accessor :macAddress
  attr_accessor :connected
  attr_accessor :deviceConfigId
  attr_accessor :dnsConfig
  attr_accessor :ipConfig
  attr_accessor :netBIOSConfig

  def initialize(dynamicType = nil, dynamicProperty = [], network = nil, ipAddress = [], macAddress = nil, connected = nil, deviceConfigId = nil, dnsConfig = nil, ipConfig = nil, netBIOSConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @network = network
    @ipAddress = ipAddress
    @macAddress = macAddress
    @connected = connected
    @deviceConfigId = deviceConfigId
    @dnsConfig = dnsConfig
    @ipConfig = ipConfig
    @netBIOSConfig = netBIOSConfig
  end
end

# {urn:vim25}GuestStackInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dnsConfig - Bosh::Director::CloudProviders::VSphere::NetDnsConfigInfo
#   ipRouteConfig - Bosh::Director::CloudProviders::VSphere::NetIpRouteConfigInfo
#   ipStackConfig - Bosh::Director::CloudProviders::VSphere::KeyValue
#   dhcpConfig - Bosh::Director::CloudProviders::VSphere::NetDhcpConfigInfo
class GuestStackInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dnsConfig
  attr_accessor :ipRouteConfig
  attr_accessor :ipStackConfig
  attr_accessor :dhcpConfig

  def initialize(dynamicType = nil, dynamicProperty = [], dnsConfig = nil, ipRouteConfig = nil, ipStackConfig = [], dhcpConfig = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dnsConfig = dnsConfig
    @ipRouteConfig = ipRouteConfig
    @ipStackConfig = ipStackConfig
    @dhcpConfig = dhcpConfig
  end
end

# {urn:vim25}GuestScreenInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   width - SOAP::SOAPInt
#   height - SOAP::SOAPInt
class GuestScreenInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :width
  attr_accessor :height

  def initialize(dynamicType = nil, dynamicProperty = [], width = nil, height = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @width = width
    @height = height
  end
end

# {urn:vim25}GuestInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   toolsStatus - Bosh::Director::CloudProviders::VSphere::VirtualMachineToolsStatus
#   toolsVersionStatus - SOAP::SOAPString
#   toolsRunningStatus - SOAP::SOAPString
#   toolsVersion - SOAP::SOAPString
#   guestId - SOAP::SOAPString
#   guestFamily - SOAP::SOAPString
#   guestFullName - SOAP::SOAPString
#   hostName - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
#   net - Bosh::Director::CloudProviders::VSphere::GuestNicInfo
#   ipStack - Bosh::Director::CloudProviders::VSphere::GuestStackInfo
#   disk - Bosh::Director::CloudProviders::VSphere::GuestDiskInfo
#   screen - Bosh::Director::CloudProviders::VSphere::GuestScreenInfo
#   guestState - SOAP::SOAPString
#   appHeartbeatStatus - SOAP::SOAPString
class GuestInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :toolsStatus
  attr_accessor :toolsVersionStatus
  attr_accessor :toolsRunningStatus
  attr_accessor :toolsVersion
  attr_accessor :guestId
  attr_accessor :guestFamily
  attr_accessor :guestFullName
  attr_accessor :hostName
  attr_accessor :ipAddress
  attr_accessor :net
  attr_accessor :ipStack
  attr_accessor :disk
  attr_accessor :screen
  attr_accessor :guestState
  attr_accessor :appHeartbeatStatus

  def initialize(dynamicType = nil, dynamicProperty = [], toolsStatus = nil, toolsVersionStatus = nil, toolsRunningStatus = nil, toolsVersion = nil, guestId = nil, guestFamily = nil, guestFullName = nil, hostName = nil, ipAddress = nil, net = [], ipStack = [], disk = [], screen = nil, guestState = nil, appHeartbeatStatus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @toolsStatus = toolsStatus
    @toolsVersionStatus = toolsVersionStatus
    @toolsRunningStatus = toolsRunningStatus
    @toolsVersion = toolsVersion
    @guestId = guestId
    @guestFamily = guestFamily
    @guestFullName = guestFullName
    @hostName = hostName
    @ipAddress = ipAddress
    @net = net
    @ipStack = ipStack
    @disk = disk
    @screen = screen
    @guestState = guestState
    @appHeartbeatStatus = appHeartbeatStatus
  end
end

# {urn:vim25}GuestOsDescriptor
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   family - SOAP::SOAPString
#   fullName - SOAP::SOAPString
#   supportedMaxCPUs - SOAP::SOAPInt
#   supportedMinMemMB - SOAP::SOAPInt
#   supportedMaxMemMB - SOAP::SOAPInt
#   recommendedMemMB - SOAP::SOAPInt
#   recommendedColorDepth - SOAP::SOAPInt
#   supportedDiskControllerList - SOAP::SOAPString
#   recommendedSCSIController - SOAP::SOAPString
#   recommendedDiskController - SOAP::SOAPString
#   supportedNumDisks - SOAP::SOAPInt
#   recommendedDiskSizeMB - SOAP::SOAPInt
#   supportedEthernetCard - SOAP::SOAPString
#   recommendedEthernetCard - SOAP::SOAPString
#   supportsSlaveDisk - SOAP::SOAPBoolean
#   cpuFeatureMask - Bosh::Director::CloudProviders::VSphere::HostCpuIdInfo
#   supportsWakeOnLan - SOAP::SOAPBoolean
#   supportsVMI - SOAP::SOAPBoolean
#   supportsMemoryHotAdd - SOAP::SOAPBoolean
#   supportsCpuHotAdd - SOAP::SOAPBoolean
#   supportsCpuHotRemove - SOAP::SOAPBoolean
class GuestOsDescriptor < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :family
  attr_accessor :fullName
  attr_accessor :supportedMaxCPUs
  attr_accessor :supportedMinMemMB
  attr_accessor :supportedMaxMemMB
  attr_accessor :recommendedMemMB
  attr_accessor :recommendedColorDepth
  attr_accessor :supportedDiskControllerList
  attr_accessor :recommendedSCSIController
  attr_accessor :recommendedDiskController
  attr_accessor :supportedNumDisks
  attr_accessor :recommendedDiskSizeMB
  attr_accessor :supportedEthernetCard
  attr_accessor :recommendedEthernetCard
  attr_accessor :supportsSlaveDisk
  attr_accessor :cpuFeatureMask
  attr_accessor :supportsWakeOnLan
  attr_accessor :supportsVMI
  attr_accessor :supportsMemoryHotAdd
  attr_accessor :supportsCpuHotAdd
  attr_accessor :supportsCpuHotRemove

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, family = nil, fullName = nil, supportedMaxCPUs = nil, supportedMinMemMB = nil, supportedMaxMemMB = nil, recommendedMemMB = nil, recommendedColorDepth = nil, supportedDiskControllerList = [], recommendedSCSIController = nil, recommendedDiskController = nil, supportedNumDisks = nil, recommendedDiskSizeMB = nil, supportedEthernetCard = [], recommendedEthernetCard = nil, supportsSlaveDisk = nil, cpuFeatureMask = [], supportsWakeOnLan = nil, supportsVMI = nil, supportsMemoryHotAdd = nil, supportsCpuHotAdd = nil, supportsCpuHotRemove = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @family = family
    @fullName = fullName
    @supportedMaxCPUs = supportedMaxCPUs
    @supportedMinMemMB = supportedMinMemMB
    @supportedMaxMemMB = supportedMaxMemMB
    @recommendedMemMB = recommendedMemMB
    @recommendedColorDepth = recommendedColorDepth
    @supportedDiskControllerList = supportedDiskControllerList
    @recommendedSCSIController = recommendedSCSIController
    @recommendedDiskController = recommendedDiskController
    @supportedNumDisks = supportedNumDisks
    @recommendedDiskSizeMB = recommendedDiskSizeMB
    @supportedEthernetCard = supportedEthernetCard
    @recommendedEthernetCard = recommendedEthernetCard
    @supportsSlaveDisk = supportsSlaveDisk
    @cpuFeatureMask = cpuFeatureMask
    @supportsWakeOnLan = supportsWakeOnLan
    @supportsVMI = supportsVMI
    @supportsMemoryHotAdd = supportsMemoryHotAdd
    @supportsCpuHotAdd = supportsCpuHotAdd
    @supportsCpuHotRemove = supportsCpuHotRemove
  end
end

# {urn:vim25}VirtualMachineIdeDiskDevicePartitionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPInt
#   capacity - SOAP::SOAPInt
class VirtualMachineIdeDiskDevicePartitionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :capacity

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, capacity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @capacity = capacity
  end
end

# {urn:vim25}VirtualMachineLegacyNetworkSwitchInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
class VirtualMachineLegacyNetworkSwitchInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
  end
end

# {urn:vim25}VirtualMachineMessage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   argument - (any)
#   text - SOAP::SOAPString
class VirtualMachineMessage < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :argument
  attr_accessor :text

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, argument = [], text = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @argument = argument
    @text = text
  end
end

# {urn:vim25}VirtualMachineNetworkShaperInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   enabled - SOAP::SOAPBoolean
#   peakBps - SOAP::SOAPLong
#   averageBps - SOAP::SOAPLong
#   burstSize - SOAP::SOAPLong
class VirtualMachineNetworkShaperInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :enabled
  attr_accessor :peakBps
  attr_accessor :averageBps
  attr_accessor :burstSize

  def initialize(dynamicType = nil, dynamicProperty = [], enabled = nil, peakBps = nil, averageBps = nil, burstSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @enabled = enabled
    @peakBps = peakBps
    @averageBps = averageBps
    @burstSize = burstSize
  end
end

# {urn:vim25}VirtualMachineQuestionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   id - SOAP::SOAPString
#   text - SOAP::SOAPString
#   choice - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   message - Bosh::Director::CloudProviders::VSphere::VirtualMachineMessage
class VirtualMachineQuestionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :id
  attr_accessor :text
  attr_accessor :choice
  attr_accessor :message

  def initialize(dynamicType = nil, dynamicProperty = [], id = nil, text = nil, choice = nil, message = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @id = id
    @text = text
    @choice = choice
    @message = message
  end
end

# {urn:vim25}VirtualMachineRelocateSpecDiskLocator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   diskId - SOAP::SOAPInt
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMoveType - SOAP::SOAPString
class VirtualMachineRelocateSpecDiskLocator < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :diskId
  attr_accessor :datastore
  attr_accessor :diskMoveType

  def initialize(dynamicType = nil, dynamicProperty = [], diskId = nil, datastore = nil, diskMoveType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @diskId = diskId
    @datastore = datastore
    @diskMoveType = diskMoveType
  end
end

# {urn:vim25}VirtualMachineRelocateSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMoveType - SOAP::SOAPString
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   disk - Bosh::Director::CloudProviders::VSphere::VirtualMachineRelocateSpecDiskLocator
#   transform - Bosh::Director::CloudProviders::VSphere::VirtualMachineRelocateTransformation
class VirtualMachineRelocateSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :datastore
  attr_accessor :diskMoveType
  attr_accessor :pool
  attr_accessor :host
  attr_accessor :disk
  attr_accessor :transform

  def initialize(dynamicType = nil, dynamicProperty = [], datastore = nil, diskMoveType = nil, pool = nil, host = nil, disk = [], transform = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @datastore = datastore
    @diskMoveType = diskMoveType
    @pool = pool
    @host = host
    @disk = disk
    @transform = transform
  end
end

# {urn:vim25}VirtualMachineRuntimeInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   device - Bosh::Director::CloudProviders::VSphere::VirtualMachineDeviceRuntimeInfo
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   connectionState - Bosh::Director::CloudProviders::VSphere::VirtualMachineConnectionState
#   powerState - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
#   faultToleranceState - Bosh::Director::CloudProviders::VSphere::VirtualMachineFaultToleranceState
#   toolsInstallerMounted - SOAP::SOAPBoolean
#   suspendTime - SOAP::SOAPDateTime
#   bootTime - SOAP::SOAPDateTime
#   suspendInterval - SOAP::SOAPLong
#   question - Bosh::Director::CloudProviders::VSphere::VirtualMachineQuestionInfo
#   memoryOverhead - SOAP::SOAPLong
#   maxCpuUsage - SOAP::SOAPInt
#   maxMemoryUsage - SOAP::SOAPInt
#   numMksConnections - SOAP::SOAPInt
#   recordReplayState - Bosh::Director::CloudProviders::VSphere::VirtualMachineRecordReplayState
#   cleanPowerOff - SOAP::SOAPBoolean
#   needSecondaryReason - SOAP::SOAPString
#   minRequiredEVCModeKey - SOAP::SOAPString
class VirtualMachineRuntimeInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :device
  attr_accessor :host
  attr_accessor :connectionState
  attr_accessor :powerState
  attr_accessor :faultToleranceState
  attr_accessor :toolsInstallerMounted
  attr_accessor :suspendTime
  attr_accessor :bootTime
  attr_accessor :suspendInterval
  attr_accessor :question
  attr_accessor :memoryOverhead
  attr_accessor :maxCpuUsage
  attr_accessor :maxMemoryUsage
  attr_accessor :numMksConnections
  attr_accessor :recordReplayState
  attr_accessor :cleanPowerOff
  attr_accessor :needSecondaryReason
  attr_accessor :minRequiredEVCModeKey

  def initialize(dynamicType = nil, dynamicProperty = [], device = [], host = nil, connectionState = nil, powerState = nil, faultToleranceState = nil, toolsInstallerMounted = nil, suspendTime = nil, bootTime = nil, suspendInterval = nil, question = nil, memoryOverhead = nil, maxCpuUsage = nil, maxMemoryUsage = nil, numMksConnections = nil, recordReplayState = nil, cleanPowerOff = nil, needSecondaryReason = nil, minRequiredEVCModeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @device = device
    @host = host
    @connectionState = connectionState
    @powerState = powerState
    @faultToleranceState = faultToleranceState
    @toolsInstallerMounted = toolsInstallerMounted
    @suspendTime = suspendTime
    @bootTime = bootTime
    @suspendInterval = suspendInterval
    @question = question
    @memoryOverhead = memoryOverhead
    @maxCpuUsage = maxCpuUsage
    @maxMemoryUsage = maxMemoryUsage
    @numMksConnections = numMksConnections
    @recordReplayState = recordReplayState
    @cleanPowerOff = cleanPowerOff
    @needSecondaryReason = needSecondaryReason
    @minRequiredEVCModeKey = minRequiredEVCModeKey
  end
end

# {urn:vim25}VirtualMachineSnapshotInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   currentSnapshot - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   rootSnapshotList - Bosh::Director::CloudProviders::VSphere::VirtualMachineSnapshotTree
class VirtualMachineSnapshotInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :currentSnapshot
  attr_accessor :rootSnapshotList

  def initialize(dynamicType = nil, dynamicProperty = [], currentSnapshot = nil, rootSnapshotList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @currentSnapshot = currentSnapshot
    @rootSnapshotList = rootSnapshotList
  end
end

# {urn:vim25}VirtualMachineSnapshotTree
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   snapshot - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   id - SOAP::SOAPInt
#   createTime - SOAP::SOAPDateTime
#   state - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
#   quiesced - SOAP::SOAPBoolean
#   backupManifest - SOAP::SOAPString
#   childSnapshotList - Bosh::Director::CloudProviders::VSphere::VirtualMachineSnapshotTree
#   replaySupported - SOAP::SOAPBoolean
class VirtualMachineSnapshotTree < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :snapshot
  attr_accessor :vm
  attr_accessor :name
  attr_accessor :description
  attr_accessor :id
  attr_accessor :createTime
  attr_accessor :state
  attr_accessor :quiesced
  attr_accessor :backupManifest
  attr_accessor :childSnapshotList
  attr_accessor :replaySupported

  def initialize(dynamicType = nil, dynamicProperty = [], snapshot = nil, vm = nil, name = nil, description = nil, id = nil, createTime = nil, state = nil, quiesced = nil, backupManifest = nil, childSnapshotList = [], replaySupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @snapshot = snapshot
    @vm = vm
    @name = name
    @description = description
    @id = id
    @createTime = createTime
    @state = state
    @quiesced = quiesced
    @backupManifest = backupManifest
    @childSnapshotList = childSnapshotList
    @replaySupported = replaySupported
  end
end

# {urn:vim25}VirtualMachineUsageOnDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   committed - SOAP::SOAPLong
#   uncommitted - SOAP::SOAPLong
#   unshared - SOAP::SOAPLong
class VirtualMachineUsageOnDatastore < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :datastore
  attr_accessor :committed
  attr_accessor :uncommitted
  attr_accessor :unshared

  def initialize(dynamicType = nil, dynamicProperty = [], datastore = nil, committed = nil, uncommitted = nil, unshared = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @datastore = datastore
    @committed = committed
    @uncommitted = uncommitted
    @unshared = unshared
  end
end

# {urn:vim25}VirtualMachineStorageInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   perDatastoreUsage - Bosh::Director::CloudProviders::VSphere::VirtualMachineUsageOnDatastore
#   timestamp - SOAP::SOAPDateTime
class VirtualMachineStorageInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :perDatastoreUsage
  attr_accessor :timestamp

  def initialize(dynamicType = nil, dynamicProperty = [], perDatastoreUsage = [], timestamp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @perDatastoreUsage = perDatastoreUsage
    @timestamp = timestamp
  end
end

# {urn:vim25}VirtualMachineConfigSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   template - SOAP::SOAPBoolean
#   vmPathName - SOAP::SOAPString
#   memorySizeMB - SOAP::SOAPInt
#   cpuReservation - SOAP::SOAPInt
#   memoryReservation - SOAP::SOAPInt
#   numCpu - SOAP::SOAPInt
#   numEthernetCards - SOAP::SOAPInt
#   numVirtualDisks - SOAP::SOAPInt
#   uuid - SOAP::SOAPString
#   instanceUuid - SOAP::SOAPString
#   guestId - SOAP::SOAPString
#   guestFullName - SOAP::SOAPString
#   annotation - SOAP::SOAPString
#   product - Bosh::Director::CloudProviders::VSphere::VAppProductInfo
#   installBootRequired - SOAP::SOAPBoolean
#   ftInfo - Bosh::Director::CloudProviders::VSphere::FaultToleranceConfigInfo
class VirtualMachineConfigSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :template
  attr_accessor :vmPathName
  attr_accessor :memorySizeMB
  attr_accessor :cpuReservation
  attr_accessor :memoryReservation
  attr_accessor :numCpu
  attr_accessor :numEthernetCards
  attr_accessor :numVirtualDisks
  attr_accessor :uuid
  attr_accessor :instanceUuid
  attr_accessor :guestId
  attr_accessor :guestFullName
  attr_accessor :annotation
  attr_accessor :product
  attr_accessor :installBootRequired
  attr_accessor :ftInfo

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, template = nil, vmPathName = nil, memorySizeMB = nil, cpuReservation = nil, memoryReservation = nil, numCpu = nil, numEthernetCards = nil, numVirtualDisks = nil, uuid = nil, instanceUuid = nil, guestId = nil, guestFullName = nil, annotation = nil, product = nil, installBootRequired = nil, ftInfo = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @template = template
    @vmPathName = vmPathName
    @memorySizeMB = memorySizeMB
    @cpuReservation = cpuReservation
    @memoryReservation = memoryReservation
    @numCpu = numCpu
    @numEthernetCards = numEthernetCards
    @numVirtualDisks = numVirtualDisks
    @uuid = uuid
    @instanceUuid = instanceUuid
    @guestId = guestId
    @guestFullName = guestFullName
    @annotation = annotation
    @product = product
    @installBootRequired = installBootRequired
    @ftInfo = ftInfo
  end
end

# {urn:vim25}VirtualMachineQuickStats
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   overallCpuUsage - SOAP::SOAPInt
#   overallCpuDemand - SOAP::SOAPInt
#   guestMemoryUsage - SOAP::SOAPInt
#   hostMemoryUsage - SOAP::SOAPInt
#   guestHeartbeatStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   distributedCpuEntitlement - SOAP::SOAPInt
#   distributedMemoryEntitlement - SOAP::SOAPInt
#   staticCpuEntitlement - SOAP::SOAPInt
#   staticMemoryEntitlement - SOAP::SOAPInt
#   privateMemory - SOAP::SOAPInt
#   sharedMemory - SOAP::SOAPInt
#   swappedMemory - SOAP::SOAPInt
#   balloonedMemory - SOAP::SOAPInt
#   consumedOverheadMemory - SOAP::SOAPInt
#   ftLogBandwidth - SOAP::SOAPInt
#   ftSecondaryLatency - SOAP::SOAPInt
#   ftLatencyStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   compressedMemory - SOAP::SOAPLong
#   uptimeSeconds - SOAP::SOAPInt
class VirtualMachineQuickStats < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :overallCpuUsage
  attr_accessor :overallCpuDemand
  attr_accessor :guestMemoryUsage
  attr_accessor :hostMemoryUsage
  attr_accessor :guestHeartbeatStatus
  attr_accessor :distributedCpuEntitlement
  attr_accessor :distributedMemoryEntitlement
  attr_accessor :staticCpuEntitlement
  attr_accessor :staticMemoryEntitlement
  attr_accessor :privateMemory
  attr_accessor :sharedMemory
  attr_accessor :swappedMemory
  attr_accessor :balloonedMemory
  attr_accessor :consumedOverheadMemory
  attr_accessor :ftLogBandwidth
  attr_accessor :ftSecondaryLatency
  attr_accessor :ftLatencyStatus
  attr_accessor :compressedMemory
  attr_accessor :uptimeSeconds

  def initialize(dynamicType = nil, dynamicProperty = [], overallCpuUsage = nil, overallCpuDemand = nil, guestMemoryUsage = nil, hostMemoryUsage = nil, guestHeartbeatStatus = nil, distributedCpuEntitlement = nil, distributedMemoryEntitlement = nil, staticCpuEntitlement = nil, staticMemoryEntitlement = nil, privateMemory = nil, sharedMemory = nil, swappedMemory = nil, balloonedMemory = nil, consumedOverheadMemory = nil, ftLogBandwidth = nil, ftSecondaryLatency = nil, ftLatencyStatus = nil, compressedMemory = nil, uptimeSeconds = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @overallCpuUsage = overallCpuUsage
    @overallCpuDemand = overallCpuDemand
    @guestMemoryUsage = guestMemoryUsage
    @hostMemoryUsage = hostMemoryUsage
    @guestHeartbeatStatus = guestHeartbeatStatus
    @distributedCpuEntitlement = distributedCpuEntitlement
    @distributedMemoryEntitlement = distributedMemoryEntitlement
    @staticCpuEntitlement = staticCpuEntitlement
    @staticMemoryEntitlement = staticMemoryEntitlement
    @privateMemory = privateMemory
    @sharedMemory = sharedMemory
    @swappedMemory = swappedMemory
    @balloonedMemory = balloonedMemory
    @consumedOverheadMemory = consumedOverheadMemory
    @ftLogBandwidth = ftLogBandwidth
    @ftSecondaryLatency = ftSecondaryLatency
    @ftLatencyStatus = ftLatencyStatus
    @compressedMemory = compressedMemory
    @uptimeSeconds = uptimeSeconds
  end
end

# {urn:vim25}VirtualMachineGuestSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   guestId - SOAP::SOAPString
#   guestFullName - SOAP::SOAPString
#   toolsStatus - Bosh::Director::CloudProviders::VSphere::VirtualMachineToolsStatus
#   toolsVersionStatus - SOAP::SOAPString
#   toolsRunningStatus - SOAP::SOAPString
#   hostName - SOAP::SOAPString
#   ipAddress - SOAP::SOAPString
class VirtualMachineGuestSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :guestId
  attr_accessor :guestFullName
  attr_accessor :toolsStatus
  attr_accessor :toolsVersionStatus
  attr_accessor :toolsRunningStatus
  attr_accessor :hostName
  attr_accessor :ipAddress

  def initialize(dynamicType = nil, dynamicProperty = [], guestId = nil, guestFullName = nil, toolsStatus = nil, toolsVersionStatus = nil, toolsRunningStatus = nil, hostName = nil, ipAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @guestId = guestId
    @guestFullName = guestFullName
    @toolsStatus = toolsStatus
    @toolsVersionStatus = toolsVersionStatus
    @toolsRunningStatus = toolsRunningStatus
    @hostName = hostName
    @ipAddress = ipAddress
  end
end

# {urn:vim25}VirtualMachineStorageSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   committed - SOAP::SOAPLong
#   uncommitted - SOAP::SOAPLong
#   unshared - SOAP::SOAPLong
#   timestamp - SOAP::SOAPDateTime
class VirtualMachineStorageSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :committed
  attr_accessor :uncommitted
  attr_accessor :unshared
  attr_accessor :timestamp

  def initialize(dynamicType = nil, dynamicProperty = [], committed = nil, uncommitted = nil, unshared = nil, timestamp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @committed = committed
    @uncommitted = uncommitted
    @unshared = unshared
    @timestamp = timestamp
  end
end

# {urn:vim25}VirtualMachineSummary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   runtime - Bosh::Director::CloudProviders::VSphere::VirtualMachineRuntimeInfo
#   guest - Bosh::Director::CloudProviders::VSphere::VirtualMachineGuestSummary
#   config - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSummary
#   storage - Bosh::Director::CloudProviders::VSphere::VirtualMachineStorageSummary
#   quickStats - Bosh::Director::CloudProviders::VSphere::VirtualMachineQuickStats
#   overallStatus - Bosh::Director::CloudProviders::VSphere::ManagedEntityStatus
#   customValue - Bosh::Director::CloudProviders::VSphere::CustomFieldValue
class VirtualMachineSummary < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :runtime
  attr_accessor :guest
  attr_accessor :config
  attr_accessor :storage
  attr_accessor :quickStats
  attr_accessor :overallStatus
  attr_accessor :customValue

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, runtime = nil, guest = nil, config = nil, storage = nil, quickStats = nil, overallStatus = nil, customValue = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @runtime = runtime
    @guest = guest
    @config = config
    @storage = storage
    @quickStats = quickStats
    @overallStatus = overallStatus
    @customValue = customValue
  end
end

# {urn:vim25}VirtualMachineTargetInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineTargetInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachineCdromInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineCdromInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachineDatastoreInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::DatastoreSummary
#   capability - Bosh::Director::CloudProviders::VSphere::DatastoreCapability
#   maxFileSize - SOAP::SOAPLong
#   mode - SOAP::SOAPString
class VirtualMachineDatastoreInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :datastore
  attr_accessor :capability
  attr_accessor :maxFileSize
  attr_accessor :mode

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], datastore = nil, capability = nil, maxFileSize = nil, mode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @datastore = datastore
    @capability = capability
    @maxFileSize = maxFileSize
    @mode = mode
  end
end

# {urn:vim25}VirtualMachineDiskDeviceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualMachineDiskDeviceInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :capacity
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], capacity = nil, vm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @capacity = capacity
    @vm = vm
  end
end

# {urn:vim25}VirtualMachineIdeDiskDeviceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   partitionTable - Bosh::Director::CloudProviders::VSphere::VirtualMachineIdeDiskDevicePartitionInfo
class VirtualMachineIdeDiskDeviceInfo < VirtualMachineDiskDeviceInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :capacity
  attr_accessor :vm
  attr_accessor :partitionTable

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], capacity = nil, vm = [], partitionTable = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @capacity = capacity
    @vm = vm
    @partitionTable = partitionTable
  end
end

# {urn:vim25}VirtualMachineScsiDiskDeviceInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   capacity - SOAP::SOAPLong
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   disk - Bosh::Director::CloudProviders::VSphere::HostScsiDisk
#   transportHint - SOAP::SOAPString
#   lunNumber - SOAP::SOAPInt
class VirtualMachineScsiDiskDeviceInfo < VirtualMachineDiskDeviceInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :capacity
  attr_accessor :vm
  attr_accessor :disk
  attr_accessor :transportHint
  attr_accessor :lunNumber

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], capacity = nil, vm = [], disk = nil, transportHint = nil, lunNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @capacity = capacity
    @vm = vm
    @disk = disk
    @transportHint = transportHint
    @lunNumber = lunNumber
  end
end

# {urn:vim25}VirtualMachineFloppyInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineFloppyInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachineNetworkInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::NetworkSummary
class VirtualMachineNetworkInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @network = network
  end
end

# {urn:vim25}VirtualMachineParallelInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineParallelInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachinePciPassthroughInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   pciDevice - Bosh::Director::CloudProviders::VSphere::HostPciDevice
#   systemId - SOAP::SOAPString
class VirtualMachinePciPassthroughInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :pciDevice
  attr_accessor :systemId

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], pciDevice = nil, systemId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @pciDevice = pciDevice
    @systemId = systemId
  end
end

# {urn:vim25}VirtualMachineScsiPassthroughInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   scsiClass - SOAP::SOAPString
#   vendor - SOAP::SOAPString
#   physicalUnitNumber - SOAP::SOAPInt
class VirtualMachineScsiPassthroughInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :scsiClass
  attr_accessor :vendor
  attr_accessor :physicalUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], scsiClass = nil, vendor = nil, physicalUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @scsiClass = scsiClass
    @vendor = vendor
    @physicalUnitNumber = physicalUnitNumber
  end
end

# {urn:vim25}VirtualMachineSerialInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineSerialInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachineSoundInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
class VirtualMachineSoundInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
  end
end

# {urn:vim25}VirtualMachineUsbInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   configurationTag - SOAP::SOAPString
#   description - SOAP::SOAPString
#   vendor - SOAP::SOAPInt
#   product - SOAP::SOAPInt
#   physicalPath - SOAP::SOAPString
#   family - SOAP::SOAPString
#   speed - SOAP::SOAPString
#   summary - Bosh::Director::CloudProviders::VSphere::VirtualMachineSummary
class VirtualMachineUsbInfo < VirtualMachineTargetInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :configurationTag
  attr_accessor :description
  attr_accessor :vendor
  attr_accessor :product
  attr_accessor :physicalPath
  attr_accessor :family
  attr_accessor :speed
  attr_accessor :summary

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, configurationTag = [], description = nil, vendor = nil, product = nil, physicalPath = nil, family = [], speed = [], summary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @configurationTag = configurationTag
    @description = description
    @vendor = vendor
    @product = product
    @physicalPath = physicalPath
    @family = family
    @speed = speed
    @summary = summary
  end
end

# {urn:vim25}ToolsConfigInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   toolsVersion - SOAP::SOAPInt
#   afterPowerOn - SOAP::SOAPBoolean
#   afterResume - SOAP::SOAPBoolean
#   beforeGuestStandby - SOAP::SOAPBoolean
#   beforeGuestShutdown - SOAP::SOAPBoolean
#   beforeGuestReboot - SOAP::SOAPBoolean
#   toolsUpgradePolicy - SOAP::SOAPString
#   pendingCustomization - SOAP::SOAPString
#   syncTimeWithHost - SOAP::SOAPBoolean
class ToolsConfigInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :toolsVersion
  attr_accessor :afterPowerOn
  attr_accessor :afterResume
  attr_accessor :beforeGuestStandby
  attr_accessor :beforeGuestShutdown
  attr_accessor :beforeGuestReboot
  attr_accessor :toolsUpgradePolicy
  attr_accessor :pendingCustomization
  attr_accessor :syncTimeWithHost

  def initialize(dynamicType = nil, dynamicProperty = [], toolsVersion = nil, afterPowerOn = nil, afterResume = nil, beforeGuestStandby = nil, beforeGuestShutdown = nil, beforeGuestReboot = nil, toolsUpgradePolicy = nil, pendingCustomization = nil, syncTimeWithHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @toolsVersion = toolsVersion
    @afterPowerOn = afterPowerOn
    @afterResume = afterResume
    @beforeGuestStandby = beforeGuestStandby
    @beforeGuestShutdown = beforeGuestShutdown
    @beforeGuestReboot = beforeGuestReboot
    @toolsUpgradePolicy = toolsUpgradePolicy
    @pendingCustomization = pendingCustomization
    @syncTimeWithHost = syncTimeWithHost
  end
end

# {urn:vim25}VirtualHardware
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   numCPU - SOAP::SOAPInt
#   memoryMB - SOAP::SOAPInt
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
class VirtualHardware < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :numCPU
  attr_accessor :memoryMB
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], numCPU = nil, memoryMB = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @numCPU = numCPU
    @memoryMB = memoryMB
    @device = device
  end
end

# {urn:vim25}VirtualHardwareOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hwVersion - SOAP::SOAPInt
#   virtualDeviceOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceOption
#   deviceListReadonly - SOAP::SOAPBoolean
#   numCPU - SOAP::SOAPInt
#   numCpuReadonly - SOAP::SOAPBoolean
#   memoryMB - Bosh::Director::CloudProviders::VSphere::LongOption
#   numPCIControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numIDEControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numUSBControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSIOControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numPS2Controllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   licensingLimit - SOAP::SOAPString
#   numSupportedWwnPorts - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSupportedWwnNodes - Bosh::Director::CloudProviders::VSphere::IntOption
#   resourceConfigOption - Bosh::Director::CloudProviders::VSphere::ResourceConfigOption
class VirtualHardwareOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hwVersion
  attr_accessor :virtualDeviceOption
  attr_accessor :deviceListReadonly
  attr_accessor :numCPU
  attr_accessor :numCpuReadonly
  attr_accessor :memoryMB
  attr_accessor :numPCIControllers
  attr_accessor :numIDEControllers
  attr_accessor :numUSBControllers
  attr_accessor :numSIOControllers
  attr_accessor :numPS2Controllers
  attr_accessor :licensingLimit
  attr_accessor :numSupportedWwnPorts
  attr_accessor :numSupportedWwnNodes
  attr_accessor :resourceConfigOption

  def initialize(dynamicType = nil, dynamicProperty = [], hwVersion = nil, virtualDeviceOption = [], deviceListReadonly = nil, numCPU = [], numCpuReadonly = nil, memoryMB = nil, numPCIControllers = nil, numIDEControllers = nil, numUSBControllers = nil, numSIOControllers = nil, numPS2Controllers = nil, licensingLimit = [], numSupportedWwnPorts = nil, numSupportedWwnNodes = nil, resourceConfigOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hwVersion = hwVersion
    @virtualDeviceOption = virtualDeviceOption
    @deviceListReadonly = deviceListReadonly
    @numCPU = numCPU
    @numCpuReadonly = numCpuReadonly
    @memoryMB = memoryMB
    @numPCIControllers = numPCIControllers
    @numIDEControllers = numIDEControllers
    @numUSBControllers = numUSBControllers
    @numSIOControllers = numSIOControllers
    @numPS2Controllers = numPS2Controllers
    @licensingLimit = licensingLimit
    @numSupportedWwnPorts = numSupportedWwnPorts
    @numSupportedWwnNodes = numSupportedWwnNodes
    @resourceConfigOption = resourceConfigOption
  end
end

# {urn:vim25}CheckResult
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   warning - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class CheckResult < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :warning
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], vm = nil, host = nil, warning = [], error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @vm = vm
    @host = host
    @warning = warning
    @error = error
  end
end

# {urn:vim25}CustomizationSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   options - Bosh::Director::CloudProviders::VSphere::CustomizationOptions
#   identity - Bosh::Director::CloudProviders::VSphere::CustomizationIdentitySettings
#   globalIPSettings - Bosh::Director::CloudProviders::VSphere::CustomizationGlobalIPSettings
#   nicSettingMap - Bosh::Director::CloudProviders::VSphere::CustomizationAdapterMapping
#   encryptionKey - SOAP::SOAPByte
class CustomizationSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :options
  attr_accessor :identity
  attr_accessor :globalIPSettings
  attr_accessor :nicSettingMap
  attr_accessor :encryptionKey

  def initialize(dynamicType = nil, dynamicProperty = [], options = nil, identity = nil, globalIPSettings = nil, nicSettingMap = [], encryptionKey = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @options = options
    @identity = identity
    @globalIPSettings = globalIPSettings
    @nicSettingMap = nicSettingMap
    @encryptionKey = encryptionKey
  end
end

# {urn:vim25}CustomizationName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationName < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationFixedName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
class CustomizationFixedName < CustomizationName
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
  end
end

# {urn:vim25}CustomizationPrefixName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   base - SOAP::SOAPString
class CustomizationPrefixName < CustomizationName
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :base

  def initialize(dynamicType = nil, dynamicProperty = [], base = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @base = base
  end
end

# {urn:vim25}CustomizationVirtualMachineName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationVirtualMachineName < CustomizationName
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationUnknownName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationUnknownName < CustomizationName
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationCustomName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   argument - SOAP::SOAPString
class CustomizationCustomName < CustomizationName
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :argument

  def initialize(dynamicType = nil, dynamicProperty = [], argument = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @argument = argument
  end
end

# {urn:vim25}CustomizationPassword
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   value - SOAP::SOAPString
#   plainText - SOAP::SOAPBoolean
class CustomizationPassword < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :value
  attr_accessor :plainText

  def initialize(dynamicType = nil, dynamicProperty = [], value = nil, plainText = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @value = value
    @plainText = plainText
  end
end

# {urn:vim25}CustomizationOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationOptions < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationWinOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   changeSID - SOAP::SOAPBoolean
#   deleteAccounts - SOAP::SOAPBoolean
#   reboot - Bosh::Director::CloudProviders::VSphere::CustomizationSysprepRebootOption
class CustomizationWinOptions < CustomizationOptions
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :changeSID
  attr_accessor :deleteAccounts
  attr_accessor :reboot

  def initialize(dynamicType = nil, dynamicProperty = [], changeSID = nil, deleteAccounts = nil, reboot = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @changeSID = changeSID
    @deleteAccounts = deleteAccounts
    @reboot = reboot
  end
end

# {urn:vim25}CustomizationLinuxOptions
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationLinuxOptions < CustomizationOptions
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationGuiUnattended
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   password - Bosh::Director::CloudProviders::VSphere::CustomizationPassword
#   timeZone - SOAP::SOAPInt
#   autoLogon - SOAP::SOAPBoolean
#   autoLogonCount - SOAP::SOAPInt
class CustomizationGuiUnattended < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :password
  attr_accessor :timeZone
  attr_accessor :autoLogon
  attr_accessor :autoLogonCount

  def initialize(dynamicType = nil, dynamicProperty = [], password = nil, timeZone = nil, autoLogon = nil, autoLogonCount = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @password = password
    @timeZone = timeZone
    @autoLogon = autoLogon
    @autoLogonCount = autoLogonCount
  end
end

# {urn:vim25}CustomizationUserData
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fullName - SOAP::SOAPString
#   orgName - SOAP::SOAPString
#   computerName - Bosh::Director::CloudProviders::VSphere::CustomizationName
#   productId - SOAP::SOAPString
class CustomizationUserData < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fullName
  attr_accessor :orgName
  attr_accessor :computerName
  attr_accessor :productId

  def initialize(dynamicType = nil, dynamicProperty = [], fullName = nil, orgName = nil, computerName = nil, productId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fullName = fullName
    @orgName = orgName
    @computerName = computerName
    @productId = productId
  end
end

# {urn:vim25}CustomizationGuiRunOnce
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   commandList - SOAP::SOAPString
class CustomizationGuiRunOnce < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :commandList

  def initialize(dynamicType = nil, dynamicProperty = [], commandList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @commandList = commandList
  end
end

# {urn:vim25}CustomizationIdentification
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   joinWorkgroup - SOAP::SOAPString
#   joinDomain - SOAP::SOAPString
#   domainAdmin - SOAP::SOAPString
#   domainAdminPassword - Bosh::Director::CloudProviders::VSphere::CustomizationPassword
class CustomizationIdentification < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :joinWorkgroup
  attr_accessor :joinDomain
  attr_accessor :domainAdmin
  attr_accessor :domainAdminPassword

  def initialize(dynamicType = nil, dynamicProperty = [], joinWorkgroup = nil, joinDomain = nil, domainAdmin = nil, domainAdminPassword = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @joinWorkgroup = joinWorkgroup
    @joinDomain = joinDomain
    @domainAdmin = domainAdmin
    @domainAdminPassword = domainAdminPassword
  end
end

# {urn:vim25}CustomizationLicenseFilePrintData
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   autoMode - Bosh::Director::CloudProviders::VSphere::CustomizationLicenseDataMode
#   autoUsers - SOAP::SOAPInt
class CustomizationLicenseFilePrintData < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :autoMode
  attr_accessor :autoUsers

  def initialize(dynamicType = nil, dynamicProperty = [], autoMode = nil, autoUsers = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @autoMode = autoMode
    @autoUsers = autoUsers
  end
end

# {urn:vim25}CustomizationIdentitySettings
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationIdentitySettings < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationSysprepText
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   value - SOAP::SOAPString
class CustomizationSysprepText < CustomizationIdentitySettings
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @value = value
  end
end

# {urn:vim25}CustomizationSysprep
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   guiUnattended - Bosh::Director::CloudProviders::VSphere::CustomizationGuiUnattended
#   userData - Bosh::Director::CloudProviders::VSphere::CustomizationUserData
#   guiRunOnce - Bosh::Director::CloudProviders::VSphere::CustomizationGuiRunOnce
#   identification - Bosh::Director::CloudProviders::VSphere::CustomizationIdentification
#   licenseFilePrintData - Bosh::Director::CloudProviders::VSphere::CustomizationLicenseFilePrintData
class CustomizationSysprep < CustomizationIdentitySettings
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :guiUnattended
  attr_accessor :userData
  attr_accessor :guiRunOnce
  attr_accessor :identification
  attr_accessor :licenseFilePrintData

  def initialize(dynamicType = nil, dynamicProperty = [], guiUnattended = nil, userData = nil, guiRunOnce = nil, identification = nil, licenseFilePrintData = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @guiUnattended = guiUnattended
    @userData = userData
    @guiRunOnce = guiRunOnce
    @identification = identification
    @licenseFilePrintData = licenseFilePrintData
  end
end

# {urn:vim25}CustomizationLinuxPrep
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   hostName - Bosh::Director::CloudProviders::VSphere::CustomizationName
#   domain - SOAP::SOAPString
#   timeZone - SOAP::SOAPString
#   hwClockUTC - SOAP::SOAPBoolean
class CustomizationLinuxPrep < CustomizationIdentitySettings
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :hostName
  attr_accessor :domain
  attr_accessor :timeZone
  attr_accessor :hwClockUTC

  def initialize(dynamicType = nil, dynamicProperty = [], hostName = nil, domain = nil, timeZone = nil, hwClockUTC = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @hostName = hostName
    @domain = domain
    @timeZone = timeZone
    @hwClockUTC = hwClockUTC
  end
end

# {urn:vim25}CustomizationGlobalIPSettings
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   dnsSuffixList - SOAP::SOAPString
#   dnsServerList - SOAP::SOAPString
class CustomizationGlobalIPSettings < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :dnsSuffixList
  attr_accessor :dnsServerList

  def initialize(dynamicType = nil, dynamicProperty = [], dnsSuffixList = [], dnsServerList = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @dnsSuffixList = dnsSuffixList
    @dnsServerList = dnsServerList
  end
end

# {urn:vim25}CustomizationIPSettingsIpV6AddressSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ip - Bosh::Director::CloudProviders::VSphere::CustomizationIpV6Generator
#   gateway - SOAP::SOAPString
class CustomizationIPSettingsIpV6AddressSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ip
  attr_accessor :gateway

  def initialize(dynamicType = nil, dynamicProperty = [], ip = [], gateway = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ip = ip
    @gateway = gateway
  end
end

# {urn:vim25}CustomizationIPSettings
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ip - Bosh::Director::CloudProviders::VSphere::CustomizationIpGenerator
#   subnetMask - SOAP::SOAPString
#   gateway - SOAP::SOAPString
#   ipV6Spec - Bosh::Director::CloudProviders::VSphere::CustomizationIPSettingsIpV6AddressSpec
#   dnsServerList - SOAP::SOAPString
#   dnsDomain - SOAP::SOAPString
#   primaryWINS - SOAP::SOAPString
#   secondaryWINS - SOAP::SOAPString
#   netBIOS - Bosh::Director::CloudProviders::VSphere::CustomizationNetBIOSMode
class CustomizationIPSettings < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ip
  attr_accessor :subnetMask
  attr_accessor :gateway
  attr_accessor :ipV6Spec
  attr_accessor :dnsServerList
  attr_accessor :dnsDomain
  attr_accessor :primaryWINS
  attr_accessor :secondaryWINS
  attr_accessor :netBIOS

  def initialize(dynamicType = nil, dynamicProperty = [], ip = nil, subnetMask = nil, gateway = [], ipV6Spec = nil, dnsServerList = [], dnsDomain = nil, primaryWINS = nil, secondaryWINS = nil, netBIOS = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ip = ip
    @subnetMask = subnetMask
    @gateway = gateway
    @ipV6Spec = ipV6Spec
    @dnsServerList = dnsServerList
    @dnsDomain = dnsDomain
    @primaryWINS = primaryWINS
    @secondaryWINS = secondaryWINS
    @netBIOS = netBIOS
  end
end

# {urn:vim25}CustomizationIpGenerator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationIpGenerator < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationDhcpIpGenerator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationDhcpIpGenerator < CustomizationIpGenerator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationFixedIp
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
class CustomizationFixedIp < CustomizationIpGenerator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
  end
end

# {urn:vim25}CustomizationUnknownIpGenerator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationUnknownIpGenerator < CustomizationIpGenerator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationCustomIpGenerator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   argument - SOAP::SOAPString
class CustomizationCustomIpGenerator < CustomizationIpGenerator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :argument

  def initialize(dynamicType = nil, dynamicProperty = [], argument = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @argument = argument
  end
end

# {urn:vim25}CustomizationIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationIpV6Generator < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationDhcpIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationDhcpIpV6Generator < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationStatelessIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationStatelessIpV6Generator < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationFixedIpV6
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   ipAddress - SOAP::SOAPString
#   subnetMask - SOAP::SOAPInt
class CustomizationFixedIpV6 < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :ipAddress
  attr_accessor :subnetMask

  def initialize(dynamicType = nil, dynamicProperty = [], ipAddress = nil, subnetMask = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @ipAddress = ipAddress
    @subnetMask = subnetMask
  end
end

# {urn:vim25}CustomizationAutoIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationAutoIpV6Generator < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationUnknownIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class CustomizationUnknownIpV6Generator < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}CustomizationCustomIpV6Generator
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   argument - SOAP::SOAPString
class CustomizationCustomIpV6Generator < CustomizationIpV6Generator
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :argument

  def initialize(dynamicType = nil, dynamicProperty = [], argument = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @argument = argument
  end
end

# {urn:vim25}CustomizationAdapterMapping
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   macAddress - SOAP::SOAPString
#   adapter - Bosh::Director::CloudProviders::VSphere::CustomizationIPSettings
class CustomizationAdapterMapping < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :macAddress
  attr_accessor :adapter

  def initialize(dynamicType = nil, dynamicProperty = [], macAddress = nil, adapter = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @macAddress = macAddress
    @adapter = adapter
  end
end

# {urn:vim25}HostDiskMappingPartitionInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   fileSystem - SOAP::SOAPString
#   capacityInKb - SOAP::SOAPLong
class HostDiskMappingPartitionInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :fileSystem
  attr_accessor :capacityInKb

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, fileSystem = nil, capacityInKb = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @fileSystem = fileSystem
    @capacityInKb = capacityInKb
  end
end

# {urn:vim25}HostDiskMappingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   physicalPartition - Bosh::Director::CloudProviders::VSphere::HostDiskMappingPartitionInfo
#   name - SOAP::SOAPString
#   exclusive - SOAP::SOAPBoolean
class HostDiskMappingInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :physicalPartition
  attr_accessor :name
  attr_accessor :exclusive

  def initialize(dynamicType = nil, dynamicProperty = [], physicalPartition = nil, name = nil, exclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @physicalPartition = physicalPartition
    @name = name
    @exclusive = exclusive
  end
end

# {urn:vim25}HostDiskMappingPartitionOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   name - SOAP::SOAPString
#   fileSystem - SOAP::SOAPString
#   capacityInKb - SOAP::SOAPLong
class HostDiskMappingPartitionOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :name
  attr_accessor :fileSystem
  attr_accessor :capacityInKb

  def initialize(dynamicType = nil, dynamicProperty = [], name = nil, fileSystem = nil, capacityInKb = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @name = name
    @fileSystem = fileSystem
    @capacityInKb = capacityInKb
  end
end

# {urn:vim25}HostDiskMappingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   physicalPartition - Bosh::Director::CloudProviders::VSphere::HostDiskMappingPartitionOption
#   name - SOAP::SOAPString
class HostDiskMappingOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :physicalPartition
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], physicalPartition = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @physicalPartition = physicalPartition
    @name = name
  end
end

# {urn:vim25}VirtualDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
class VirtualDeviceBackingInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty

  def initialize(dynamicType = nil, dynamicProperty = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
  end
end

# {urn:vim25}VirtualDeviceFileBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualDeviceFileBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
  end
end

# {urn:vim25}VirtualCdromIsoBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualCdromIsoBackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
  end
end

# {urn:vim25}VirtualDiskSparseVer1BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMode - SOAP::SOAPString
#   split - SOAP::SOAPBoolean
#   writeThrough - SOAP::SOAPBoolean
#   spaceUsedInKB - SOAP::SOAPLong
#   contentId - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::VirtualDiskSparseVer1BackingInfo
class VirtualDiskSparseVer1BackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :spaceUsedInKB
  attr_accessor :contentId
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil, diskMode = nil, split = nil, writeThrough = nil, spaceUsedInKB = nil, contentId = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @spaceUsedInKB = spaceUsedInKB
    @contentId = contentId
    @parent = parent
  end
end

# {urn:vim25}VirtualDiskSparseVer2BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMode - SOAP::SOAPString
#   split - SOAP::SOAPBoolean
#   writeThrough - SOAP::SOAPBoolean
#   spaceUsedInKB - SOAP::SOAPLong
#   uuid - SOAP::SOAPString
#   contentId - SOAP::SOAPString
#   changeId - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::VirtualDiskSparseVer2BackingInfo
class VirtualDiskSparseVer2BackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :spaceUsedInKB
  attr_accessor :uuid
  attr_accessor :contentId
  attr_accessor :changeId
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil, diskMode = nil, split = nil, writeThrough = nil, spaceUsedInKB = nil, uuid = nil, contentId = nil, changeId = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @spaceUsedInKB = spaceUsedInKB
    @uuid = uuid
    @contentId = contentId
    @changeId = changeId
    @parent = parent
  end
end

# {urn:vim25}VirtualDiskFlatVer1BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMode - SOAP::SOAPString
#   split - SOAP::SOAPBoolean
#   writeThrough - SOAP::SOAPBoolean
#   contentId - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::VirtualDiskFlatVer1BackingInfo
class VirtualDiskFlatVer1BackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :contentId
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil, diskMode = nil, split = nil, writeThrough = nil, contentId = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @contentId = contentId
    @parent = parent
  end
end

# {urn:vim25}VirtualDiskFlatVer2BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskMode - SOAP::SOAPString
#   split - SOAP::SOAPBoolean
#   writeThrough - SOAP::SOAPBoolean
#   thinProvisioned - SOAP::SOAPBoolean
#   eagerlyScrub - SOAP::SOAPBoolean
#   uuid - SOAP::SOAPString
#   contentId - SOAP::SOAPString
#   changeId - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::VirtualDiskFlatVer2BackingInfo
class VirtualDiskFlatVer2BackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :thinProvisioned
  attr_accessor :eagerlyScrub
  attr_accessor :uuid
  attr_accessor :contentId
  attr_accessor :changeId
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil, diskMode = nil, split = nil, writeThrough = nil, thinProvisioned = nil, eagerlyScrub = nil, uuid = nil, contentId = nil, changeId = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @thinProvisioned = thinProvisioned
    @eagerlyScrub = eagerlyScrub
    @uuid = uuid
    @contentId = contentId
    @changeId = changeId
    @parent = parent
  end
end

# {urn:vim25}VirtualDiskRawDiskMappingVer1BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   lunUuid - SOAP::SOAPString
#   deviceName - SOAP::SOAPString
#   compatibilityMode - SOAP::SOAPString
#   diskMode - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   contentId - SOAP::SOAPString
#   changeId - SOAP::SOAPString
#   parent - Bosh::Director::CloudProviders::VSphere::VirtualDiskRawDiskMappingVer1BackingInfo
class VirtualDiskRawDiskMappingVer1BackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore
  attr_accessor :lunUuid
  attr_accessor :deviceName
  attr_accessor :compatibilityMode
  attr_accessor :diskMode
  attr_accessor :uuid
  attr_accessor :contentId
  attr_accessor :changeId
  attr_accessor :parent

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil, lunUuid = nil, deviceName = nil, compatibilityMode = nil, diskMode = nil, uuid = nil, contentId = nil, changeId = nil, parent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
    @lunUuid = lunUuid
    @deviceName = deviceName
    @compatibilityMode = compatibilityMode
    @diskMode = diskMode
    @uuid = uuid
    @contentId = contentId
    @changeId = changeId
    @parent = parent
  end
end

# {urn:vim25}VirtualFloppyImageBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualFloppyImageBackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
  end
end

# {urn:vim25}VirtualParallelPortFileBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualParallelPortFileBackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
  end
end

# {urn:vim25}VirtualSerialPortFileBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   fileName - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualSerialPortFileBackingInfo < VirtualDeviceFileBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :fileName
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], fileName = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @fileName = fileName
    @datastore = datastore
  end
end

# {urn:vim25}VirtualDeviceDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualDeviceDeviceBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualCdromPassthroughBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   exclusive - SOAP::SOAPBoolean
class VirtualCdromPassthroughBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :exclusive

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, exclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @exclusive = exclusive
  end
end

# {urn:vim25}VirtualCdromAtapiBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualCdromAtapiBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualDiskRawDiskVer2BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   descriptorFileName - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   changeId - SOAP::SOAPString
class VirtualDiskRawDiskVer2BackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :descriptorFileName
  attr_accessor :uuid
  attr_accessor :changeId

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, descriptorFileName = nil, uuid = nil, changeId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @descriptorFileName = descriptorFileName
    @uuid = uuid
    @changeId = changeId
  end
end

# {urn:vim25}VirtualDiskPartitionedRawDiskVer2BackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   descriptorFileName - SOAP::SOAPString
#   uuid - SOAP::SOAPString
#   changeId - SOAP::SOAPString
#   partition - SOAP::SOAPInt
class VirtualDiskPartitionedRawDiskVer2BackingInfo < VirtualDiskRawDiskVer2BackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :descriptorFileName
  attr_accessor :uuid
  attr_accessor :changeId
  attr_accessor :partition

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, descriptorFileName = nil, uuid = nil, changeId = nil, partition = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @descriptorFileName = descriptorFileName
    @uuid = uuid
    @changeId = changeId
    @partition = partition
  end
end

# {urn:vim25}VirtualEthernetCardNetworkBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   inPassthroughMode - SOAP::SOAPBoolean
class VirtualEthernetCardNetworkBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :network
  attr_accessor :inPassthroughMode

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, network = nil, inPassthroughMode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @network = network
    @inPassthroughMode = inPassthroughMode
  end
end

# {urn:vim25}VirtualEthernetCardLegacyNetworkBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualEthernetCardLegacyNetworkBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualFloppyDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualFloppyDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualPCIPassthroughDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   id - SOAP::SOAPString
#   deviceId - SOAP::SOAPString
#   systemId - SOAP::SOAPString
#   vendorId - SOAP::SOAPShort
class VirtualPCIPassthroughDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :id
  attr_accessor :deviceId
  attr_accessor :systemId
  attr_accessor :vendorId

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, id = nil, deviceId = nil, systemId = nil, vendorId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @id = id
    @deviceId = deviceId
    @systemId = systemId
    @vendorId = vendorId
  end
end

# {urn:vim25}VirtualParallelPortDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualParallelPortDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualPointingDeviceDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   hostPointingDevice - SOAP::SOAPString
class VirtualPointingDeviceDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :hostPointingDevice

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, hostPointingDevice = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @hostPointingDevice = hostPointingDevice
  end
end

# {urn:vim25}VirtualSCSIPassthroughDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualSCSIPassthroughDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualSerialPortDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualSerialPortDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualSoundCardDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualSoundCardDeviceBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualUSBUSBBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualUSBUSBBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualUSBRemoteHostBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   hostname - SOAP::SOAPString
class VirtualUSBRemoteHostBackingInfo < VirtualDeviceDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :hostname

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, hostname = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @hostname = hostname
  end
end

# {urn:vim25}VirtualDeviceRemoteDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualDeviceRemoteDeviceBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualCdromRemotePassthroughBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
#   exclusive - SOAP::SOAPBoolean
class VirtualCdromRemotePassthroughBackingInfo < VirtualDeviceRemoteDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect
  attr_accessor :exclusive

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil, exclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
    @exclusive = exclusive
  end
end

# {urn:vim25}VirtualCdromRemoteAtapiBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualCdromRemoteAtapiBackingInfo < VirtualDeviceRemoteDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualFloppyRemoteDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   deviceName - SOAP::SOAPString
#   useAutoDetect - SOAP::SOAPBoolean
class VirtualFloppyRemoteDeviceBackingInfo < VirtualDeviceRemoteDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :deviceName
  attr_accessor :useAutoDetect

  def initialize(dynamicType = nil, dynamicProperty = [], deviceName = nil, useAutoDetect = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @deviceName = deviceName
    @useAutoDetect = useAutoDetect
  end
end

# {urn:vim25}VirtualDevicePipeBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   pipeName - SOAP::SOAPString
class VirtualDevicePipeBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :pipeName

  def initialize(dynamicType = nil, dynamicProperty = [], pipeName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @pipeName = pipeName
  end
end

# {urn:vim25}VirtualSerialPortPipeBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   pipeName - SOAP::SOAPString
#   endpoint - SOAP::SOAPString
#   noRxLoss - SOAP::SOAPBoolean
class VirtualSerialPortPipeBackingInfo < VirtualDevicePipeBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :pipeName
  attr_accessor :endpoint
  attr_accessor :noRxLoss

  def initialize(dynamicType = nil, dynamicProperty = [], pipeName = nil, endpoint = nil, noRxLoss = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @pipeName = pipeName
    @endpoint = endpoint
    @noRxLoss = noRxLoss
  end
end

# {urn:vim25}VirtualDeviceURIBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serviceURI - SOAP::SOAPString
#   direction - SOAP::SOAPString
#   proxyURI - SOAP::SOAPString
class VirtualDeviceURIBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serviceURI
  attr_accessor :direction
  attr_accessor :proxyURI

  def initialize(dynamicType = nil, dynamicProperty = [], serviceURI = nil, direction = nil, proxyURI = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serviceURI = serviceURI
    @direction = direction
    @proxyURI = proxyURI
  end
end

# {urn:vim25}VirtualSerialPortURIBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   serviceURI - SOAP::SOAPString
#   direction - SOAP::SOAPString
#   proxyURI - SOAP::SOAPString
class VirtualSerialPortURIBackingInfo < VirtualDeviceURIBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :serviceURI
  attr_accessor :direction
  attr_accessor :proxyURI

  def initialize(dynamicType = nil, dynamicProperty = [], serviceURI = nil, direction = nil, proxyURI = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @serviceURI = serviceURI
    @direction = direction
    @proxyURI = proxyURI
  end
end

# {urn:vim25}VirtualEthernetCardDistributedVirtualPortBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   port - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortConnection
class VirtualEthernetCardDistributedVirtualPortBackingInfo < VirtualDeviceBackingInfo
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :port

  def initialize(dynamicType = nil, dynamicProperty = [], port = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @port = port
  end
end

# {urn:vim25}VirtualDeviceConnectInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   startConnected - SOAP::SOAPBoolean
#   allowGuestControl - SOAP::SOAPBoolean
#   connected - SOAP::SOAPBoolean
#   status - SOAP::SOAPString
class VirtualDeviceConnectInfo < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :startConnected
  attr_accessor :allowGuestControl
  attr_accessor :connected
  attr_accessor :status

  def initialize(dynamicType = nil, dynamicProperty = [], startConnected = nil, allowGuestControl = nil, connected = nil, status = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @startConnected = startConnected
    @allowGuestControl = allowGuestControl
    @connected = connected
    @status = status
  end
end

# {urn:vim25}VirtualDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualDevice < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualCdrom
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualCdrom < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
class VirtualController < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
  end
end

# {urn:vim25}VirtualIDEController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
class VirtualIDEController < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
  end
end

# {urn:vim25}VirtualPCIController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
class VirtualPCIController < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
  end
end

# {urn:vim25}VirtualPS2Controller
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
class VirtualPS2Controller < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
  end
end

# {urn:vim25}VirtualSCSIController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   hotAddRemove - SOAP::SOAPBoolean
#   sharedBus - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualSCSIController < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :hotAddRemove
  attr_accessor :sharedBus
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], hotAddRemove = nil, sharedBus = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @hotAddRemove = hotAddRemove
    @sharedBus = sharedBus
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}ParaVirtualSCSIController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   hotAddRemove - SOAP::SOAPBoolean
#   sharedBus - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class ParaVirtualSCSIController < VirtualSCSIController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :hotAddRemove
  attr_accessor :sharedBus
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], hotAddRemove = nil, sharedBus = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @hotAddRemove = hotAddRemove
    @sharedBus = sharedBus
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualBusLogicController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   hotAddRemove - SOAP::SOAPBoolean
#   sharedBus - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualBusLogicController < VirtualSCSIController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :hotAddRemove
  attr_accessor :sharedBus
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], hotAddRemove = nil, sharedBus = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @hotAddRemove = hotAddRemove
    @sharedBus = sharedBus
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualLsiLogicController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   hotAddRemove - SOAP::SOAPBoolean
#   sharedBus - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualLsiLogicController < VirtualSCSIController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :hotAddRemove
  attr_accessor :sharedBus
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], hotAddRemove = nil, sharedBus = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @hotAddRemove = hotAddRemove
    @sharedBus = sharedBus
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualLsiLogicSASController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   hotAddRemove - SOAP::SOAPBoolean
#   sharedBus - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualLsiLogicSASController < VirtualSCSIController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :hotAddRemove
  attr_accessor :sharedBus
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], hotAddRemove = nil, sharedBus = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @hotAddRemove = hotAddRemove
    @sharedBus = sharedBus
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualSIOController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
class VirtualSIOController < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
  end
end

# {urn:vim25}VirtualUSBController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   busNumber - SOAP::SOAPInt
#   device - SOAP::SOAPInt
#   autoConnectDevices - SOAP::SOAPBoolean
#   ehciEnabled - SOAP::SOAPBoolean
class VirtualUSBController < VirtualController
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :busNumber
  attr_accessor :device
  attr_accessor :autoConnectDevices
  attr_accessor :ehciEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, busNumber = nil, device = [], autoConnectDevices = nil, ehciEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @busNumber = busNumber
    @device = device
    @autoConnectDevices = autoConnectDevices
    @ehciEnabled = ehciEnabled
  end
end

# {urn:vim25}VirtualDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   capacityInKB - SOAP::SOAPLong
#   shares - Bosh::Director::CloudProviders::VSphere::SharesInfo
#   storageIOAllocation - Bosh::Director::CloudProviders::VSphere::StorageIOAllocationInfo
class VirtualDisk < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :capacityInKB
  attr_accessor :shares
  attr_accessor :storageIOAllocation

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, capacityInKB = nil, shares = nil, storageIOAllocation = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @capacityInKB = capacityInKB
    @shares = shares
    @storageIOAllocation = storageIOAllocation
  end
end

# {urn:vim25}VirtualEthernetCard
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualEthernetCard < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualE1000
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualE1000 < VirtualEthernetCard
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualPCNet32
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualPCNet32 < VirtualEthernetCard
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualVmxnet
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualVmxnet < VirtualEthernetCard
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualVmxnet2
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualVmxnet2 < VirtualVmxnet
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualVmxnet3
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   addressType - SOAP::SOAPString
#   macAddress - SOAP::SOAPString
#   wakeOnLanEnabled - SOAP::SOAPBoolean
class VirtualVmxnet3 < VirtualVmxnet
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :addressType
  attr_accessor :macAddress
  attr_accessor :wakeOnLanEnabled

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, addressType = nil, macAddress = nil, wakeOnLanEnabled = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @addressType = addressType
    @macAddress = macAddress
    @wakeOnLanEnabled = wakeOnLanEnabled
  end
end

# {urn:vim25}VirtualFloppy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualFloppy < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualKeyboard
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualKeyboard < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualPCIPassthrough
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualPCIPassthrough < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualParallelPort
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualParallelPort < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualPointingDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualPointingDevice < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualSCSIPassthrough
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualSCSIPassthrough < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualSerialPort
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   yieldOnPoll - SOAP::SOAPBoolean
class VirtualSerialPort < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :yieldOnPoll

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, yieldOnPoll = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @yieldOnPoll = yieldOnPoll
  end
end

# {urn:vim25}VirtualSoundCard
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualSoundCard < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualEnsoniq1371
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualEnsoniq1371 < VirtualSoundCard
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualSoundBlaster16
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualSoundBlaster16 < VirtualSoundCard
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualUSB
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   connected - SOAP::SOAPBoolean
#   vendor - SOAP::SOAPInt
#   product - SOAP::SOAPInt
#   family - SOAP::SOAPString
#   speed - SOAP::SOAPString
class VirtualUSB < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :connected
  attr_accessor :vendor
  attr_accessor :product
  attr_accessor :family
  attr_accessor :speed

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, connected = nil, vendor = nil, product = nil, family = [], speed = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @connected = connected
    @vendor = vendor
    @product = product
    @family = family
    @speed = speed
  end
end

# {urn:vim25}VirtualMachineVMCIDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   id - SOAP::SOAPLong
#   allowUnrestrictedCommunication - SOAP::SOAPBoolean
class VirtualMachineVMCIDevice < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :id
  attr_accessor :allowUnrestrictedCommunication

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, id = nil, allowUnrestrictedCommunication = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @id = id
    @allowUnrestrictedCommunication = allowUnrestrictedCommunication
  end
end

# {urn:vim25}VirtualMachineVMIROM
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
class VirtualMachineVMIROM < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
  end
end

# {urn:vim25}VirtualMachineVideoCard
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   key - SOAP::SOAPInt
#   deviceInfo - Bosh::Director::CloudProviders::VSphere::Description
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
#   connectable - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectInfo
#   controllerKey - SOAP::SOAPInt
#   unitNumber - SOAP::SOAPInt
#   videoRamSizeInKB - SOAP::SOAPLong
#   numDisplays - SOAP::SOAPInt
#   useAutoDetect - SOAP::SOAPBoolean
#   enable3DSupport - SOAP::SOAPBoolean
class VirtualMachineVideoCard < VirtualDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :key
  attr_accessor :deviceInfo
  attr_accessor :backing
  attr_accessor :connectable
  attr_accessor :controllerKey
  attr_accessor :unitNumber
  attr_accessor :videoRamSizeInKB
  attr_accessor :numDisplays
  attr_accessor :useAutoDetect
  attr_accessor :enable3DSupport

  def initialize(dynamicType = nil, dynamicProperty = [], key = nil, deviceInfo = nil, backing = nil, connectable = nil, controllerKey = nil, unitNumber = nil, videoRamSizeInKB = nil, numDisplays = nil, useAutoDetect = nil, enable3DSupport = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @key = key
    @deviceInfo = deviceInfo
    @backing = backing
    @connectable = connectable
    @controllerKey = controllerKey
    @unitNumber = unitNumber
    @videoRamSizeInKB = videoRamSizeInKB
    @numDisplays = numDisplays
    @useAutoDetect = useAutoDetect
    @enable3DSupport = enable3DSupport
  end
end

# {urn:vim25}VirtualDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
class VirtualDeviceBackingOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
  end
end

# {urn:vim25}VirtualDeviceFileBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualDeviceFileBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
  end
end

# {urn:vim25}VirtualCdromIsoBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualCdromIsoBackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
  end
end

# {urn:vim25}VirtualDiskSparseVer1BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   diskModes - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   split - Bosh::Director::CloudProviders::VSphere::BoolOption
#   writeThrough - Bosh::Director::CloudProviders::VSphere::BoolOption
#   growable - SOAP::SOAPBoolean
class VirtualDiskSparseVer1BackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions
  attr_accessor :diskModes
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :growable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil, diskModes = nil, split = nil, writeThrough = nil, growable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
    @diskModes = diskModes
    @split = split
    @writeThrough = writeThrough
    @growable = growable
  end
end

# {urn:vim25}VirtualDiskSparseVer2BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   diskMode - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   split - Bosh::Director::CloudProviders::VSphere::BoolOption
#   writeThrough - Bosh::Director::CloudProviders::VSphere::BoolOption
#   growable - SOAP::SOAPBoolean
#   hotGrowable - SOAP::SOAPBoolean
#   uuid - SOAP::SOAPBoolean
class VirtualDiskSparseVer2BackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :growable
  attr_accessor :hotGrowable
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil, diskMode = nil, split = nil, writeThrough = nil, growable = nil, hotGrowable = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @growable = growable
    @hotGrowable = hotGrowable
    @uuid = uuid
  end
end

# {urn:vim25}VirtualDiskFlatVer1BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   diskMode - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   split - Bosh::Director::CloudProviders::VSphere::BoolOption
#   writeThrough - Bosh::Director::CloudProviders::VSphere::BoolOption
#   growable - SOAP::SOAPBoolean
class VirtualDiskFlatVer1BackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :growable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil, diskMode = nil, split = nil, writeThrough = nil, growable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @growable = growable
  end
end

# {urn:vim25}VirtualDiskFlatVer2BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   diskMode - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   split - Bosh::Director::CloudProviders::VSphere::BoolOption
#   writeThrough - Bosh::Director::CloudProviders::VSphere::BoolOption
#   growable - SOAP::SOAPBoolean
#   hotGrowable - SOAP::SOAPBoolean
#   uuid - SOAP::SOAPBoolean
#   thinProvisioned - Bosh::Director::CloudProviders::VSphere::BoolOption
#   eagerlyScrub - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualDiskFlatVer2BackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions
  attr_accessor :diskMode
  attr_accessor :split
  attr_accessor :writeThrough
  attr_accessor :growable
  attr_accessor :hotGrowable
  attr_accessor :uuid
  attr_accessor :thinProvisioned
  attr_accessor :eagerlyScrub

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil, diskMode = nil, split = nil, writeThrough = nil, growable = nil, hotGrowable = nil, uuid = nil, thinProvisioned = nil, eagerlyScrub = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
    @diskMode = diskMode
    @split = split
    @writeThrough = writeThrough
    @growable = growable
    @hotGrowable = hotGrowable
    @uuid = uuid
    @thinProvisioned = thinProvisioned
    @eagerlyScrub = eagerlyScrub
  end
end

# {urn:vim25}VirtualFloppyImageBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualFloppyImageBackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
  end
end

# {urn:vim25}VirtualParallelPortFileBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualParallelPortFileBackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
  end
end

# {urn:vim25}VirtualSerialPortFileBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   fileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualSerialPortFileBackingOption < VirtualDeviceFileBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :fileNameExtensions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, fileNameExtensions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @fileNameExtensions = fileNameExtensions
  end
end

# {urn:vim25}VirtualDeviceDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualDeviceDeviceBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualCdromPassthroughBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   exclusive - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualCdromPassthroughBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :exclusive

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, exclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @exclusive = exclusive
  end
end

# {urn:vim25}VirtualCdromAtapiBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualCdromAtapiBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualCdromRemoteAtapiBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualCdromRemoteAtapiBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualDiskRawDiskVer2BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   descriptorFileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   uuid - SOAP::SOAPBoolean
class VirtualDiskRawDiskVer2BackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :descriptorFileNameExtensions
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, descriptorFileNameExtensions = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @descriptorFileNameExtensions = descriptorFileNameExtensions
    @uuid = uuid
  end
end

# {urn:vim25}VirtualDiskPartitionedRawDiskVer2BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   descriptorFileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   uuid - SOAP::SOAPBoolean
class VirtualDiskPartitionedRawDiskVer2BackingOption < VirtualDiskRawDiskVer2BackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :descriptorFileNameExtensions
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, descriptorFileNameExtensions = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @descriptorFileNameExtensions = descriptorFileNameExtensions
    @uuid = uuid
  end
end

# {urn:vim25}VirtualDiskRawDiskMappingVer1BackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   descriptorFileNameExtensions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   compatibilityMode - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   diskMode - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   uuid - SOAP::SOAPBoolean
class VirtualDiskRawDiskMappingVer1BackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :descriptorFileNameExtensions
  attr_accessor :compatibilityMode
  attr_accessor :diskMode
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, descriptorFileNameExtensions = nil, compatibilityMode = nil, diskMode = nil, uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @descriptorFileNameExtensions = descriptorFileNameExtensions
    @compatibilityMode = compatibilityMode
    @diskMode = diskMode
    @uuid = uuid
  end
end

# {urn:vim25}VirtualEthernetCardNetworkBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualEthernetCardNetworkBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualEthernetCardLegacyNetworkBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualEthernetCardLegacyNetworkBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualFloppyDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualFloppyDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualPCIPassthroughDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualPCIPassthroughDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualParallelPortDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualParallelPortDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualPointingDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   hostPointingDevice - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualPointingDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :hostPointingDevice

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, hostPointingDevice = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @hostPointingDevice = hostPointingDevice
  end
end

# {urn:vim25}VirtualSCSIPassthroughDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualSCSIPassthroughDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualSerialPortDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualSerialPortDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualSoundCardDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualSoundCardDeviceBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualUSBUSBBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualUSBUSBBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualUSBRemoteHostBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualUSBRemoteHostBackingOption < VirtualDeviceDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualDeviceRemoteDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualDeviceRemoteDeviceBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualCdromRemotePassthroughBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
#   exclusive - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualCdromRemotePassthroughBackingOption < VirtualDeviceRemoteDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable
  attr_accessor :exclusive

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil, exclusive = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
    @exclusive = exclusive
  end
end

# {urn:vim25}VirtualFloppyRemoteDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   autoDetectAvailable - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualFloppyRemoteDeviceBackingOption < VirtualDeviceRemoteDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :autoDetectAvailable

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, autoDetectAvailable = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @autoDetectAvailable = autoDetectAvailable
  end
end

# {urn:vim25}VirtualDevicePipeBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
class VirtualDevicePipeBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
  end
end

# {urn:vim25}VirtualSerialPortPipeBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   endpoint - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   noRxLoss - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualSerialPortPipeBackingOption < VirtualDevicePipeBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :endpoint
  attr_accessor :noRxLoss

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, endpoint = nil, noRxLoss = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @endpoint = endpoint
    @noRxLoss = noRxLoss
  end
end

# {urn:vim25}VirtualDeviceURIBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   directions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualDeviceURIBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :directions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, directions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @directions = directions
  end
end

# {urn:vim25}VirtualSerialPortURIBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   directions - Bosh::Director::CloudProviders::VSphere::ChoiceOption
class VirtualSerialPortURIBackingOption < VirtualDeviceURIBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :directions

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, directions = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @directions = directions
  end
end

# {urn:vim25}VirtualEthernetCardDVPortBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
class VirtualEthernetCardDVPortBackingOption < VirtualDeviceBackingOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
  end
end

# {urn:vim25}VirtualDeviceConnectOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   startConnected - Bosh::Director::CloudProviders::VSphere::BoolOption
#   allowGuestControl - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualDeviceConnectOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :startConnected
  attr_accessor :allowGuestControl

  def initialize(dynamicType = nil, dynamicProperty = [], startConnected = nil, allowGuestControl = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @startConnected = startConnected
    @allowGuestControl = allowGuestControl
  end
end

# {urn:vim25}VirtualDeviceOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualDeviceOption < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualCdromOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualCdromOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
class VirtualControllerOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
  end
end

# {urn:vim25}VirtualIDEControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numIDEDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numIDECdroms - Bosh::Director::CloudProviders::VSphere::IntOption
class VirtualIDEControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numIDEDisks
  attr_accessor :numIDECdroms

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numIDEDisks = nil, numIDECdroms = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numIDEDisks = numIDEDisks
    @numIDECdroms = numIDECdroms
  end
end

# {urn:vim25}VirtualPCIControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numEthernetCards - Bosh::Director::CloudProviders::VSphere::IntOption
#   numVideoCards - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSoundCards - Bosh::Director::CloudProviders::VSphere::IntOption
#   numVmiRoms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numVmciDevices - Bosh::Director::CloudProviders::VSphere::IntOption
#   numPCIPassthroughDevices - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSasSCSIControllers - Bosh::Director::CloudProviders::VSphere::IntOption
#   numVmxnet3EthernetCards - Bosh::Director::CloudProviders::VSphere::IntOption
#   numParaVirtualSCSIControllers - Bosh::Director::CloudProviders::VSphere::IntOption
class VirtualPCIControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIControllers
  attr_accessor :numEthernetCards
  attr_accessor :numVideoCards
  attr_accessor :numSoundCards
  attr_accessor :numVmiRoms
  attr_accessor :numVmciDevices
  attr_accessor :numPCIPassthroughDevices
  attr_accessor :numSasSCSIControllers
  attr_accessor :numVmxnet3EthernetCards
  attr_accessor :numParaVirtualSCSIControllers

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIControllers = nil, numEthernetCards = nil, numVideoCards = nil, numSoundCards = nil, numVmiRoms = nil, numVmciDevices = nil, numPCIPassthroughDevices = nil, numSasSCSIControllers = nil, numVmxnet3EthernetCards = nil, numParaVirtualSCSIControllers = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIControllers = numSCSIControllers
    @numEthernetCards = numEthernetCards
    @numVideoCards = numVideoCards
    @numSoundCards = numSoundCards
    @numVmiRoms = numVmiRoms
    @numVmciDevices = numVmciDevices
    @numPCIPassthroughDevices = numPCIPassthroughDevices
    @numSasSCSIControllers = numSasSCSIControllers
    @numVmxnet3EthernetCards = numVmxnet3EthernetCards
    @numParaVirtualSCSIControllers = numParaVirtualSCSIControllers
  end
end

# {urn:vim25}VirtualPS2ControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numKeyboards - Bosh::Director::CloudProviders::VSphere::IntOption
#   numPointingDevices - Bosh::Director::CloudProviders::VSphere::IntOption
class VirtualPS2ControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numKeyboards
  attr_accessor :numPointingDevices

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numKeyboards = nil, numPointingDevices = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numKeyboards = numKeyboards
    @numPointingDevices = numPointingDevices
  end
end

# {urn:vim25}VirtualSCSIControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSICdroms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSIPassthrough - Bosh::Director::CloudProviders::VSphere::IntOption
#   sharing - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   defaultSharedIndex - SOAP::SOAPInt
#   hotAddRemove - Bosh::Director::CloudProviders::VSphere::BoolOption
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualSCSIControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIDisks
  attr_accessor :numSCSICdroms
  attr_accessor :numSCSIPassthrough
  attr_accessor :sharing
  attr_accessor :defaultSharedIndex
  attr_accessor :hotAddRemove
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIDisks = nil, numSCSICdroms = nil, numSCSIPassthrough = nil, sharing = [], defaultSharedIndex = nil, hotAddRemove = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIDisks = numSCSIDisks
    @numSCSICdroms = numSCSICdroms
    @numSCSIPassthrough = numSCSIPassthrough
    @sharing = sharing
    @defaultSharedIndex = defaultSharedIndex
    @hotAddRemove = hotAddRemove
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}ParaVirtualSCSIControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSICdroms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSIPassthrough - Bosh::Director::CloudProviders::VSphere::IntOption
#   sharing - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   defaultSharedIndex - SOAP::SOAPInt
#   hotAddRemove - Bosh::Director::CloudProviders::VSphere::BoolOption
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class ParaVirtualSCSIControllerOption < VirtualSCSIControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIDisks
  attr_accessor :numSCSICdroms
  attr_accessor :numSCSIPassthrough
  attr_accessor :sharing
  attr_accessor :defaultSharedIndex
  attr_accessor :hotAddRemove
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIDisks = nil, numSCSICdroms = nil, numSCSIPassthrough = nil, sharing = [], defaultSharedIndex = nil, hotAddRemove = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIDisks = numSCSIDisks
    @numSCSICdroms = numSCSICdroms
    @numSCSIPassthrough = numSCSIPassthrough
    @sharing = sharing
    @defaultSharedIndex = defaultSharedIndex
    @hotAddRemove = hotAddRemove
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualBusLogicControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSICdroms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSIPassthrough - Bosh::Director::CloudProviders::VSphere::IntOption
#   sharing - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   defaultSharedIndex - SOAP::SOAPInt
#   hotAddRemove - Bosh::Director::CloudProviders::VSphere::BoolOption
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualBusLogicControllerOption < VirtualSCSIControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIDisks
  attr_accessor :numSCSICdroms
  attr_accessor :numSCSIPassthrough
  attr_accessor :sharing
  attr_accessor :defaultSharedIndex
  attr_accessor :hotAddRemove
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIDisks = nil, numSCSICdroms = nil, numSCSIPassthrough = nil, sharing = [], defaultSharedIndex = nil, hotAddRemove = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIDisks = numSCSIDisks
    @numSCSICdroms = numSCSICdroms
    @numSCSIPassthrough = numSCSIPassthrough
    @sharing = sharing
    @defaultSharedIndex = defaultSharedIndex
    @hotAddRemove = hotAddRemove
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualLsiLogicControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSICdroms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSIPassthrough - Bosh::Director::CloudProviders::VSphere::IntOption
#   sharing - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   defaultSharedIndex - SOAP::SOAPInt
#   hotAddRemove - Bosh::Director::CloudProviders::VSphere::BoolOption
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualLsiLogicControllerOption < VirtualSCSIControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIDisks
  attr_accessor :numSCSICdroms
  attr_accessor :numSCSIPassthrough
  attr_accessor :sharing
  attr_accessor :defaultSharedIndex
  attr_accessor :hotAddRemove
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIDisks = nil, numSCSICdroms = nil, numSCSIPassthrough = nil, sharing = [], defaultSharedIndex = nil, hotAddRemove = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIDisks = numSCSIDisks
    @numSCSICdroms = numSCSICdroms
    @numSCSIPassthrough = numSCSIPassthrough
    @sharing = sharing
    @defaultSharedIndex = defaultSharedIndex
    @hotAddRemove = hotAddRemove
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualLsiLogicSASControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numSCSIDisks - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSICdroms - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSCSIPassthrough - Bosh::Director::CloudProviders::VSphere::IntOption
#   sharing - Bosh::Director::CloudProviders::VSphere::VirtualSCSISharing
#   defaultSharedIndex - SOAP::SOAPInt
#   hotAddRemove - Bosh::Director::CloudProviders::VSphere::BoolOption
#   scsiCtlrUnitNumber - SOAP::SOAPInt
class VirtualLsiLogicSASControllerOption < VirtualSCSIControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numSCSIDisks
  attr_accessor :numSCSICdroms
  attr_accessor :numSCSIPassthrough
  attr_accessor :sharing
  attr_accessor :defaultSharedIndex
  attr_accessor :hotAddRemove
  attr_accessor :scsiCtlrUnitNumber

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numSCSIDisks = nil, numSCSICdroms = nil, numSCSIPassthrough = nil, sharing = [], defaultSharedIndex = nil, hotAddRemove = nil, scsiCtlrUnitNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numSCSIDisks = numSCSIDisks
    @numSCSICdroms = numSCSICdroms
    @numSCSIPassthrough = numSCSIPassthrough
    @sharing = sharing
    @defaultSharedIndex = defaultSharedIndex
    @hotAddRemove = hotAddRemove
    @scsiCtlrUnitNumber = scsiCtlrUnitNumber
  end
end

# {urn:vim25}VirtualSIOControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   numFloppyDrives - Bosh::Director::CloudProviders::VSphere::IntOption
#   numSerialPorts - Bosh::Director::CloudProviders::VSphere::IntOption
#   numParallelPorts - Bosh::Director::CloudProviders::VSphere::IntOption
class VirtualSIOControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :numFloppyDrives
  attr_accessor :numSerialPorts
  attr_accessor :numParallelPorts

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], numFloppyDrives = nil, numSerialPorts = nil, numParallelPorts = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @numFloppyDrives = numFloppyDrives
    @numSerialPorts = numSerialPorts
    @numParallelPorts = numParallelPorts
  end
end

# {urn:vim25}VirtualUSBControllerOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   devices - Bosh::Director::CloudProviders::VSphere::IntOption
#   supportedDevice - SOAP::SOAPString
#   autoConnectDevices - Bosh::Director::CloudProviders::VSphere::BoolOption
#   ehciSupported - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualUSBControllerOption < VirtualControllerOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :devices
  attr_accessor :supportedDevice
  attr_accessor :autoConnectDevices
  attr_accessor :ehciSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, devices = nil, supportedDevice = [], autoConnectDevices = nil, ehciSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @devices = devices
    @supportedDevice = supportedDevice
    @autoConnectDevices = autoConnectDevices
    @ehciSupported = ehciSupported
  end
end

# {urn:vim25}VirtualDiskOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   capacityInKB - Bosh::Director::CloudProviders::VSphere::LongOption
#   ioAllocationOption - Bosh::Director::CloudProviders::VSphere::StorageIOAllocationOption
class VirtualDiskOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :capacityInKB
  attr_accessor :ioAllocationOption

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, capacityInKB = nil, ioAllocationOption = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @capacityInKB = capacityInKB
    @ioAllocationOption = ioAllocationOption
  end
end

# {urn:vim25}VirtualEthernetCardOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
class VirtualEthernetCardOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
  end
end

# {urn:vim25}VirtualE1000Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
class VirtualE1000Option < VirtualEthernetCardOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
  end
end

# {urn:vim25}VirtualPCNet32Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
#   supportsMorphing - SOAP::SOAPBoolean
class VirtualPCNet32Option < VirtualEthernetCardOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported
  attr_accessor :supportsMorphing

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil, supportsMorphing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
    @supportsMorphing = supportsMorphing
  end
end

# {urn:vim25}VirtualVmxnetOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
class VirtualVmxnetOption < VirtualEthernetCardOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
  end
end

# {urn:vim25}VirtualVmxnet2Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
class VirtualVmxnet2Option < VirtualVmxnetOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
  end
end

# {urn:vim25}VirtualVmxnet3Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   supportedOUI - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   macType - Bosh::Director::CloudProviders::VSphere::ChoiceOption
#   wakeOnLanEnabled - Bosh::Director::CloudProviders::VSphere::BoolOption
#   vmDirectPathGen2Supported - SOAP::SOAPBoolean
class VirtualVmxnet3Option < VirtualVmxnetOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :supportedOUI
  attr_accessor :macType
  attr_accessor :wakeOnLanEnabled
  attr_accessor :vmDirectPathGen2Supported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, supportedOUI = nil, macType = nil, wakeOnLanEnabled = nil, vmDirectPathGen2Supported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @supportedOUI = supportedOUI
    @macType = macType
    @wakeOnLanEnabled = wakeOnLanEnabled
    @vmDirectPathGen2Supported = vmDirectPathGen2Supported
  end
end

# {urn:vim25}VirtualFloppyOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualFloppyOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualKeyboardOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualKeyboardOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualPCIPassthroughOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualPCIPassthroughOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualParallelPortOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualParallelPortOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualPointingDeviceOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualPointingDeviceOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualSCSIPassthroughOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualSCSIPassthroughOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualSerialPortOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   yieldOnPoll - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualSerialPortOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :yieldOnPoll

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, yieldOnPoll = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @yieldOnPoll = yieldOnPoll
  end
end

# {urn:vim25}VirtualSoundCardOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualSoundCardOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualEnsoniq1371Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualEnsoniq1371Option < VirtualSoundCardOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualSoundBlaster16Option
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualSoundBlaster16Option < VirtualSoundCardOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualUSBOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualUSBOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualMachineVMCIDeviceOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   allowUnrestrictedCommunication - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualMachineVMCIDeviceOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :allowUnrestrictedCommunication

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, allowUnrestrictedCommunication = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @allowUnrestrictedCommunication = allowUnrestrictedCommunication
  end
end

# {urn:vim25}VirtualVMIROMOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
class VirtualVMIROMOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
  end
end

# {urn:vim25}VirtualVideoCardOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   type - SOAP::SOAPString
#   connectOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConnectOption
#   controllerType - SOAP::SOAPString
#   autoAssignController - Bosh::Director::CloudProviders::VSphere::BoolOption
#   backingOption - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingOption
#   defaultBackingOptionIndex - SOAP::SOAPInt
#   licensingLimit - SOAP::SOAPString
#   deprecated - SOAP::SOAPBoolean
#   plugAndPlay - SOAP::SOAPBoolean
#   hotRemoveSupported - SOAP::SOAPBoolean
#   videoRamSizeInKB - Bosh::Director::CloudProviders::VSphere::LongOption
#   numDisplays - Bosh::Director::CloudProviders::VSphere::IntOption
#   useAutoDetect - Bosh::Director::CloudProviders::VSphere::BoolOption
#   support3D - Bosh::Director::CloudProviders::VSphere::BoolOption
class VirtualVideoCardOption < VirtualDeviceOption
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :type
  attr_accessor :connectOption
  attr_accessor :controllerType
  attr_accessor :autoAssignController
  attr_accessor :backingOption
  attr_accessor :defaultBackingOptionIndex
  attr_accessor :licensingLimit
  attr_accessor :deprecated
  attr_accessor :plugAndPlay
  attr_accessor :hotRemoveSupported
  attr_accessor :videoRamSizeInKB
  attr_accessor :numDisplays
  attr_accessor :useAutoDetect
  attr_accessor :support3D

  def initialize(dynamicType = nil, dynamicProperty = [], type = nil, connectOption = nil, controllerType = nil, autoAssignController = nil, backingOption = [], defaultBackingOptionIndex = nil, licensingLimit = [], deprecated = nil, plugAndPlay = nil, hotRemoveSupported = nil, videoRamSizeInKB = nil, numDisplays = nil, useAutoDetect = nil, support3D = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @type = type
    @connectOption = connectOption
    @controllerType = controllerType
    @autoAssignController = autoAssignController
    @backingOption = backingOption
    @defaultBackingOptionIndex = defaultBackingOptionIndex
    @licensingLimit = licensingLimit
    @deprecated = deprecated
    @plugAndPlay = plugAndPlay
    @hotRemoveSupported = hotRemoveSupported
    @videoRamSizeInKB = videoRamSizeInKB
    @numDisplays = numDisplays
    @useAutoDetect = useAutoDetect
    @support3D = support3D
  end
end

# {urn:vim25}VirtualDeviceConfigSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   operation - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConfigSpecOperation
#   fileOperation - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConfigSpecFileOperation
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
class VirtualDeviceConfigSpec < DynamicData
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :operation
  attr_accessor :fileOperation
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], operation = nil, fileOperation = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @operation = operation
    @fileOperation = fileOperation
    @device = device
  end
end

# {urn:vim25}DynamicProperty
#   name - SOAP::SOAPString
#   val - (any)
class DynamicProperty
  attr_accessor :name
  attr_accessor :val

  def initialize(name = nil, val = nil)
    @name = name
    @val = val
  end
end

# {urn:vim25}ArrayOfDynamicProperty
class ArrayOfDynamicProperty < ::Array
end

# {urn:vim25}ArrayOfKeyAnyValue
class ArrayOfKeyAnyValue < ::Array
end

# {urn:vim25}ArrayOfLocalizableMessage
class ArrayOfLocalizableMessage < ::Array
end

# {urn:vim25}MethodFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MethodFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}RuntimeFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class RuntimeFault < MethodFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HostCommunication
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostCommunication < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HostNotConnected
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostNotConnected < HostCommunication
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HostNotReachable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostNotReachable < HostCommunication
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidProperty - SOAP::SOAPString
class InvalidArgument < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidProperty

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidProperty = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidProperty = invalidProperty
  end
end

# {urn:vim25}IncompatibleSetting
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidProperty - SOAP::SOAPString
#   conflictingProperty - SOAP::SOAPString
class IncompatibleSetting < InvalidArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidProperty
  attr_accessor :conflictingProperty

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidProperty = nil, conflictingProperty = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidProperty = invalidProperty
    @conflictingProperty = conflictingProperty
  end
end

# {urn:vim25}InvalidDasRestartPriorityForFtVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidProperty - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
class InvalidDasRestartPriorityForFtVm < InvalidArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidProperty
  attr_accessor :vm
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidProperty = nil, vm = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidProperty = invalidProperty
    @vm = vm
    @vmName = vmName
  end
end

# {urn:vim25}InvalidDrsBehaviorForFtVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidProperty - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
class InvalidDrsBehaviorForFtVm < InvalidArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidProperty
  attr_accessor :vm
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidProperty = nil, vm = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidProperty = invalidProperty
    @vm = vm
    @vmName = vmName
  end
end

# {urn:vim25}InvalidIndexArgument
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidProperty - SOAP::SOAPString
#   key - SOAP::SOAPString
class InvalidIndexArgument < InvalidArgument
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidProperty
  attr_accessor :key

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidProperty = nil, key = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidProperty = invalidProperty
    @key = key
  end
end

# {urn:vim25}InvalidRequest
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidRequest < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   argument - SOAP::SOAPString
class InvalidType < InvalidRequest
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :argument

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], argument = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @argument = argument
  end
end

# {urn:vim25}MethodNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   receiver - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   method - SOAP::SOAPString
class MethodNotFound < InvalidRequest
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :receiver
  attr_accessor :method

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], receiver = nil, method = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @receiver = receiver
    @method = method
  end
end

# {urn:vim25}ManagedObjectNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ManagedObjectNotFound < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :obj

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], obj = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @obj = obj
  end
end

# {urn:vim25}NotEnoughLicenses
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NotEnoughLicenses < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ExpiredFeatureLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   feature - SOAP::SOAPString
#   count - SOAP::SOAPInt
#   expirationDate - SOAP::SOAPDateTime
class ExpiredFeatureLicense < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :feature
  attr_accessor :count
  attr_accessor :expirationDate

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], feature = nil, count = nil, expirationDate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @feature = feature
    @count = count
    @expirationDate = expirationDate
  end
end

# {urn:vim25}ExpiredAddonLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   feature - SOAP::SOAPString
#   count - SOAP::SOAPInt
#   expirationDate - SOAP::SOAPDateTime
class ExpiredAddonLicense < ExpiredFeatureLicense
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :feature
  attr_accessor :count
  attr_accessor :expirationDate

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], feature = nil, count = nil, expirationDate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @feature = feature
    @count = count
    @expirationDate = expirationDate
  end
end

# {urn:vim25}ExpiredEditionLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   feature - SOAP::SOAPString
#   count - SOAP::SOAPInt
#   expirationDate - SOAP::SOAPDateTime
class ExpiredEditionLicense < ExpiredFeatureLicense
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :feature
  attr_accessor :count
  attr_accessor :expirationDate

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], feature = nil, count = nil, expirationDate = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @feature = feature
    @count = count
    @expirationDate = expirationDate
  end
end

# {urn:vim25}HostInventoryFull
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   capacity - SOAP::SOAPInt
class HostInventoryFull < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :capacity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], capacity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @capacity = capacity
  end
end

# {urn:vim25}InUseFeatureManipulationDisallowed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InUseFeatureManipulationDisallowed < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}IncorrectHostInformation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class IncorrectHostInformation < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidEditionLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   feature - SOAP::SOAPString
class InvalidEditionLicense < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :feature

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], feature = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @feature = feature
  end
end

# {urn:vim25}InventoryHasStandardAloneHosts
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hosts - SOAP::SOAPString
class InventoryHasStandardAloneHosts < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hosts

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hosts = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hosts = hosts
  end
end

# {urn:vim25}LicenseDowngradeDisallowed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   edition - SOAP::SOAPString
#   entityId - SOAP::SOAPString
#   features - Bosh::Director::CloudProviders::VSphere::KeyAnyValue
class LicenseDowngradeDisallowed < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :edition
  attr_accessor :entityId
  attr_accessor :features

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], edition = nil, entityId = nil, features = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @edition = edition
    @entityId = entityId
    @features = features
  end
end

# {urn:vim25}LicenseExpired
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   licenseKey - SOAP::SOAPString
class LicenseExpired < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :licenseKey

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], licenseKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @licenseKey = licenseKey
  end
end

# {urn:vim25}LicenseKeyEntityMismatch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class LicenseKeyEntityMismatch < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}LicenseRestricted
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class LicenseRestricted < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}LicenseSourceUnavailable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   licenseSource - Bosh::Director::CloudProviders::VSphere::LicenseSource
class LicenseSourceUnavailable < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :licenseSource

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], licenseSource = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @licenseSource = licenseSource
  end
end

# {urn:vim25}NoLicenseServerConfigured
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoLicenseServerConfigured < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmLimitLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   limit - SOAP::SOAPInt
class VmLimitLicense < NotEnoughLicenses
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :limit

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], limit = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @limit = limit
  end
end

# {urn:vim25}NotImplemented
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NotImplemented < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NotSupported < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}RequestCanceled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class RequestCanceled < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SecurityError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class C_SecurityError < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoPermission
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   object - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   privilegeId - SOAP::SOAPString
class NoPermission < C_SecurityError
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :object
  attr_accessor :privilegeId

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], object = nil, privilegeId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @object = object
    @privilegeId = privilegeId
  end
end

# {urn:vim25}NotAuthenticated
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   object - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   privilegeId - SOAP::SOAPString
class NotAuthenticated < NoPermission
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :object
  attr_accessor :privilegeId

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], object = nil, privilegeId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @object = object
    @privilegeId = privilegeId
  end
end

# {urn:vim25}RestrictedVersion
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class RestrictedVersion < C_SecurityError
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SystemError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
class SystemError < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
  end
end

# {urn:vim25}UnexpectedFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   faultName - SOAP::SOAPString
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class UnexpectedFault < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :faultName
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], faultName = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @faultName = faultName
    @fault = fault
  end
end

# {urn:vim25}CannotDisableDrsOnClustersWithVApps
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotDisableDrsOnClustersWithVApps < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DatabaseError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class DatabaseError < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DisallowedOperationOnFailoverHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostname - SOAP::SOAPString
class DisallowedOperationOnFailoverHost < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :hostname

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, hostname = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @hostname = hostname
  end
end

# {urn:vim25}FailToLockFaultToleranceVMs
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   alreadyLockedVm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FailToLockFaultToleranceVMs < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName
  attr_accessor :vm
  attr_accessor :alreadyLockedVm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil, vm = nil, alreadyLockedVm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
    @vm = vm
    @alreadyLockedVm = alreadyLockedVm
  end
end

# {urn:vim25}LicenseAssignmentFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
class LicenseAssignmentFailed < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
  end
end

# {urn:vim25}MethodAlreadyDisabledFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   sourceId - SOAP::SOAPString
class MethodAlreadyDisabledFault < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :sourceId

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], sourceId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @sourceId = sourceId
  end
end

# {urn:vim25}MethodDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   source - SOAP::SOAPString
class MethodDisabled < RuntimeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :source

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], source = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @source = source
  end
end

# {urn:vim25}InvalidCollectorVersion
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidCollectorVersion < MethodFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidProperty
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class InvalidProperty < MethodFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}VimFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VimFault < MethodFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ActiveDirectoryFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   errorCode - SOAP::SOAPInt
class ActiveDirectoryFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :errorCode

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], errorCode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @errorCode = errorCode
  end
end

# {urn:vim25}DomainNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   errorCode - SOAP::SOAPInt
#   domainName - SOAP::SOAPString
class DomainNotFound < ActiveDirectoryFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :errorCode
  attr_accessor :domainName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], errorCode = nil, domainName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @errorCode = errorCode
    @domainName = domainName
  end
end

# {urn:vim25}NoPermissionOnAD
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   errorCode - SOAP::SOAPInt
class NoPermissionOnAD < ActiveDirectoryFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :errorCode

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], errorCode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @errorCode = errorCode
  end
end

# {urn:vim25}NonADUserRequired
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   errorCode - SOAP::SOAPInt
class NonADUserRequired < ActiveDirectoryFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :errorCode

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], errorCode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @errorCode = errorCode
  end
end

# {urn:vim25}AlreadyExists
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class AlreadyExists < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}AlreadyUpgraded
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class AlreadyUpgraded < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}AuthMinimumAdminPermission
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class AuthMinimumAdminPermission < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotAccessLocalSource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotAccessLocalSource < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotDisconnectHostWithFaultToleranceVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
class CannotDisconnectHostWithFaultToleranceVm < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
  end
end

# {urn:vim25}CannotMoveFaultToleranceVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   moveType - SOAP::SOAPString
#   vmName - SOAP::SOAPString
class CannotMoveFaultToleranceVm < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :moveType
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], moveType = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @moveType = moveType
    @vmName = vmName
  end
end

# {urn:vim25}CannotMoveHostWithFaultToleranceVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotMoveHostWithFaultToleranceVm < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ConcurrentAccess
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ConcurrentAccess < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CustomizationFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CustomizationFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotDecryptPasswords
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotDecryptPasswords < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CustomizationPending
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CustomizationPending < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}IpHostnameGeneratorError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class IpHostnameGeneratorError < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}LinuxVolumeNotClean
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class LinuxVolumeNotClean < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MissingLinuxCustResources
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MissingLinuxCustResources < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MissingWindowsCustResources
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MissingWindowsCustResources < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MountError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskIndex - SOAP::SOAPInt
class MountError < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :diskIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, diskIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @diskIndex = diskIndex
  end
end

# {urn:vim25}NicSettingMismatch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   numberOfNicsInSpec - SOAP::SOAPInt
#   numberOfNicsInVM - SOAP::SOAPInt
class NicSettingMismatch < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :numberOfNicsInSpec
  attr_accessor :numberOfNicsInVM

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], numberOfNicsInSpec = nil, numberOfNicsInVM = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @numberOfNicsInSpec = numberOfNicsInSpec
    @numberOfNicsInVM = numberOfNicsInVM
  end
end

# {urn:vim25}NoDisksToCustomize
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoDisksToCustomize < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}UncustomizableGuest
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   uncustomizableGuestOS - SOAP::SOAPString
class UncustomizableGuest < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :uncustomizableGuestOS

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], uncustomizableGuestOS = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @uncustomizableGuestOS = uncustomizableGuestOS
  end
end

# {urn:vim25}UnexpectedCustomizationFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class UnexpectedCustomizationFault < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VolumeEditorError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VolumeEditorError < CustomizationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DasConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
#   output - SOAP::SOAPString
#   event - Bosh::Director::CloudProviders::VSphere::Event
class DasConfigFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason
  attr_accessor :output
  attr_accessor :event

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil, output = nil, event = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
    @output = output
    @event = event
  end
end

# {urn:vim25}DrsDisabledOnVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class DrsDisabledOnVm < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DuplicateName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   object - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DuplicateName < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :object

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, object = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @object = object
  end
end

# {urn:vim25}DvsFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class DvsFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DvsNotAuthorized
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   sessionExtensionKey - SOAP::SOAPString
#   dvsExtensionKey - SOAP::SOAPString
class DvsNotAuthorized < DvsFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :sessionExtensionKey
  attr_accessor :dvsExtensionKey

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], sessionExtensionKey = nil, dvsExtensionKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @sessionExtensionKey = sessionExtensionKey
    @dvsExtensionKey = dvsExtensionKey
  end
end

# {urn:vim25}DvsOperationBulkFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostFault - Bosh::Director::CloudProviders::VSphere::DvsOperationBulkFaultFaultOnHost
class DvsOperationBulkFault < DvsFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostFault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostFault = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostFault = hostFault
  end
end

# {urn:vim25}DvsScopeViolated
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   scope - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DvsScopeViolated < DvsFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :scope
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], scope = [], entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @scope = scope
    @entity = entity
  end
end

# {urn:vim25}SwitchNotInUpgradeMode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SwitchNotInUpgradeMode < DvsFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ExtendedFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   faultTypeId - SOAP::SOAPString
#   data - Bosh::Director::CloudProviders::VSphere::KeyValue
class ExtendedFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :faultTypeId
  attr_accessor :data

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], faultTypeId = nil, data = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @faultTypeId = faultTypeId
    @data = data
  end
end

# {urn:vim25}FileFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class FileFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}CannotAccessFile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class CannotAccessFile < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}CannotCreateFile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class CannotCreateFile < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}CannotDeleteFile
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class CannotDeleteFile < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}FileAlreadyExists
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class FileAlreadyExists < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}FileLocked
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class FileLocked < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}FileNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class FileNotFound < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}FileNotWritable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class FileNotWritable < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}FileTooLarge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
#   datastore - SOAP::SOAPString
#   fileSize - SOAP::SOAPLong
#   maxFileSize - SOAP::SOAPLong
class FileTooLarge < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file
  attr_accessor :datastore
  attr_accessor :fileSize
  attr_accessor :maxFileSize

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil, datastore = nil, fileSize = nil, maxFileSize = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
    @datastore = datastore
    @fileSize = fileSize
    @maxFileSize = maxFileSize
  end
end

# {urn:vim25}IncorrectFileType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class IncorrectFileType < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}NetworkCopyFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
class NetworkCopyFault < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
  end
end

# {urn:vim25}NoDiskSpace
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   file - SOAP::SOAPString
#   datastore - SOAP::SOAPString
class NoDiskSpace < FileFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :file
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], file = nil, datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @file = file
    @datastore = datastore
  end
end

# {urn:vim25}GenericDrsFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostFaults - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class GenericDrsFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostFaults

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostFaults = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostFaults = hostFaults
  end
end

# {urn:vim25}HostConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostConfigFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}AdminDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class AdminDisabled < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}AdminNotDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class AdminNotDisabled < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}BlockedByFirewall
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class BlockedByFirewall < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ClockSkew
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ClockSkew < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DisableAdminNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class DisableAdminNotSupported < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HostConfigFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   failure - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class HostConfigFailed < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :failure

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], failure = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @failure = failure
  end
end

# {urn:vim25}HostInDomain
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostInDomain < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidHostName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidHostName < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NasConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class NasConfigFault < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}InvalidNasCredentials
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   userName - SOAP::SOAPString
class InvalidNasCredentials < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :userName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, userName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @userName = userName
  end
end

# {urn:vim25}InvalidNetworkResource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
class InvalidNetworkResource < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :remoteHost
  attr_accessor :remotePath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, remoteHost = nil, remotePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @remoteHost = remoteHost
    @remotePath = remotePath
  end
end

# {urn:vim25}NasConnectionLimitReached
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
class NasConnectionLimitReached < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :remoteHost
  attr_accessor :remotePath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, remoteHost = nil, remotePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @remoteHost = remoteHost
    @remotePath = remotePath
  end
end

# {urn:vim25}NasSessionCredentialConflict
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
#   userName - SOAP::SOAPString
class NasSessionCredentialConflict < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :remoteHost
  attr_accessor :remotePath
  attr_accessor :userName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, remoteHost = nil, remotePath = nil, userName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @remoteHost = remoteHost
    @remotePath = remotePath
    @userName = userName
  end
end

# {urn:vim25}NasVolumeNotMounted
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   remoteHost - SOAP::SOAPString
#   remotePath - SOAP::SOAPString
class NasVolumeNotMounted < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :remoteHost
  attr_accessor :remotePath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, remoteHost = nil, remotePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @remoteHost = remoteHost
    @remotePath = remotePath
  end
end

# {urn:vim25}NetworkInaccessible
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class NetworkInaccessible < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}NoPermissionOnNasVolume
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   userName - SOAP::SOAPString
class NoPermissionOnNasVolume < NasConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :userName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, userName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @userName = userName
  end
end

# {urn:vim25}NoGateway
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoGateway < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoVirtualNic
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoVirtualNic < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}PlatformConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   text - SOAP::SOAPString
class PlatformConfigFault < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :text

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], text = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @text = text
  end
end

# {urn:vim25}InvalidBundle
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   text - SOAP::SOAPString
class InvalidBundle < PlatformConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :text

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], text = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @text = text
  end
end

# {urn:vim25}PatchInstallFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   text - SOAP::SOAPString
#   rolledBack - SOAP::SOAPBoolean
class PatchInstallFailed < PlatformConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :text
  attr_accessor :rolledBack

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], text = nil, rolledBack = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @text = text
    @rolledBack = rolledBack
  end
end

# {urn:vim25}PatchIntegrityError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   text - SOAP::SOAPString
class PatchIntegrityError < PlatformConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :text

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], text = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @text = text
  end
end

# {urn:vim25}VmfsMountFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   uuid - SOAP::SOAPString
class VmfsMountFault < HostConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @uuid = uuid
  end
end

# {urn:vim25}VmfsAlreadyMounted
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   uuid - SOAP::SOAPString
class VmfsAlreadyMounted < VmfsMountFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @uuid = uuid
  end
end

# {urn:vim25}VmfsAmbiguousMount
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   uuid - SOAP::SOAPString
class VmfsAmbiguousMount < VmfsMountFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :uuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], uuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @uuid = uuid
  end
end

# {urn:vim25}HostConnectFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostConnectFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}AgentInstallFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
#   statusCode - SOAP::SOAPInt
#   installerOutput - SOAP::SOAPString
class AgentInstallFailed < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason
  attr_accessor :statusCode
  attr_accessor :installerOutput

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil, statusCode = nil, installerOutput = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
    @statusCode = statusCode
    @installerOutput = installerOutput
  end
end

# {urn:vim25}AlreadyBeingManaged
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   ipAddress - SOAP::SOAPString
class AlreadyBeingManaged < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :ipAddress

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], ipAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @ipAddress = ipAddress
  end
end

# {urn:vim25}AlreadyConnected
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class AlreadyConnected < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}CannotAddHostWithFTVmAsStandalone
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotAddHostWithFTVmAsStandalone < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotAddHostWithFTVmToDifferentCluster
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotAddHostWithFTVmToDifferentCluster < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotAddHostWithFTVmToNonHACluster
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotAddHostWithFTVmToNonHACluster < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MultipleCertificatesVerifyFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   thumbprintData - Bosh::Director::CloudProviders::VSphere::MultipleCertificatesVerifyFaultThumbprintData
class MultipleCertificatesVerifyFault < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :thumbprintData

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], thumbprintData = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @thumbprintData = thumbprintData
  end
end

# {urn:vim25}NoHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class NoHost < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}NoPermissionOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoPermissionOnHost < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NotSupportedHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class NotSupportedHost < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}NotSupportedHostInCluster
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class NotSupportedHostInCluster < NotSupportedHost
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailed < NotSupportedHostInCluster
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedCPUFeaturesForMode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
#   currentEVCModeKey - SOAP::SOAPString
class EVCAdmissionFailedCPUFeaturesForMode < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion
  attr_accessor :currentEVCModeKey

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil, currentEVCModeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
    @currentEVCModeKey = currentEVCModeKey
  end
end

# {urn:vim25}EVCAdmissionFailedCPUModel
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedCPUModel < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedCPUModelForMode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
#   currentEVCModeKey - SOAP::SOAPString
class EVCAdmissionFailedCPUModelForMode < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion
  attr_accessor :currentEVCModeKey

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil, currentEVCModeKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
    @currentEVCModeKey = currentEVCModeKey
  end
end

# {urn:vim25}EVCAdmissionFailedCPUVendor
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
#   clusterCPUVendor - SOAP::SOAPString
#   hostCPUVendor - SOAP::SOAPString
class EVCAdmissionFailedCPUVendor < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion
  attr_accessor :clusterCPUVendor
  attr_accessor :hostCPUVendor

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil, clusterCPUVendor = nil, hostCPUVendor = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
    @clusterCPUVendor = clusterCPUVendor
    @hostCPUVendor = hostCPUVendor
  end
end

# {urn:vim25}EVCAdmissionFailedCPUVendorUnknown
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedCPUVendorUnknown < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedHostDisconnected
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedHostDisconnected < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedHostSoftware
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedHostSoftware < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedHostSoftwareForMode
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedHostSoftwareForMode < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}EVCAdmissionFailedVmActive
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
class EVCAdmissionFailedVmActive < EVCAdmissionFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
  end
end

# {urn:vim25}NotSupportedHostInDvs
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   productName - SOAP::SOAPString
#   productVersion - SOAP::SOAPString
#   switchProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class NotSupportedHostInDvs < NotSupportedHost
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :productName
  attr_accessor :productVersion
  attr_accessor :switchProductSpec

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], productName = nil, productVersion = nil, switchProductSpec = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @productName = productName
    @productVersion = productVersion
    @switchProductSpec = switchProductSpec
  end
end

# {urn:vim25}SSLDisabledFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SSLDisabledFault < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SSLVerifyFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   selfSigned - SOAP::SOAPBoolean
#   thumbprint - SOAP::SOAPString
class SSLVerifyFault < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :selfSigned
  attr_accessor :thumbprint

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], selfSigned = nil, thumbprint = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @selfSigned = selfSigned
    @thumbprint = thumbprint
  end
end

# {urn:vim25}TooManyHosts
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class TooManyHosts < HostConnectFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HostIncompatibleForRecordReplay
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
#   reason - SOAP::SOAPString
class HostIncompatibleForRecordReplay < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
    @reason = reason
  end
end

# {urn:vim25}HostPowerOpFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HostPowerOpFailed < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoPeerHostFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoPeerHostFound < HostPowerOpFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmotionInterfaceNotEnabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmotionInterfaceNotEnabled < HostPowerOpFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}WakeOnLanNotSupportedByVmotionNIC
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class WakeOnLanNotSupportedByVmotionNIC < HostPowerOpFailed
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}IORMNotSupportedHostOnDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastoreName - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class IORMNotSupportedHostOnDatastore < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :datastoreName
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, datastoreName = nil, host = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @datastoreName = datastoreName
    @host = host
  end
end

# {urn:vim25}InsufficientResourcesFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InsufficientResourcesFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InsufficientCpuResourcesFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   unreserved - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientCpuResourcesFault < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :unreserved
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], unreserved = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @unreserved = unreserved
    @requested = requested
  end
end

# {urn:vim25}InsufficientFailoverResourcesFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InsufficientFailoverResourcesFault < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InsufficientHostCapacityFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InsufficientHostCapacityFault < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
  end
end

# {urn:vim25}InsufficientHostCpuCapacityFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   unreserved - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientHostCpuCapacityFault < InsufficientHostCapacityFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :unreserved
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, unreserved = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @unreserved = unreserved
    @requested = requested
  end
end

# {urn:vim25}InsufficientHostMemoryCapacityFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   unreserved - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientHostMemoryCapacityFault < InsufficientHostCapacityFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :unreserved
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, unreserved = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @unreserved = unreserved
    @requested = requested
  end
end

# {urn:vim25}InsufficientPerCpuCapacity
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InsufficientPerCpuCapacity < InsufficientHostCapacityFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
  end
end

# {urn:vim25}InsufficientMemoryResourcesFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   unreserved - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientMemoryResourcesFault < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :unreserved
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], unreserved = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @unreserved = unreserved
    @requested = requested
  end
end

# {urn:vim25}InsufficientStandbyResource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InsufficientStandbyResource < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InsufficientStandbyCpuResource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   available - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientStandbyCpuResource < InsufficientStandbyResource
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :available
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], available = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @available = available
    @requested = requested
  end
end

# {urn:vim25}InsufficientStandbyMemoryResource
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   available - SOAP::SOAPLong
#   requested - SOAP::SOAPLong
class InsufficientStandbyMemoryResource < InsufficientStandbyResource
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :available
  attr_accessor :requested

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], available = nil, requested = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @available = available
    @requested = requested
  end
end

# {urn:vim25}InvalidResourcePoolStructureFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidResourcePoolStructureFault < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NumVirtualCpusExceedsLimit
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   maxSupportedVcpus - SOAP::SOAPInt
class NumVirtualCpusExceedsLimit < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :maxSupportedVcpus

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], maxSupportedVcpus = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @maxSupportedVcpus = maxSupportedVcpus
  end
end

# {urn:vim25}VmFaultToleranceTooManyVMsOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
#   maxNumFtVms - SOAP::SOAPInt
class VmFaultToleranceTooManyVMsOnHost < InsufficientResourcesFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName
  attr_accessor :maxNumFtVms

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil, maxNumFtVms = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
    @maxNumFtVms = maxNumFtVms
  end
end

# {urn:vim25}InvalidAffinitySettingFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidAffinitySettingFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidBmcRole
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidBmcRole < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class InvalidDatastore < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @name = name
  end
end

# {urn:vim25}DatastoreNotWritableOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatastoreNotWritableOnHost < InvalidDatastore
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :name
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, name = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @name = name
    @host = host
  end
end

# {urn:vim25}SwapDatastoreNotWritableOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SwapDatastoreNotWritableOnHost < DatastoreNotWritableOnHost
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :name
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, name = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @name = name
    @host = host
  end
end

# {urn:vim25}InaccessibleDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class InaccessibleDatastore < InvalidDatastore
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @name = name
  end
end

# {urn:vim25}InvalidDatastorePath
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datastorePath - SOAP::SOAPString
class InvalidDatastorePath < InvalidDatastore
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore
  attr_accessor :name
  attr_accessor :datastorePath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil, name = nil, datastorePath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
    @name = name
    @datastorePath = datastorePath
  end
end

# {urn:vim25}InvalidEvent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidEvent < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidFolder
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InvalidFolder < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :target

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], target = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @target = target
  end
end

# {urn:vim25}VmAlreadyExistsInDatacenter
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostname - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VmAlreadyExistsInDatacenter < InvalidFolder
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :target
  attr_accessor :host
  attr_accessor :hostname
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], target = nil, host = nil, hostname = nil, vm = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @target = target
    @host = host
    @hostname = hostname
    @vm = vm
  end
end

# {urn:vim25}InvalidIpmiLoginInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidIpmiLoginInfo < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidIpmiMacAddress
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   userProvidedMacAddress - SOAP::SOAPString
#   observedMacAddress - SOAP::SOAPString
class InvalidIpmiMacAddress < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :userProvidedMacAddress
  attr_accessor :observedMacAddress

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], userProvidedMacAddress = nil, observedMacAddress = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @userProvidedMacAddress = userProvidedMacAddress
    @observedMacAddress = observedMacAddress
  end
end

# {urn:vim25}InvalidLicense
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   licenseContent - SOAP::SOAPString
class InvalidLicense < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :licenseContent

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], licenseContent = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @licenseContent = licenseContent
  end
end

# {urn:vim25}InvalidLocale
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidLocale < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidLogin
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidLogin < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidClientCertificate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidClientCertificate < InvalidLogin
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InvalidName < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @entity = entity
  end
end

# {urn:vim25}InvalidPrivilege
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   privilege - SOAP::SOAPString
class InvalidPrivilege < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :privilege

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], privilege = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @privilege = privilege
  end
end

# {urn:vim25}InvalidState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidState < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidHostState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InvalidHostState < InvalidState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
  end
end

# {urn:vim25}InvalidPowerState
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   requestedState - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
#   existingState - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
class InvalidPowerState < InvalidState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :requestedState
  attr_accessor :existingState

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], requestedState = nil, existingState = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @requestedState = requestedState
    @existingState = existingState
  end
end

# {urn:vim25}NoActiveHostInCluster
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   computeResource - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class NoActiveHostInCluster < InvalidState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :computeResource

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], computeResource = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @computeResource = computeResource
  end
end

# {urn:vim25}QuestionPending
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   text - SOAP::SOAPString
class QuestionPending < InvalidState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :text

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], text = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @text = text
  end
end

# {urn:vim25}VmPowerOnDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmPowerOnDisabled < InvalidState
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}LicenseEntityNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   entityId - SOAP::SOAPString
class LicenseEntityNotFound < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :entityId

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], entityId = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @entityId = entityId
  end
end

# {urn:vim25}LicenseServerUnavailable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   licenseServer - SOAP::SOAPString
class LicenseServerUnavailable < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :licenseServer

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], licenseServer = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @licenseServer = licenseServer
  end
end

# {urn:vim25}LimitExceeded
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   limit - SOAP::SOAPInt
class LimitExceeded < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :limit

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, limit = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @limit = limit
  end
end

# {urn:vim25}LogBundlingFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class LogBundlingFailed < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MigrationFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MigrationFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}AffinityConfigured
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   configuredAffinity - SOAP::SOAPString
class AffinityConfigured < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :configuredAffinity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], configuredAffinity = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @configuredAffinity = configuredAffinity
  end
end

# {urn:vim25}CannotModifyConfigCpuRequirements
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotModifyConfigCpuRequirements < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CloneFromSnapshotNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CloneFromSnapshotNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}DatacenterMismatch
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   invalidArgument - Bosh::Director::CloudProviders::VSphere::DatacenterMismatchArgument
#   expectedDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DatacenterMismatch < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :invalidArgument
  attr_accessor :expectedDatacenter

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], invalidArgument = [], expectedDatacenter = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @invalidArgument = invalidArgument
    @expectedDatacenter = expectedDatacenter
  end
end

# {urn:vim25}DisallowedMigrationDeviceAttached
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class DisallowedMigrationDeviceAttached < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @fault = fault
  end
end

# {urn:vim25}DiskMoveTypeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class DiskMoveTypeNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}FaultToleranceAntiAffinityViolated
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FaultToleranceAntiAffinityViolated < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
    @host = host
  end
end

# {urn:vim25}FaultToleranceNeedsThickDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
class FaultToleranceNeedsThickDisk < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
  end
end

# {urn:vim25}FaultToleranceNotSameBuild
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   build - SOAP::SOAPString
class FaultToleranceNotSameBuild < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :build

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], build = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @build = build
  end
end

# {urn:vim25}HAErrorsAtDest
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HAErrorsAtDest < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}IncompatibleDefaultDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
class IncompatibleDefaultDevice < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
  end
end

# {urn:vim25}MaintenanceModeFileMove
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MaintenanceModeFileMove < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MigrationDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MigrationDisabled < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MigrationFeatureNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MigrationFeatureNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
  end
end

# {urn:vim25}FullStorageVMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FullStorageVMotionNotSupported < MigrationFeatureNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
  end
end

# {urn:vim25}IndependentDiskVMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class IndependentDiskVMotionNotSupported < MigrationFeatureNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
  end
end

# {urn:vim25}NonHomeRDMVMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class NonHomeRDMVMotionNotSupported < MigrationFeatureNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil, device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
    @device = device
  end
end

# {urn:vim25}StorageVMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StorageVMotionNotSupported < MigrationFeatureNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
  end
end

# {urn:vim25}UnsharedSwapVMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHostName - SOAP::SOAPString
#   failedHost - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnsharedSwapVMotionNotSupported < MigrationFeatureNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHostName
  attr_accessor :failedHost

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHostName = nil, failedHost = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHostName = failedHostName
    @failedHost = failedHost
  end
end

# {urn:vim25}MigrationNotReady
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
class MigrationNotReady < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
  end
end

# {urn:vim25}MismatchedNetworkPolicies
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class MismatchedNetworkPolicies < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}MismatchedVMotionNetworkNames
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   sourceNetwork - SOAP::SOAPString
#   destNetwork - SOAP::SOAPString
class MismatchedVMotionNetworkNames < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :sourceNetwork
  attr_accessor :destNetwork

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], sourceNetwork = nil, destNetwork = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @sourceNetwork = sourceNetwork
    @destNetwork = destNetwork
  end
end

# {urn:vim25}NetworksMayNotBeTheSame
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class NetworksMayNotBeTheSame < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}NoGuestHeartbeat
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoGuestHeartbeat < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}RDMConversionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
class RDMConversionNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
  end
end

# {urn:vim25}RDMNotPreserved
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
class RDMNotPreserved < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
  end
end

# {urn:vim25}ReadOnlyDisksWithLegacyDestination
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   roDiskCount - SOAP::SOAPInt
#   timeoutDanger - SOAP::SOAPBoolean
class ReadOnlyDisksWithLegacyDestination < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :roDiskCount
  attr_accessor :timeoutDanger

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], roDiskCount = nil, timeoutDanger = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @roDiskCount = roDiskCount
    @timeoutDanger = timeoutDanger
  end
end

# {urn:vim25}SnapshotCopyNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotCopyNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}HotSnapshotMoveNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class HotSnapshotMoveNotSupported < SnapshotCopyNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotCloneNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotCloneNotSupported < SnapshotCopyNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotMoveFromNonHomeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotMoveFromNonHomeNotSupported < SnapshotCopyNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotMoveNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotMoveNotSupported < SnapshotCopyNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotMoveToNonHomeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotMoveToNonHomeNotSupported < SnapshotCopyNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotRevertIssue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   snapshotName - SOAP::SOAPString
#   event - Bosh::Director::CloudProviders::VSphere::Event
#   errors - SOAP::SOAPBoolean
class SnapshotRevertIssue < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :snapshotName
  attr_accessor :event
  attr_accessor :errors

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], snapshotName = nil, event = [], errors = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @snapshotName = snapshotName
    @event = event
    @errors = errors
  end
end

# {urn:vim25}SuspendedRelocateNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SuspendedRelocateNotSupported < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}TooManyDisksOnLegacyHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   diskCount - SOAP::SOAPInt
#   timeoutDanger - SOAP::SOAPBoolean
class TooManyDisksOnLegacyHost < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :diskCount
  attr_accessor :timeoutDanger

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], diskCount = nil, timeoutDanger = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @diskCount = diskCount
    @timeoutDanger = timeoutDanger
  end
end

# {urn:vim25}ToolsInstallationInProgress
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsInstallationInProgress < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}UncommittedUndoableDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class UncommittedUndoableDisk < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VMotionInterfaceIssue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VMotionInterfaceIssue < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
  end
end

# {urn:vim25}VMotionLinkCapacityLow
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   network - SOAP::SOAPString
class VMotionLinkCapacityLow < VMotionInterfaceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
    @network = network
  end
end

# {urn:vim25}VMotionLinkDown
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   network - SOAP::SOAPString
class VMotionLinkDown < VMotionInterfaceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
    @network = network
  end
end

# {urn:vim25}VMotionNotConfigured
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VMotionNotConfigured < VMotionInterfaceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
  end
end

# {urn:vim25}VMotionNotLicensed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VMotionNotLicensed < VMotionInterfaceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
  end
end

# {urn:vim25}VMotionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   atSourceHost - SOAP::SOAPBoolean
#   failedHost - SOAP::SOAPString
#   failedHostEntity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VMotionNotSupported < VMotionInterfaceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :atSourceHost
  attr_accessor :failedHost
  attr_accessor :failedHostEntity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], atSourceHost = nil, failedHost = nil, failedHostEntity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @atSourceHost = atSourceHost
    @failedHost = failedHost
    @failedHostEntity = failedHostEntity
  end
end

# {urn:vim25}VMotionProtocolIncompatible
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VMotionProtocolIncompatible < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}WillModifyConfigCpuRequirements
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class WillModifyConfigCpuRequirements < MigrationFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MismatchedBundle
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   bundleUuid - SOAP::SOAPString
#   hostUuid - SOAP::SOAPString
#   bundleBuildNumber - SOAP::SOAPInt
#   hostBuildNumber - SOAP::SOAPInt
class MismatchedBundle < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :bundleUuid
  attr_accessor :hostUuid
  attr_accessor :bundleBuildNumber
  attr_accessor :hostBuildNumber

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], bundleUuid = nil, hostUuid = nil, bundleBuildNumber = nil, hostBuildNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @bundleUuid = bundleUuid
    @hostUuid = hostUuid
    @bundleBuildNumber = bundleBuildNumber
    @hostBuildNumber = hostBuildNumber
  end
end

# {urn:vim25}MissingBmcSupport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MissingBmcSupport < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoClientCertificate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoClientCertificate < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoCompatibleHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class NoCompatibleHost < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = [], error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @error = error
  end
end

# {urn:vim25}NoCompatibleHostWithAccessToDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class NoCompatibleHostWithAccessToDevice < NoCompatibleHost
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = [], error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @error = error
  end
end

# {urn:vim25}NoDiskFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoDiskFound < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoSubjectName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoSubjectName < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NotFound < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OutOfBounds
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   argumentName - SOAP::SOAPString
class OutOfBounds < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :argumentName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], argumentName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @argumentName = argumentName
  end
end

# {urn:vim25}OvfFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfExport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfExport < OvfFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ConnectedIso
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   cdrom - Bosh::Director::CloudProviders::VSphere::VirtualCdrom
#   filename - SOAP::SOAPString
class ConnectedIso < OvfExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :cdrom
  attr_accessor :filename

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], cdrom = nil, filename = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @cdrom = cdrom
    @filename = filename
  end
end

# {urn:vim25}OvfExportFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfExportFailed < OvfExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfHardwareExport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
class OvfHardwareExport < OvfExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
  end
end

# {urn:vim25}OvfConnectedDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
class OvfConnectedDevice < OvfHardwareExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
  end
end

# {urn:vim25}OvfConnectedDeviceFloppy
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
#   filename - SOAP::SOAPString
class OvfConnectedDeviceFloppy < OvfConnectedDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath
  attr_accessor :filename

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil, filename = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
    @filename = filename
  end
end

# {urn:vim25}OvfConnectedDeviceIso
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
#   filename - SOAP::SOAPString
class OvfConnectedDeviceIso < OvfConnectedDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath
  attr_accessor :filename

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil, filename = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
    @filename = filename
  end
end

# {urn:vim25}OvfUnableToExportDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
#   diskName - SOAP::SOAPString
class OvfUnableToExportDisk < OvfHardwareExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath
  attr_accessor :diskName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil, diskName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
    @diskName = diskName
  end
end

# {urn:vim25}OvfUnknownDeviceBacking
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
#   backing - Bosh::Director::CloudProviders::VSphere::VirtualDeviceBackingInfo
class OvfUnknownDeviceBacking < OvfHardwareExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil, backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
    @backing = backing
  end
end

# {urn:vim25}OvfUnsupportedDeviceExport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmPath - SOAP::SOAPString
class OvfUnsupportedDeviceExport < OvfHardwareExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmPath

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmPath = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmPath = vmPath
  end
end

# {urn:vim25}OvfPropertyExport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfPropertyExport < OvfExport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @type = type
    @value = value
  end
end

# {urn:vim25}OvfImport
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfImport < OvfFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfHardwareCheck
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfHardwareCheck < OvfImport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfImportFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfImportFailed < OvfImport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfMappedOsId
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   ovfId - SOAP::SOAPInt
#   ovfDescription - SOAP::SOAPString
#   targetDescription - SOAP::SOAPString
class OvfMappedOsId < OvfImport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :ovfId
  attr_accessor :ovfDescription
  attr_accessor :targetDescription

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], ovfId = nil, ovfDescription = nil, targetDescription = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @ovfId = ovfId
    @ovfDescription = ovfDescription
    @targetDescription = targetDescription
  end
end

# {urn:vim25}OvfMissingHardware
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
#   resourceType - SOAP::SOAPInt
class OvfMissingHardware < OvfImport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name
  attr_accessor :resourceType

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil, resourceType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
    @resourceType = resourceType
  end
end

# {urn:vim25}OvfUnsupportedDiskProvisioning
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   diskProvisioning - SOAP::SOAPString
#   supportedDiskProvisioning - SOAP::SOAPString
class OvfUnsupportedDiskProvisioning < OvfImport
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :diskProvisioning
  attr_accessor :supportedDiskProvisioning

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], diskProvisioning = nil, supportedDiskProvisioning = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @diskProvisioning = diskProvisioning
    @supportedDiskProvisioning = supportedDiskProvisioning
  end
end

# {urn:vim25}OvfInvalidPackage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
class OvfInvalidPackage < OvfFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
  end
end

# {urn:vim25}OvfAttribute
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
class OvfAttribute < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
  end
end

# {urn:vim25}OvfInvalidValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfInvalidValue < OvfAttribute
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfInvalidValueConfiguration
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfInvalidValueConfiguration < OvfInvalidValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfInvalidValueEmpty
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfInvalidValueEmpty < OvfInvalidValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfInvalidValueFormatMalformed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfInvalidValueFormatMalformed < OvfInvalidValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfInvalidValueReference
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfInvalidValueReference < OvfInvalidValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfMissingAttribute
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
class OvfMissingAttribute < OvfAttribute
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
  end
end

# {urn:vim25}OvfConstraint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfConstraint < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfDiskOrderConstraint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfDiskOrderConstraint < OvfConstraint
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfHostResourceConstraint
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfHostResourceConstraint < OvfConstraint
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @value = value
  end
end

# {urn:vim25}OvfElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfElement < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfDuplicateElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfDuplicateElement < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfDuplicatedElementBoundary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   boundary - SOAP::SOAPString
class OvfDuplicatedElementBoundary < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :boundary

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, boundary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @boundary = boundary
  end
end

# {urn:vim25}OvfElementInvalidValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfElementInvalidValue < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @value = value
  end
end

# {urn:vim25}OvfMissingElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfMissingElement < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfMissingElementNormalBoundary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   boundary - SOAP::SOAPString
class OvfMissingElementNormalBoundary < OvfMissingElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :boundary

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, boundary = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @boundary = boundary
  end
end

# {urn:vim25}OvfUnexpectedElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfUnexpectedElement < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfWrongElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfWrongElement < OvfElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfProperty
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfProperty < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
  end
end

# {urn:vim25}OvfPropertyNetwork
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfPropertyNetwork < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
  end
end

# {urn:vim25}OvfPropertyQualifier
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
#   qualifier - SOAP::SOAPString
class OvfPropertyQualifier < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value
  attr_accessor :qualifier

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil, qualifier = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
    @qualifier = qualifier
  end
end

# {urn:vim25}OvfPropertyQualifierDuplicate
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
#   qualifier - SOAP::SOAPString
class OvfPropertyQualifierDuplicate < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value
  attr_accessor :qualifier

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil, qualifier = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
    @qualifier = qualifier
  end
end

# {urn:vim25}OvfPropertyQualifierIgnored
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
#   qualifier - SOAP::SOAPString
class OvfPropertyQualifierIgnored < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value
  attr_accessor :qualifier

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil, qualifier = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
    @qualifier = qualifier
  end
end

# {urn:vim25}OvfPropertyType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfPropertyType < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
  end
end

# {urn:vim25}OvfPropertyValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfPropertyValue < OvfProperty
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @type = type
    @value = value
  end
end

# {urn:vim25}OvfWrongNamespace
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   namespaceName - SOAP::SOAPString
class OvfWrongNamespace < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :namespaceName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, namespaceName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @namespaceName = namespaceName
  end
end

# {urn:vim25}OvfXmlFormat
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   description - SOAP::SOAPString
class OvfXmlFormat < OvfInvalidPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :description

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, description = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @description = description
  end
end

# {urn:vim25}OvfSystemFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfSystemFault < OvfFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfDiskMappingNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   diskName - SOAP::SOAPString
#   vmName - SOAP::SOAPString
class OvfDiskMappingNotFound < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :diskName
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], diskName = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @diskName = diskName
    @vmName = vmName
  end
end

# {urn:vim25}OvfHostValueNotParsed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfHostValueNotParsed < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @value = value
  end
end

# {urn:vim25}OvfInternalError
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class OvfInternalError < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}OvfToXmlUnsupportedElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   name - SOAP::SOAPString
class OvfToXmlUnsupportedElement < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @name = name
  end
end

# {urn:vim25}OvfUnknownDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - Bosh::Director::CloudProviders::VSphere::VirtualDevice
#   vmName - SOAP::SOAPString
class OvfUnknownDevice < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @vmName = vmName
  end
end

# {urn:vim25}OvfUnknownEntity
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
class OvfUnknownEntity < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
  end
end

# {urn:vim25}OvfUnsupportedDeviceBackingInfo
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   elementName - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   deviceName - SOAP::SOAPString
#   backingName - SOAP::SOAPString
class OvfUnsupportedDeviceBackingInfo < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :elementName
  attr_accessor :instanceId
  attr_accessor :deviceName
  attr_accessor :backingName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], elementName = nil, instanceId = nil, deviceName = nil, backingName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @elementName = elementName
    @instanceId = instanceId
    @deviceName = deviceName
    @backingName = backingName
  end
end

# {urn:vim25}OvfUnsupportedDeviceBackingOption
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   elementName - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   deviceName - SOAP::SOAPString
#   backingName - SOAP::SOAPString
class OvfUnsupportedDeviceBackingOption < OvfSystemFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :elementName
  attr_accessor :instanceId
  attr_accessor :deviceName
  attr_accessor :backingName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], elementName = nil, instanceId = nil, deviceName = nil, backingName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @elementName = elementName
    @instanceId = instanceId
    @deviceName = deviceName
    @backingName = backingName
  end
end

# {urn:vim25}OvfUnsupportedPackage
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
class OvfUnsupportedPackage < OvfFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
  end
end

# {urn:vim25}OvfInvalidVmName
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfInvalidVmName < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfNoHostNic
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
class OvfNoHostNic < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
  end
end

# {urn:vim25}OvfNoSupportedHardwareFamily
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   version - SOAP::SOAPString
class OvfNoSupportedHardwareFamily < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :version

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, version = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @version = version
  end
end

# {urn:vim25}OvfUnsupportedAttribute
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
class OvfUnsupportedAttribute < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
  end
end

# {urn:vim25}OvfUnsupportedAttributeValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   attributeName - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfUnsupportedAttributeValue < OvfUnsupportedAttribute
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :attributeName
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, attributeName = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @attributeName = attributeName
    @value = value
  end
end

# {urn:vim25}OvfUnsupportedElement
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
class OvfUnsupportedElement < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
  end
end

# {urn:vim25}OvfUnsupportedElementValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class OvfUnsupportedElementValue < OvfUnsupportedElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @value = value
  end
end

# {urn:vim25}OvfUnsupportedSection
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   info - SOAP::SOAPString
class OvfUnsupportedSection < OvfUnsupportedElement
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :info

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, info = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @info = info
  end
end

# {urn:vim25}OvfUnsupportedSubType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   elementName - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   deviceType - SOAP::SOAPInt
#   deviceSubType - SOAP::SOAPString
class OvfUnsupportedSubType < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :elementName
  attr_accessor :instanceId
  attr_accessor :deviceType
  attr_accessor :deviceSubType

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, elementName = nil, instanceId = nil, deviceType = nil, deviceSubType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @elementName = elementName
    @instanceId = instanceId
    @deviceType = deviceType
    @deviceSubType = deviceSubType
  end
end

# {urn:vim25}OvfUnsupportedType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   lineNumber - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   instanceId - SOAP::SOAPString
#   deviceType - SOAP::SOAPInt
class OvfUnsupportedType < OvfUnsupportedPackage
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :lineNumber
  attr_accessor :name
  attr_accessor :instanceId
  attr_accessor :deviceType

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], lineNumber = nil, name = nil, instanceId = nil, deviceType = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @lineNumber = lineNumber
    @name = name
    @instanceId = instanceId
    @deviceType = deviceType
  end
end

# {urn:vim25}PatchBinariesNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   binary - SOAP::SOAPString
class PatchBinariesNotFound < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :binary

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, binary = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @binary = binary
  end
end

# {urn:vim25}PatchMetadataInvalid
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   metaData - SOAP::SOAPString
class PatchMetadataInvalid < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :metaData

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, metaData = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @metaData = metaData
  end
end

# {urn:vim25}PatchMetadataCorrupted
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   metaData - SOAP::SOAPString
class PatchMetadataCorrupted < PatchMetadataInvalid
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :metaData

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, metaData = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @metaData = metaData
  end
end

# {urn:vim25}PatchMetadataNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   metaData - SOAP::SOAPString
class PatchMetadataNotFound < PatchMetadataInvalid
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :metaData

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, metaData = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @metaData = metaData
  end
end

# {urn:vim25}PatchNotApplicable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
class PatchNotApplicable < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
  end
end

# {urn:vim25}PatchAlreadyInstalled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
class PatchAlreadyInstalled < PatchNotApplicable
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
  end
end

# {urn:vim25}PatchMissingDependencies
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   prerequisitePatch - SOAP::SOAPString
#   prerequisiteLib - SOAP::SOAPString
class PatchMissingDependencies < PatchNotApplicable
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :prerequisitePatch
  attr_accessor :prerequisiteLib

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, prerequisitePatch = [], prerequisiteLib = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @prerequisitePatch = prerequisitePatch
    @prerequisiteLib = prerequisiteLib
  end
end

# {urn:vim25}PatchSuperseded
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patchID - SOAP::SOAPString
#   supersede - SOAP::SOAPString
class PatchSuperseded < PatchNotApplicable
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patchID
  attr_accessor :supersede

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patchID = nil, supersede = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patchID = patchID
    @supersede = supersede
  end
end

# {urn:vim25}ProfileUpdateFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   failure - Bosh::Director::CloudProviders::VSphere::ProfileUpdateFailedUpdateFailure
class ProfileUpdateFailed < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :failure

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], failure = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @failure = failure
  end
end

# {urn:vim25}RebootRequired
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   patch - SOAP::SOAPString
class RebootRequired < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :patch

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], patch = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @patch = patch
  end
end

# {urn:vim25}RecordReplayDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class RecordReplayDisabled < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}RemoveFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class RemoveFailed < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ResourceInUse
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   type - SOAP::SOAPString
#   name - SOAP::SOAPString
class ResourceInUse < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :type
  attr_accessor :name

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], type = nil, name = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @type = type
    @name = name
  end
end

# {urn:vim25}ResourceNotAvailable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   containerType - SOAP::SOAPString
#   containerName - SOAP::SOAPString
#   type - SOAP::SOAPString
class ResourceNotAvailable < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :containerType
  attr_accessor :containerName
  attr_accessor :type

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], containerType = nil, containerName = nil, type = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @containerType = containerType
    @containerName = containerName
    @type = type
  end
end

# {urn:vim25}SSPIChallenge
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   base64Token - SOAP::SOAPString
class SSPIChallenge < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :base64Token

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], base64Token = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @base64Token = base64Token
  end
end

# {urn:vim25}SnapshotFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ApplicationQuiesceFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ApplicationQuiesceFault < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}FilesystemQuiesceFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class FilesystemQuiesceFault < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MemorySnapshotOnIndependentDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MemorySnapshotOnIndependentDisk < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MultipleSnapshotsNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MultipleSnapshotsNotSupported < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotDisabled < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotIncompatibleDeviceInVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class SnapshotIncompatibleDeviceInVm < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @fault = fault
  end
end

# {urn:vim25}SnapshotLocked
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotLocked < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SnapshotNoChange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SnapshotNoChange < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}TooManySnapshotLevels
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class TooManySnapshotLevels < SnapshotFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}SwapDatastoreUnset
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SwapDatastoreUnset < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}TaskInProgress
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   task - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TaskInProgress < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :task

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], task = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @task = task
  end
end

# {urn:vim25}VAppTaskInProgress
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   task - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VAppTaskInProgress < TaskInProgress
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :task

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], task = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @task = task
  end
end

# {urn:vim25}Timedout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class Timedout < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}PowerOnFtSecondaryTimedout
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
#   timeout - SOAP::SOAPInt
class PowerOnFtSecondaryTimedout < Timedout
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :vmName
  attr_accessor :timeout

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, vmName = nil, timeout = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @vmName = vmName
    @timeout = timeout
  end
end

# {urn:vim25}TooManyConsecutiveOverrides
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class TooManyConsecutiveOverrides < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsUnavailable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsUnavailable < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}UnrecognizedHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
class UnrecognizedHost < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
  end
end

# {urn:vim25}UnsupportedVimApiVersion
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   version - SOAP::SOAPString
class UnsupportedVimApiVersion < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :version

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], version = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @version = version
  end
end

# {urn:vim25}UserNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   principal - SOAP::SOAPString
#   unresolved - SOAP::SOAPBoolean
class UserNotFound < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :principal
  attr_accessor :unresolved

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], principal = nil, unresolved = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @principal = principal
    @unresolved = unresolved
  end
end

# {urn:vim25}VAppConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VAppConfigFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MissingPowerOffConfiguration
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MissingPowerOffConfiguration < VAppConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}MissingPowerOnConfiguration
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MissingPowerOnConfiguration < VAppConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoVmInVApp
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class NoVmInVApp < VAppConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmConfigFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotAccessVmComponent
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotAccessVmComponent < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotAccessVmConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class CannotAccessVmConfig < CannotAccessVmComponent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
  end
end

# {urn:vim25}CannotAccessVmDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class CannotAccessVmDevice < CannotAccessVmComponent
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}CannotAccessNetwork
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class CannotAccessNetwork < CannotAccessVmDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}DestinationSwitchFull
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class DestinationSwitchFull < CannotAccessNetwork
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}LegacyNetworkInterfaceInUse
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class LegacyNetworkInterfaceInUse < CannotAccessNetwork
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}VMOnConflictDVPort
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class VMOnConflictDVPort < CannotAccessNetwork
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}VMOnVirtualIntranet
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
class VMOnVirtualIntranet < CannotAccessNetwork
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
  end
end

# {urn:vim25}CannotAccessVmDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class CannotAccessVmDisk < CannotAccessVmDevice
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
    @fault = fault
  end
end

# {urn:vim25}RDMPointsToInaccessibleDisk
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   backing - SOAP::SOAPString
#   connected - SOAP::SOAPBoolean
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class RDMPointsToInaccessibleDisk < CannotAccessVmDisk
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :backing
  attr_accessor :connected
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, backing = nil, connected = nil, fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @backing = backing
    @connected = connected
    @fault = fault
  end
end

# {urn:vim25}CannotDisableSnapshot
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CannotDisableSnapshot < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CpuHotPlugNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class CpuHotPlugNotSupported < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}EightHostLimitViolated
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class EightHostLimitViolated < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}FaultToleranceCannotEditMem
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FaultToleranceCannotEditMem < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName
  attr_accessor :vm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil, vm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
    @vm = vm
  end
end

# {urn:vim25}GenericVmConfigFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
class GenericVmConfigFault < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
  end
end

# {urn:vim25}InvalidFormat
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidFormat < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidDiskFormat
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidDiskFormat < InvalidFormat
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidSnapshotFormat
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class InvalidSnapshotFormat < InvalidFormat
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}InvalidVmConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
class InvalidVmConfig < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
  end
end

# {urn:vim25}InvalidDeviceSpec
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class InvalidDeviceSpec < InvalidVmConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}DeviceHotPlugNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class DeviceHotPlugNotSupported < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}DeviceNotFound
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class DeviceNotFound < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}DeviceUnsupportedForVmPlatform
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class DeviceUnsupportedForVmPlatform < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}DeviceUnsupportedForVmVersion
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
#   currentVersion - SOAP::SOAPString
#   expectedVersion - SOAP::SOAPString
class DeviceUnsupportedForVmVersion < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex
  attr_accessor :currentVersion
  attr_accessor :expectedVersion

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil, currentVersion = nil, expectedVersion = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
    @currentVersion = currentVersion
    @expectedVersion = expectedVersion
  end
end

# {urn:vim25}DisallowedDiskModeChange
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class DisallowedDiskModeChange < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}InvalidController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
#   controllerKey - SOAP::SOAPInt
class InvalidController < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex
  attr_accessor :controllerKey

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil, controllerKey = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
    @controllerKey = controllerKey
  end
end

# {urn:vim25}InvalidDeviceBacking
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class InvalidDeviceBacking < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}InvalidDeviceOperation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
#   badOp - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConfigSpecOperation
#   badFileOp - Bosh::Director::CloudProviders::VSphere::VirtualDeviceConfigSpecFileOperation
class InvalidDeviceOperation < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex
  attr_accessor :badOp
  attr_accessor :badFileOp

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil, badOp = nil, badFileOp = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
    @badOp = badOp
    @badFileOp = badFileOp
  end
end

# {urn:vim25}MissingController
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   deviceIndex - SOAP::SOAPInt
class MissingController < InvalidDeviceSpec
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :deviceIndex

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, deviceIndex = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @deviceIndex = deviceIndex
  end
end

# {urn:vim25}SwapPlacementOverrideNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
class SwapPlacementOverrideNotSupported < InvalidVmConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
  end
end

# {urn:vim25}TooManyDevices
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
class TooManyDevices < InvalidVmConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
  end
end

# {urn:vim25}UnsupportedGuest
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   unsupportedGuestOS - SOAP::SOAPString
class UnsupportedGuest < InvalidVmConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :unsupportedGuestOS

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, unsupportedGuestOS = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @unsupportedGuestOS = unsupportedGuestOS
  end
end

# {urn:vim25}VmWwnConflict
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   property - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   wwn - SOAP::SOAPLong
class VmWwnConflict < InvalidVmConfig
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :property
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :name
  attr_accessor :wwn

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], property = nil, vm = nil, host = nil, name = nil, wwn = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @property = property
    @vm = vm
    @host = host
    @name = name
    @wwn = wwn
  end
end

# {urn:vim25}MemoryHotPlugNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class MemoryHotPlugNotSupported < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}NoCompatibleHardAffinityHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
class NoCompatibleHardAffinityHost < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
  end
end

# {urn:vim25}NoCompatibleSoftAffinityHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
class NoCompatibleSoftAffinityHost < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
  end
end

# {urn:vim25}NumVirtualCpusIncompatible
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
#   numCpu - SOAP::SOAPInt
class NumVirtualCpusIncompatible < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason
  attr_accessor :numCpu

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil, numCpu = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
    @numCpu = numCpu
  end
end

# {urn:vim25}RDMNotSupportedOnDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastoreName - SOAP::SOAPString
class RDMNotSupportedOnDatastore < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :datastore
  attr_accessor :datastoreName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, datastore = nil, datastoreName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @datastore = datastore
    @datastoreName = datastoreName
  end
end

# {urn:vim25}RuleViolation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   rule - Bosh::Director::CloudProviders::VSphere::ClusterRuleInfo
class RuleViolation < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :rule

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, rule = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @rule = rule
  end
end

# {urn:vim25}SoftRuleVioCorrectionDisallowed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
class SoftRuleVioCorrectionDisallowed < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
  end
end

# {urn:vim25}SoftRuleVioCorrectionImpact
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
class SoftRuleVioCorrectionImpact < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
  end
end

# {urn:vim25}UnsupportedDatastore
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnsupportedDatastore < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :datastore

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], datastore = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @datastore = datastore
  end
end

# {urn:vim25}UnsupportedVmxLocation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class UnsupportedVmxLocation < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VAppNotRunning
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VAppNotRunning < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VAppPropertyFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class VAppPropertyFault < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}InvalidNetworkInType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class InvalidNetworkInType < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}InvalidPropertyType
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class InvalidPropertyType < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}InvalidPropertyValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class InvalidPropertyValue < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}UnconfiguredPropertyValue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class UnconfiguredPropertyValue < InvalidPropertyValue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}MissingNetworkIpConfig
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class MissingNetworkIpConfig < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}NoAvailableIp
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
#   network - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class NoAvailableIp < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value
  attr_accessor :network

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil, network = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
    @network = network
  end
end

# {urn:vim25}NoVcManagedIpConfigured
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class NoVcManagedIpConfigured < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}NotUserConfigurableProperty
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   id - SOAP::SOAPString
#   category - SOAP::SOAPString
#   label - SOAP::SOAPString
#   type - SOAP::SOAPString
#   value - SOAP::SOAPString
class NotUserConfigurableProperty < VAppPropertyFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :id
  attr_accessor :category
  attr_accessor :label
  attr_accessor :type
  attr_accessor :value

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], id = nil, category = nil, label = nil, type = nil, value = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @id = id
    @category = category
    @label = label
    @type = type
    @value = value
  end
end

# {urn:vim25}VirtualHardwareCompatibilityIssue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VirtualHardwareCompatibilityIssue < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CpuIncompatible
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   level - SOAP::SOAPInt
#   registerName - SOAP::SOAPString
#   registerBits - SOAP::SOAPString
#   desiredBits - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CpuIncompatible < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :level
  attr_accessor :registerName
  attr_accessor :registerBits
  attr_accessor :desiredBits
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], level = nil, registerName = nil, registerBits = nil, desiredBits = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @level = level
    @registerName = registerName
    @registerBits = registerBits
    @desiredBits = desiredBits
    @host = host
  end
end

# {urn:vim25}CpuCompatibilityUnknown
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   level - SOAP::SOAPInt
#   registerName - SOAP::SOAPString
#   registerBits - SOAP::SOAPString
#   desiredBits - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CpuCompatibilityUnknown < CpuIncompatible
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :level
  attr_accessor :registerName
  attr_accessor :registerBits
  attr_accessor :desiredBits
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], level = nil, registerName = nil, registerBits = nil, desiredBits = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @level = level
    @registerName = registerName
    @registerBits = registerBits
    @desiredBits = desiredBits
    @host = host
  end
end

# {urn:vim25}CpuIncompatible1ECX
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   level - SOAP::SOAPInt
#   registerName - SOAP::SOAPString
#   registerBits - SOAP::SOAPString
#   desiredBits - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sse3 - SOAP::SOAPBoolean
#   ssse3 - SOAP::SOAPBoolean
#   sse41 - SOAP::SOAPBoolean
#   sse42 - SOAP::SOAPBoolean
#   other - SOAP::SOAPBoolean
#   otherOnly - SOAP::SOAPBoolean
class CpuIncompatible1ECX < CpuIncompatible
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :level
  attr_accessor :registerName
  attr_accessor :registerBits
  attr_accessor :desiredBits
  attr_accessor :host
  attr_accessor :sse3
  attr_accessor :ssse3
  attr_accessor :sse41
  attr_accessor :sse42
  attr_accessor :other
  attr_accessor :otherOnly

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], level = nil, registerName = nil, registerBits = nil, desiredBits = nil, host = nil, sse3 = nil, ssse3 = nil, sse41 = nil, sse42 = nil, other = nil, otherOnly = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @level = level
    @registerName = registerName
    @registerBits = registerBits
    @desiredBits = desiredBits
    @host = host
    @sse3 = sse3
    @ssse3 = ssse3
    @sse41 = sse41
    @sse42 = sse42
    @other = other
    @otherOnly = otherOnly
  end
end

# {urn:vim25}CpuIncompatible81EDX
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   level - SOAP::SOAPInt
#   registerName - SOAP::SOAPString
#   registerBits - SOAP::SOAPString
#   desiredBits - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   nx - SOAP::SOAPBoolean
#   ffxsr - SOAP::SOAPBoolean
#   rdtscp - SOAP::SOAPBoolean
#   lm - SOAP::SOAPBoolean
#   other - SOAP::SOAPBoolean
#   otherOnly - SOAP::SOAPBoolean
class CpuIncompatible81EDX < CpuIncompatible
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :level
  attr_accessor :registerName
  attr_accessor :registerBits
  attr_accessor :desiredBits
  attr_accessor :host
  attr_accessor :nx
  attr_accessor :ffxsr
  attr_accessor :rdtscp
  attr_accessor :lm
  attr_accessor :other
  attr_accessor :otherOnly

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], level = nil, registerName = nil, registerBits = nil, desiredBits = nil, host = nil, nx = nil, ffxsr = nil, rdtscp = nil, lm = nil, other = nil, otherOnly = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @level = level
    @registerName = registerName
    @registerBits = registerBits
    @desiredBits = desiredBits
    @host = host
    @nx = nx
    @ffxsr = ffxsr
    @rdtscp = rdtscp
    @lm = lm
    @other = other
    @otherOnly = otherOnly
  end
end

# {urn:vim25}FaultToleranceCpuIncompatible
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   level - SOAP::SOAPInt
#   registerName - SOAP::SOAPString
#   registerBits - SOAP::SOAPString
#   desiredBits - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   model - SOAP::SOAPBoolean
#   family - SOAP::SOAPBoolean
#   stepping - SOAP::SOAPBoolean
class FaultToleranceCpuIncompatible < CpuIncompatible
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :level
  attr_accessor :registerName
  attr_accessor :registerBits
  attr_accessor :desiredBits
  attr_accessor :host
  attr_accessor :model
  attr_accessor :family
  attr_accessor :stepping

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], level = nil, registerName = nil, registerBits = nil, desiredBits = nil, host = nil, model = nil, family = nil, stepping = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @level = level
    @registerName = registerName
    @registerBits = registerBits
    @desiredBits = desiredBits
    @host = host
    @model = model
    @family = family
    @stepping = stepping
  end
end

# {urn:vim25}DeviceNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class DeviceNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}DeviceBackingNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   backing - SOAP::SOAPString
class DeviceBackingNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @backing = backing
  end
end

# {urn:vim25}DVPortNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   backing - SOAP::SOAPString
class DVPortNotSupported < DeviceBackingNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @backing = backing
  end
end

# {urn:vim25}UnusedVirtualDiskBlocksNotScrubbed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   backing - SOAP::SOAPString
class UnusedVirtualDiskBlocksNotScrubbed < DeviceBackingNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @backing = backing
  end
end

# {urn:vim25}VirtualDiskBlocksNotFullyProvisioned
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   backing - SOAP::SOAPString
class VirtualDiskBlocksNotFullyProvisioned < DeviceBackingNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :backing

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, backing = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @backing = backing
  end
end

# {urn:vim25}DeviceControllerNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   controller - SOAP::SOAPString
class DeviceControllerNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :controller

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, controller = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @controller = controller
  end
end

# {urn:vim25}FileBackedPortNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class FileBackedPortNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}NonPersistentDisksNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class NonPersistentDisksNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}RDMNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class RDMNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}PhysCompatRDMNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class PhysCompatRDMNotSupported < RDMNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}RawDiskNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class RawDiskNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}RemoteDeviceNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class RemoteDeviceNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}SharedBusControllerNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class SharedBusControllerNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}VMINotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class VMINotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}VirtualDiskModeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
#   mode - SOAP::SOAPString
class VirtualDiskModeNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason
  attr_accessor :mode

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil, mode = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
    @mode = mode
  end
end

# {urn:vim25}VirtualEthernetCardNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   reason - SOAP::SOAPString
class VirtualEthernetCardNotSupported < DeviceNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @reason = reason
  end
end

# {urn:vim25}DiskNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   disk - SOAP::SOAPInt
class DiskNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :disk

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], disk = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @disk = disk
  end
end

# {urn:vim25}IDEDiskNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   disk - SOAP::SOAPInt
class IDEDiskNotSupported < DiskNotSupported
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :disk

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], disk = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @disk = disk
  end
end

# {urn:vim25}DrsVmotionIncompatibleFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DrsVmotionIncompatibleFault < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
  end
end

# {urn:vim25}MemorySizeNotRecommended
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   memorySizeMB - SOAP::SOAPInt
#   minMemorySizeMB - SOAP::SOAPInt
#   maxMemorySizeMB - SOAP::SOAPInt
class MemorySizeNotRecommended < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :memorySizeMB
  attr_accessor :minMemorySizeMB
  attr_accessor :maxMemorySizeMB

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], memorySizeMB = nil, minMemorySizeMB = nil, maxMemorySizeMB = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @memorySizeMB = memorySizeMB
    @minMemorySizeMB = minMemorySizeMB
    @maxMemorySizeMB = maxMemorySizeMB
  end
end

# {urn:vim25}MemorySizeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   memorySizeMB - SOAP::SOAPInt
#   minMemorySizeMB - SOAP::SOAPInt
#   maxMemorySizeMB - SOAP::SOAPInt
class MemorySizeNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :memorySizeMB
  attr_accessor :minMemorySizeMB
  attr_accessor :maxMemorySizeMB

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], memorySizeMB = nil, minMemorySizeMB = nil, maxMemorySizeMB = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @memorySizeMB = memorySizeMB
    @minMemorySizeMB = minMemorySizeMB
    @maxMemorySizeMB = maxMemorySizeMB
  end
end

# {urn:vim25}NotEnoughCpus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   numCpuDest - SOAP::SOAPInt
#   numCpuVm - SOAP::SOAPInt
class NotEnoughCpus < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :numCpuDest
  attr_accessor :numCpuVm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], numCpuDest = nil, numCpuVm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @numCpuDest = numCpuDest
    @numCpuVm = numCpuVm
  end
end

# {urn:vim25}NotEnoughLogicalCpus
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   numCpuDest - SOAP::SOAPInt
#   numCpuVm - SOAP::SOAPInt
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class NotEnoughLogicalCpus < NotEnoughCpus
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :numCpuDest
  attr_accessor :numCpuVm
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], numCpuDest = nil, numCpuVm = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @numCpuDest = numCpuDest
    @numCpuVm = numCpuVm
    @host = host
  end
end

# {urn:vim25}NumVirtualCpusNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   maxSupportedVcpusDest - SOAP::SOAPInt
#   numCpuVm - SOAP::SOAPInt
class NumVirtualCpusNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :maxSupportedVcpusDest
  attr_accessor :numCpuVm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], maxSupportedVcpusDest = nil, numCpuVm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @maxSupportedVcpusDest = maxSupportedVcpusDest
    @numCpuVm = numCpuVm
  end
end

# {urn:vim25}VirtualHardwareVersionNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VirtualHardwareVersionNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName
  attr_accessor :host

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil, host = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
    @host = host
  end
end

# {urn:vim25}WakeOnLanNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class WakeOnLanNotSupported < VirtualHardwareCompatibilityIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmConfigIncompatibleForFaultTolerance
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmConfigIncompatibleForFaultTolerance < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @fault = fault
  end
end

# {urn:vim25}VmConfigIncompatibleForRecordReplay
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmConfigIncompatibleForRecordReplay < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :fault

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], fault = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @fault = fault
  end
end

# {urn:vim25}VmHostAffinityRuleViolation
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vmName - SOAP::SOAPString
#   hostName - SOAP::SOAPString
class VmHostAffinityRuleViolation < VmConfigFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vmName
  attr_accessor :hostName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vmName = nil, hostName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vmName = vmName
    @hostName = hostName
  end
end

# {urn:vim25}VmFaultToleranceIssue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmFaultToleranceIssue < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}CannotChangeDrsBehaviorForFtSecondary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
class CannotChangeDrsBehaviorForFtSecondary < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @vmName = vmName
  end
end

# {urn:vim25}CannotChangeHaSettingsForFtSecondary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
class CannotChangeHaSettingsForFtSecondary < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @vmName = vmName
  end
end

# {urn:vim25}FaultToleranceNotLicensed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
class FaultToleranceNotLicensed < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
  end
end

# {urn:vim25}FaultTolerancePrimaryPowerOnNotAttempted
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   secondaryVm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   primaryVm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FaultTolerancePrimaryPowerOnNotAttempted < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :secondaryVm
  attr_accessor :primaryVm

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], secondaryVm = nil, primaryVm = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @secondaryVm = secondaryVm
    @primaryVm = primaryVm
  end
end

# {urn:vim25}FtIssuesOnHost
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostName - SOAP::SOAPString
#   errors - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class FtIssuesOnHost < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :hostName
  attr_accessor :errors

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, hostName = nil, errors = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @hostName = hostName
    @errors = errors
  end
end

# {urn:vim25}HostIncompatibleForFaultTolerance
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   hostName - SOAP::SOAPString
#   reason - SOAP::SOAPString
class HostIncompatibleForFaultTolerance < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :hostName
  attr_accessor :reason

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], hostName = nil, reason = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @hostName = hostName
    @reason = reason
  end
end

# {urn:vim25}IncompatibleHostForFtSecondary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class IncompatibleHostForFtSecondary < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, error = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @error = error
  end
end

# {urn:vim25}InvalidOperationOnSecondaryVm
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   instanceUuid - SOAP::SOAPString
class InvalidOperationOnSecondaryVm < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}NoHostSuitableForFtSecondary
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
class NoHostSuitableForFtSecondary < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :vmName

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, vmName = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @vmName = vmName
  end
end

# {urn:vim25}NotSupportedDeviceForFT
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostName - SOAP::SOAPString
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
#   deviceType - SOAP::SOAPString
#   deviceLabel - SOAP::SOAPString
class NotSupportedDeviceForFT < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :host
  attr_accessor :hostName
  attr_accessor :vm
  attr_accessor :vmName
  attr_accessor :deviceType
  attr_accessor :deviceLabel

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], host = nil, hostName = nil, vm = nil, vmName = nil, deviceType = nil, deviceLabel = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @host = host
    @hostName = hostName
    @vm = vm
    @vmName = vmName
    @deviceType = deviceType
    @deviceLabel = deviceLabel
  end
end

# {urn:vim25}PowerOnFtSecondaryFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmName - SOAP::SOAPString
#   hostSelectionBy - Bosh::Director::CloudProviders::VSphere::FtIssuesOnHostHostSelectionType
#   hostErrors - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   rootCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class PowerOnFtSecondaryFailed < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :vm
  attr_accessor :vmName
  attr_accessor :hostSelectionBy
  attr_accessor :hostErrors
  attr_accessor :rootCause

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], vm = nil, vmName = nil, hostSelectionBy = nil, hostErrors = [], rootCause = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @vm = vm
    @vmName = vmName
    @hostSelectionBy = hostSelectionBy
    @hostErrors = hostErrors
    @rootCause = rootCause
  end
end

# {urn:vim25}SecondaryVmAlreadyDisabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   instanceUuid - SOAP::SOAPString
class SecondaryVmAlreadyDisabled < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}SecondaryVmAlreadyEnabled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   instanceUuid - SOAP::SOAPString
class SecondaryVmAlreadyEnabled < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}SecondaryVmAlreadyRegistered
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   instanceUuid - SOAP::SOAPString
class SecondaryVmAlreadyRegistered < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}SecondaryVmNotRegistered
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   instanceUuid - SOAP::SOAPString
class SecondaryVmNotRegistered < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :instanceUuid

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], instanceUuid = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}VmFaultToleranceConfigIssue
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   reason - SOAP::SOAPString
#   entityName - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class VmFaultToleranceConfigIssue < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :reason
  attr_accessor :entityName
  attr_accessor :entity

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], reason = nil, entityName = nil, entity = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @reason = reason
    @entityName = entityName
    @entity = entity
  end
end

# {urn:vim25}VmFaultToleranceConfigIssueWrapper
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   entityName - SOAP::SOAPString
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   error - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFaultToleranceConfigIssueWrapper < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :entityName
  attr_accessor :entity
  attr_accessor :error

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], entityName = nil, entity = nil, error = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @entityName = entityName
    @entity = entity
    @error = error
  end
end

# {urn:vim25}VmFaultToleranceInvalidFileBacking
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   backingType - SOAP::SOAPString
#   backingFilename - SOAP::SOAPString
class VmFaultToleranceInvalidFileBacking < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :backingType
  attr_accessor :backingFilename

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], backingType = nil, backingFilename = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @backingType = backingType
    @backingFilename = backingFilename
  end
end

# {urn:vim25}VmFaultToleranceOpIssuesList
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   errors - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   warnings - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class VmFaultToleranceOpIssuesList < VmFaultToleranceIssue
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :errors
  attr_accessor :warnings

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], errors = [], warnings = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @errors = errors
    @warnings = warnings
  end
end

# {urn:vim25}VmMonitorIncompatibleForFaultTolerance
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmMonitorIncompatibleForFaultTolerance < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmToolsUpgradeFault
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class VmToolsUpgradeFault < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsAlreadyUpgraded
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsAlreadyUpgraded < VmToolsUpgradeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsAutoUpgradeNotSupported
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsAutoUpgradeNotSupported < VmToolsUpgradeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsImageNotAvailable
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsImageNotAvailable < VmToolsUpgradeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsImageSignatureCheckFailed
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsImageSignatureCheckFailed < VmToolsUpgradeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}ToolsUpgradeCancelled
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class ToolsUpgradeCancelled < VmToolsUpgradeFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [])
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
  end
end

# {urn:vim25}VmValidateMaxDevice
#   dynamicType - SOAP::SOAPString
#   dynamicProperty - Bosh::Director::CloudProviders::VSphere::DynamicProperty
#   faultCause - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
#   faultMessage - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
#   device - SOAP::SOAPString
#   max - SOAP::SOAPInt
#   count - SOAP::SOAPInt
class VmValidateMaxDevice < VimFault
  attr_accessor :dynamicType
  attr_accessor :dynamicProperty
  attr_accessor :faultCause
  attr_accessor :faultMessage
  attr_accessor :device
  attr_accessor :max
  attr_accessor :count

  def initialize(dynamicType = nil, dynamicProperty = [], faultCause = nil, faultMessage = [], device = nil, max = nil, count = nil)
    @dynamicType = dynamicType
    @dynamicProperty = dynamicProperty
    @faultCause = faultCause
    @faultMessage = faultMessage
    @device = device
    @max = max
    @count = count
  end
end

# {urn:vim25}ArrayOfMethodFault
class ArrayOfMethodFault < ::Array
end

# {urn:vim25}ManagedObjectReference
#   xmlattr_type - SOAP::SOAPString
class ManagedObjectReference < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:vim25}ArrayOfString
class ArrayOfString < ::Array
end

# {urn:vim25}ArrayOfAnyType
class ArrayOfAnyType < ::Array
end

# {urn:vim25}ArrayOfManagedObjectReference
class ArrayOfManagedObjectReference < ::Array
end

# {urn:vim25}ArrayOfByte
class ArrayOfByte < ::Array
end

# {urn:vim25}ArrayOfInt
class ArrayOfInt < ::Array
end

# {urn:vim25}ArrayOfLong
class ArrayOfLong < ::Array
end

# {urn:vim25}ArrayOfShort
class ArrayOfShort < ::Array
end

# {urn:vim25}ArrayOfPropertyFilterSpec
class ArrayOfPropertyFilterSpec < ::Array
end

# {urn:vim25}ArrayOfPropertySpec
class ArrayOfPropertySpec < ::Array
end

# {urn:vim25}ArrayOfObjectSpec
class ArrayOfObjectSpec < ::Array
end

# {urn:vim25}ArrayOfSelectionSpec
class ArrayOfSelectionSpec < ::Array
end

# {urn:vim25}ArrayOfObjectContent
class ArrayOfObjectContent < ::Array
end

# {urn:vim25}ArrayOfPropertyFilterUpdate
class ArrayOfPropertyFilterUpdate < ::Array
end

# {urn:vim25}ArrayOfObjectUpdate
class ArrayOfObjectUpdate < ::Array
end

# {urn:vim25}ArrayOfPropertyChange
class ArrayOfPropertyChange < ::Array
end

# {urn:vim25}ArrayOfMissingProperty
class ArrayOfMissingProperty < ::Array
end

# {urn:vim25}ArrayOfMissingObject
class ArrayOfMissingObject < ::Array
end

# {urn:vim25}AddAuthorizationRoleRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   privIds - SOAP::SOAPString
class AddAuthorizationRoleRequestType
  attr_accessor :name
  attr_accessor :privIds

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, privIds = [])
    @v__this = v__this
    @name = name
    @privIds = privIds
  end
end

# {urn:vim25}RemoveAuthorizationRoleRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   roleId - SOAP::SOAPInt
#   failIfUsed - SOAP::SOAPBoolean
class RemoveAuthorizationRoleRequestType
  attr_accessor :roleId
  attr_accessor :failIfUsed

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, roleId = nil, failIfUsed = nil)
    @v__this = v__this
    @roleId = roleId
    @failIfUsed = failIfUsed
  end
end

# {urn:vim25}UpdateAuthorizationRoleRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   roleId - SOAP::SOAPInt
#   newName - SOAP::SOAPString
#   privIds - SOAP::SOAPString
class UpdateAuthorizationRoleRequestType
  attr_accessor :roleId
  attr_accessor :newName
  attr_accessor :privIds

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, roleId = nil, newName = nil, privIds = [])
    @v__this = v__this
    @roleId = roleId
    @newName = newName
    @privIds = privIds
  end
end

# {urn:vim25}MergePermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   srcRoleId - SOAP::SOAPInt
#   dstRoleId - SOAP::SOAPInt
class MergePermissionsRequestType
  attr_accessor :srcRoleId
  attr_accessor :dstRoleId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, srcRoleId = nil, dstRoleId = nil)
    @v__this = v__this
    @srcRoleId = srcRoleId
    @dstRoleId = dstRoleId
  end
end

# {urn:vim25}RetrieveRolePermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   roleId - SOAP::SOAPInt
class RetrieveRolePermissionsRequestType
  attr_accessor :roleId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, roleId = nil)
    @v__this = v__this
    @roleId = roleId
  end
end

# {urn:vim25}RetrieveEntityPermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   inherited - SOAP::SOAPBoolean
class RetrieveEntityPermissionsRequestType
  attr_accessor :entity
  attr_accessor :inherited

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, inherited = nil)
    @v__this = v__this
    @entity = entity
    @inherited = inherited
  end
end

# {urn:vim25}RetrieveAllPermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveAllPermissionsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}SetEntityPermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   permission - Bosh::Director::CloudProviders::VSphere::Permission
class SetEntityPermissionsRequestType
  attr_accessor :entity
  attr_accessor :permission

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, permission = [])
    @v__this = v__this
    @entity = entity
    @permission = permission
  end
end

# {urn:vim25}ResetEntityPermissionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   permission - Bosh::Director::CloudProviders::VSphere::Permission
class ResetEntityPermissionsRequestType
  attr_accessor :entity
  attr_accessor :permission

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, permission = [])
    @v__this = v__this
    @entity = entity
    @permission = permission
  end
end

# {urn:vim25}RemoveEntityPermissionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   user - SOAP::SOAPString
#   isGroup - SOAP::SOAPBoolean
class RemoveEntityPermissionRequestType
  attr_accessor :entity
  attr_accessor :user
  attr_accessor :isGroup

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, user = nil, isGroup = nil)
    @v__this = v__this
    @entity = entity
    @user = user
    @isGroup = isGroup
  end
end

# {urn:vim25}ReconfigureClusterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ClusterConfigSpec
#   modify - SOAP::SOAPBoolean
class ReconfigureClusterRequestType
  attr_accessor :spec
  attr_accessor :modify

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, modify = nil)
    @v__this = v__this
    @spec = spec
    @modify = modify
  end
end

# {urn:vim25}ApplyRecommendationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
class ApplyRecommendationRequestType
  attr_accessor :key

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil)
    @v__this = v__this
    @key = key
  end
end

# {urn:vim25}CancelRecommendationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
class CancelRecommendationRequestType
  attr_accessor :key

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil)
    @v__this = v__this
    @key = key
  end
end

# {urn:vim25}RecommendHostsForVmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RecommendHostsForVmRequestType
  attr_accessor :vm
  attr_accessor :pool

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, pool = nil)
    @v__this = v__this
    @vm = vm
    @pool = pool
  end
end

# {urn:vim25}AddHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostConnectSpec
#   asConnected - SOAP::SOAPBoolean
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   license - SOAP::SOAPString
class AddHostRequestType
  attr_accessor :spec
  attr_accessor :asConnected
  attr_accessor :resourcePool
  attr_accessor :license

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, asConnected = nil, resourcePool = nil, license = nil)
    @v__this = v__this
    @spec = spec
    @asConnected = asConnected
    @resourcePool = resourcePool
    @license = license
  end
end

# {urn:vim25}MoveIntoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveIntoRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = [])
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}MoveHostIntoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveHostIntoRequestType
  attr_accessor :host
  attr_accessor :resourcePool

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, resourcePool = nil)
    @v__this = v__this
    @host = host
    @resourcePool = resourcePool
  end
end

# {urn:vim25}RefreshRecommendationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshRecommendationRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RetrieveDasAdvancedRuntimeInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveDasAdvancedRuntimeInfoRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigureComputeResourceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ComputeResourceConfigSpec
#   modify - SOAP::SOAPBoolean
class ReconfigureComputeResourceRequestType
  attr_accessor :spec
  attr_accessor :modify

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, modify = nil)
    @v__this = v__this
    @spec = spec
    @modify = modify
  end
end

# {urn:vim25}AddCustomFieldDefRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   moType - SOAP::SOAPString
#   fieldDefPolicy - Bosh::Director::CloudProviders::VSphere::PrivilegePolicyDef
#   fieldPolicy - Bosh::Director::CloudProviders::VSphere::PrivilegePolicyDef
class AddCustomFieldDefRequestType
  attr_accessor :name
  attr_accessor :moType
  attr_accessor :fieldDefPolicy
  attr_accessor :fieldPolicy

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, moType = nil, fieldDefPolicy = nil, fieldPolicy = nil)
    @v__this = v__this
    @name = name
    @moType = moType
    @fieldDefPolicy = fieldDefPolicy
    @fieldPolicy = fieldPolicy
  end
end

# {urn:vim25}RemoveCustomFieldDefRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPInt
class RemoveCustomFieldDefRequestType
  attr_accessor :key

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil)
    @v__this = v__this
    @key = key
  end
end

# {urn:vim25}RenameCustomFieldDefRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPInt
#   name - SOAP::SOAPString
class RenameCustomFieldDefRequestType
  attr_accessor :key
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil, name = nil)
    @v__this = v__this
    @key = key
    @name = name
  end
end

# {urn:vim25}SetFieldRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPInt
#   value - SOAP::SOAPString
class SetFieldRequestType
  attr_accessor :entity
  attr_accessor :key
  attr_accessor :value

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, key = nil, value = nil)
    @v__this = v__this
    @entity = entity
    @key = key
    @value = value
  end
end

# {urn:vim25}DoesCustomizationSpecExistRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class DoesCustomizationSpecExistRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}GetCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class GetCustomizationSpecRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}CreateCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   item - Bosh::Director::CloudProviders::VSphere::CustomizationSpecItem
class CreateCustomizationSpecRequestType
  attr_accessor :item

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, item = nil)
    @v__this = v__this
    @item = item
  end
end

# {urn:vim25}OverwriteCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   item - Bosh::Director::CloudProviders::VSphere::CustomizationSpecItem
class OverwriteCustomizationSpecRequestType
  attr_accessor :item

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, item = nil)
    @v__this = v__this
    @item = item
  end
end

# {urn:vim25}DeleteCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class DeleteCustomizationSpecRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}DuplicateCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   newName - SOAP::SOAPString
class DuplicateCustomizationSpecRequestType
  attr_accessor :name
  attr_accessor :newName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, newName = nil)
    @v__this = v__this
    @name = name
    @newName = newName
  end
end

# {urn:vim25}RenameCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   newName - SOAP::SOAPString
class RenameCustomizationSpecRequestType
  attr_accessor :name
  attr_accessor :newName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, newName = nil)
    @v__this = v__this
    @name = name
    @newName = newName
  end
end

# {urn:vim25}CustomizationSpecItemToXmlRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   item - Bosh::Director::CloudProviders::VSphere::CustomizationSpecItem
class CustomizationSpecItemToXmlRequestType
  attr_accessor :item

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, item = nil)
    @v__this = v__this
    @item = item
  end
end

# {urn:vim25}XmlToCustomizationSpecItemRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   specItemXml - SOAP::SOAPString
class XmlToCustomizationSpecItemRequestType
  attr_accessor :specItemXml

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, specItemXml = nil)
    @v__this = v__this
    @specItemXml = specItemXml
  end
end

# {urn:vim25}CheckCustomizationResourcesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   guestOs - SOAP::SOAPString
class CheckCustomizationResourcesRequestType
  attr_accessor :guestOs

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, guestOs = nil)
    @v__this = v__this
    @guestOs = guestOs
  end
end

# {urn:vim25}QueryConnectionInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostname - SOAP::SOAPString
#   port - SOAP::SOAPInt
#   username - SOAP::SOAPString
#   password - SOAP::SOAPString
#   sslThumbprint - SOAP::SOAPString
class QueryConnectionInfoRequestType
  attr_accessor :hostname
  attr_accessor :port
  attr_accessor :username
  attr_accessor :password
  attr_accessor :sslThumbprint

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, hostname = nil, port = nil, username = nil, password = nil, sslThumbprint = nil)
    @v__this = v__this
    @hostname = hostname
    @port = port
    @username = username
    @password = password
    @sslThumbprint = sslThumbprint
  end
end

# {urn:vim25}PowerOnMultiVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   option - Bosh::Director::CloudProviders::VSphere::OptionValue
class PowerOnMultiVMRequestType
  attr_accessor :vm
  attr_accessor :option

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = [], option = [])
    @v__this = v__this
    @vm = vm
    @option = option
  end
end

# {urn:vim25}RefreshDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshDatastoreRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RefreshDatastoreStorageInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshDatastoreStorageInfoRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateVirtualMachineFilesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   mountPathDatastoreMapping - Bosh::Director::CloudProviders::VSphere::DatastoreMountPathDatastorePair
class UpdateVirtualMachineFilesRequestType
  attr_accessor :mountPathDatastoreMapping

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, mountPathDatastoreMapping = [])
    @v__this = v__this
    @mountPathDatastoreMapping = mountPathDatastoreMapping
  end
end

# {urn:vim25}RenameDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   newName - SOAP::SOAPString
class RenameDatastoreRequestType
  attr_accessor :newName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, newName = nil)
    @v__this = v__this
    @newName = newName
  end
end

# {urn:vim25}DestroyDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyDatastoreRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryDescriptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryDescriptionsRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}BrowseDiagnosticLogRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
#   start - SOAP::SOAPInt
#   lines - SOAP::SOAPInt
class BrowseDiagnosticLogRequestType
  attr_accessor :host
  attr_accessor :key
  attr_accessor :start
  attr_accessor :lines

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, key = nil, start = nil, lines = nil)
    @v__this = v__this
    @host = host
    @key = key
    @start = start
    @lines = lines
  end
end

# {urn:vim25}GenerateLogBundlesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   includeDefault - SOAP::SOAPBoolean
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GenerateLogBundlesRequestType
  attr_accessor :includeDefault
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, includeDefault = nil, host = [])
    @v__this = v__this
    @includeDefault = includeDefault
    @host = host
  end
end

# {urn:vim25}FetchDVPortKeysRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   criteria - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortCriteria
class FetchDVPortKeysRequestType
  attr_accessor :criteria

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, criteria = nil)
    @v__this = v__this
    @criteria = criteria
  end
end

# {urn:vim25}FetchDVPortsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   criteria - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchPortCriteria
class FetchDVPortsRequestType
  attr_accessor :criteria

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, criteria = nil)
    @v__this = v__this
    @criteria = criteria
  end
end

# {urn:vim25}QueryUsedVlanIdInDvsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryUsedVlanIdInDvsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigureDvsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::DVSConfigSpec
class ReconfigureDvsRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}PerformDvsProductSpecOperationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   operation - SOAP::SOAPString
#   productSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class PerformDvsProductSpecOperationRequestType
  attr_accessor :operation
  attr_accessor :productSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, operation = nil, productSpec = nil)
    @v__this = v__this
    @operation = operation
    @productSpec = productSpec
  end
end

# {urn:vim25}MergeDvsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dvs - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MergeDvsRequestType
  attr_accessor :dvs

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dvs = nil)
    @v__this = v__this
    @dvs = dvs
  end
end

# {urn:vim25}AddDVPortgroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::DVPortgroupConfigSpec
class AddDVPortgroupRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = [])
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}MoveDVPortRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portKey - SOAP::SOAPString
#   destinationPortgroupKey - SOAP::SOAPString
class MoveDVPortRequestType
  attr_accessor :portKey
  attr_accessor :destinationPortgroupKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, portKey = [], destinationPortgroupKey = nil)
    @v__this = v__this
    @portKey = portKey
    @destinationPortgroupKey = destinationPortgroupKey
  end
end

# {urn:vim25}UpdateDvsCapabilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   capability - Bosh::Director::CloudProviders::VSphere::DVSCapability
class UpdateDvsCapabilityRequestType
  attr_accessor :capability

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, capability = nil)
    @v__this = v__this
    @capability = capability
  end
end

# {urn:vim25}ReconfigureDVPortRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   port - Bosh::Director::CloudProviders::VSphere::DVPortConfigSpec
class ReconfigureDVPortRequestType
  attr_accessor :port

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, port = [])
    @v__this = v__this
    @port = port
  end
end

# {urn:vim25}RefreshDVPortStateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portKeys - SOAP::SOAPString
class RefreshDVPortStateRequestType
  attr_accessor :portKeys

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, portKeys = [])
    @v__this = v__this
    @portKeys = portKeys
  end
end

# {urn:vim25}RectifyDvsHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hosts - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RectifyDvsHostRequestType
  attr_accessor :hosts

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, hosts = [])
    @v__this = v__this
    @hosts = hosts
  end
end

# {urn:vim25}UpdateNetworkResourcePoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   configSpec - Bosh::Director::CloudProviders::VSphere::DVSNetworkResourcePoolConfigSpec
class UpdateNetworkResourcePoolRequestType
  attr_accessor :configSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, configSpec = [])
    @v__this = v__this
    @configSpec = configSpec
  end
end

# {urn:vim25}EnableNetworkResourceManagementRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   enable - SOAP::SOAPBoolean
class EnableNetworkResourceManagementRequestType
  attr_accessor :enable

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, enable = nil)
    @v__this = v__this
    @enable = enable
  end
end

# {urn:vim25}QueryConfigOptionDescriptorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryConfigOptionDescriptorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryConfigOptionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryConfigOptionRequestType
  attr_accessor :key
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil, host = nil)
    @v__this = v__this
    @key = key
    @host = host
  end
end

# {urn:vim25}QueryConfigTargetRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryConfigTargetRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}QueryTargetCapabilitiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryTargetCapabilitiesRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}setCustomValueRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
#   value - SOAP::SOAPString
class SetCustomValueRequestType
  attr_accessor :key
  attr_accessor :value

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil, value = nil)
    @v__this = v__this
    @key = key
    @value = value
  end
end

# {urn:vim25}UnregisterExtensionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
class UnregisterExtensionRequestType
  attr_accessor :extensionKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil)
    @v__this = v__this
    @extensionKey = extensionKey
  end
end

# {urn:vim25}FindExtensionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
class FindExtensionRequestType
  attr_accessor :extensionKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil)
    @v__this = v__this
    @extensionKey = extensionKey
  end
end

# {urn:vim25}RegisterExtensionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extension - Bosh::Director::CloudProviders::VSphere::Extension
class RegisterExtensionRequestType
  attr_accessor :extension

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extension = nil)
    @v__this = v__this
    @extension = extension
  end
end

# {urn:vim25}UpdateExtensionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extension - Bosh::Director::CloudProviders::VSphere::Extension
class UpdateExtensionRequestType
  attr_accessor :extension

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extension = nil)
    @v__this = v__this
    @extension = extension
  end
end

# {urn:vim25}GetPublicKeyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GetPublicKeyRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}SetPublicKeyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
#   publicKey - SOAP::SOAPString
class SetPublicKeyRequestType
  attr_accessor :extensionKey
  attr_accessor :publicKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil, publicKey = nil)
    @v__this = v__this
    @extensionKey = extensionKey
    @publicKey = publicKey
  end
end

# {urn:vim25}SetExtensionCertificateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
#   certificatePem - SOAP::SOAPString
class SetExtensionCertificateRequestType
  attr_accessor :extensionKey
  attr_accessor :certificatePem

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil, certificatePem = nil)
    @v__this = v__this
    @extensionKey = extensionKey
    @certificatePem = certificatePem
  end
end

# {urn:vim25}MoveDatastoreFileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sourceName - SOAP::SOAPString
#   sourceDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destinationName - SOAP::SOAPString
#   destinationDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class MoveDatastoreFileRequestType
  attr_accessor :sourceName
  attr_accessor :sourceDatacenter
  attr_accessor :destinationName
  attr_accessor :destinationDatacenter
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sourceName = nil, sourceDatacenter = nil, destinationName = nil, destinationDatacenter = nil, force = nil)
    @v__this = v__this
    @sourceName = sourceName
    @sourceDatacenter = sourceDatacenter
    @destinationName = destinationName
    @destinationDatacenter = destinationDatacenter
    @force = force
  end
end

# {urn:vim25}CopyDatastoreFileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sourceName - SOAP::SOAPString
#   sourceDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destinationName - SOAP::SOAPString
#   destinationDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class CopyDatastoreFileRequestType
  attr_accessor :sourceName
  attr_accessor :sourceDatacenter
  attr_accessor :destinationName
  attr_accessor :destinationDatacenter
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sourceName = nil, sourceDatacenter = nil, destinationName = nil, destinationDatacenter = nil, force = nil)
    @v__this = v__this
    @sourceName = sourceName
    @sourceDatacenter = sourceDatacenter
    @destinationName = destinationName
    @destinationDatacenter = destinationDatacenter
    @force = force
  end
end

# {urn:vim25}DeleteDatastoreFileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DeleteDatastoreFileRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}MakeDirectoryRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   createParentDirectories - SOAP::SOAPBoolean
class MakeDirectoryRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :createParentDirectories

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, createParentDirectories = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @createParentDirectories = createParentDirectories
  end
end

# {urn:vim25}ChangeOwnerRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   owner - SOAP::SOAPString
class ChangeOwnerRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :owner

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, owner = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @owner = owner
  end
end

# {urn:vim25}CreateFolderRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class CreateFolderRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}MoveIntoFolderRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   list - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveIntoFolderRequestType
  attr_accessor :list

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, list = [])
    @v__this = v__this
    @list = list
  end
end

# {urn:vim25}CreateVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVMRequestType
  attr_accessor :config
  attr_accessor :pool
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil, pool = nil, host = nil)
    @v__this = v__this
    @config = config
    @pool = pool
    @host = host
  end
end

# {urn:vim25}RegisterVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   path - SOAP::SOAPString
#   name - SOAP::SOAPString
#   asTemplate - SOAP::SOAPBoolean
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RegisterVMRequestType
  attr_accessor :path
  attr_accessor :name
  attr_accessor :asTemplate
  attr_accessor :pool
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, path = nil, name = nil, asTemplate = nil, pool = nil, host = nil)
    @v__this = v__this
    @path = path
    @name = name
    @asTemplate = asTemplate
    @pool = pool
    @host = host
  end
end

# {urn:vim25}CreateClusterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::ClusterConfigSpec
class CreateClusterRequestType
  attr_accessor :name
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, spec = nil)
    @v__this = v__this
    @name = name
    @spec = spec
  end
end

# {urn:vim25}CreateClusterExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::ClusterConfigSpecEx
class CreateClusterExRequestType
  attr_accessor :name
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, spec = nil)
    @v__this = v__this
    @name = name
    @spec = spec
  end
end

# {urn:vim25}AddStandaloneHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostConnectSpec
#   compResSpec - Bosh::Director::CloudProviders::VSphere::ComputeResourceConfigSpec
#   addConnected - SOAP::SOAPBoolean
#   license - SOAP::SOAPString
class AddStandaloneHostRequestType
  attr_accessor :spec
  attr_accessor :compResSpec
  attr_accessor :addConnected
  attr_accessor :license

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, compResSpec = nil, addConnected = nil, license = nil)
    @v__this = v__this
    @spec = spec
    @compResSpec = compResSpec
    @addConnected = addConnected
    @license = license
  end
end

# {urn:vim25}CreateDatacenterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class CreateDatacenterRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}UnregisterAndDestroyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnregisterAndDestroyRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateDVSRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::DVSCreateSpec
class CreateDVSRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}SetCollectorPageSizeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxCount - SOAP::SOAPInt
class SetCollectorPageSizeRequestType
  attr_accessor :maxCount

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, maxCount = nil)
    @v__this = v__this
    @maxCount = maxCount
  end
end

# {urn:vim25}RewindCollectorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RewindCollectorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResetCollectorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetCollectorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}DestroyCollectorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyCollectorRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryHostConnectionInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryHostConnectionInfoRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateSystemResourcesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resourceInfo - Bosh::Director::CloudProviders::VSphere::HostSystemResourceInfo
class UpdateSystemResourcesRequestType
  attr_accessor :resourceInfo

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, resourceInfo = nil)
    @v__this = v__this
    @resourceInfo = resourceInfo
  end
end

# {urn:vim25}ReconnectHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cnxSpec - Bosh::Director::CloudProviders::VSphere::HostConnectSpec
class ReconnectHostRequestType
  attr_accessor :cnxSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, cnxSpec = nil)
    @v__this = v__this
    @cnxSpec = cnxSpec
  end
end

# {urn:vim25}DisconnectHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DisconnectHostRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}EnterMaintenanceModeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   timeout - SOAP::SOAPInt
#   evacuatePoweredOffVms - SOAP::SOAPBoolean
class EnterMaintenanceModeRequestType
  attr_accessor :timeout
  attr_accessor :evacuatePoweredOffVms

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, timeout = nil, evacuatePoweredOffVms = nil)
    @v__this = v__this
    @timeout = timeout
    @evacuatePoweredOffVms = evacuatePoweredOffVms
  end
end

# {urn:vim25}ExitMaintenanceModeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   timeout - SOAP::SOAPInt
class ExitMaintenanceModeRequestType
  attr_accessor :timeout

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, timeout = nil)
    @v__this = v__this
    @timeout = timeout
  end
end

# {urn:vim25}RebootHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class RebootHostRequestType
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, force = nil)
    @v__this = v__this
    @force = force
  end
end

# {urn:vim25}ShutdownHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class ShutdownHostRequestType
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, force = nil)
    @v__this = v__this
    @force = force
  end
end

# {urn:vim25}PowerDownHostToStandByRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   timeoutSec - SOAP::SOAPInt
#   evacuatePoweredOffVms - SOAP::SOAPBoolean
class PowerDownHostToStandByRequestType
  attr_accessor :timeoutSec
  attr_accessor :evacuatePoweredOffVms

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, timeoutSec = nil, evacuatePoweredOffVms = nil)
    @v__this = v__this
    @timeoutSec = timeoutSec
    @evacuatePoweredOffVms = evacuatePoweredOffVms
  end
end

# {urn:vim25}PowerUpHostFromStandByRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   timeoutSec - SOAP::SOAPInt
class PowerUpHostFromStandByRequestType
  attr_accessor :timeoutSec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, timeoutSec = nil)
    @v__this = v__this
    @timeoutSec = timeoutSec
  end
end

# {urn:vim25}QueryMemoryOverheadRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   memorySize - SOAP::SOAPLong
#   videoRamSize - SOAP::SOAPInt
#   numVcpus - SOAP::SOAPInt
class QueryMemoryOverheadRequestType
  attr_accessor :memorySize
  attr_accessor :videoRamSize
  attr_accessor :numVcpus

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, memorySize = nil, videoRamSize = nil, numVcpus = nil)
    @v__this = v__this
    @memorySize = memorySize
    @videoRamSize = videoRamSize
    @numVcpus = numVcpus
  end
end

# {urn:vim25}QueryMemoryOverheadExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmConfigInfo - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigInfo
class QueryMemoryOverheadExRequestType
  attr_accessor :vmConfigInfo

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vmConfigInfo = nil)
    @v__this = v__this
    @vmConfigInfo = vmConfigInfo
  end
end

# {urn:vim25}ReconfigureHostForDASRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureHostForDASRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateFlagsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   flagInfo - Bosh::Director::CloudProviders::VSphere::HostFlagInfo
class UpdateFlagsRequestType
  attr_accessor :flagInfo

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, flagInfo = nil)
    @v__this = v__this
    @flagInfo = flagInfo
  end
end

# {urn:vim25}EnterLockdownModeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EnterLockdownModeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ExitLockdownModeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExitLockdownModeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AcquireCimServicesTicketRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AcquireCimServicesTicketRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateIpmiRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ipmiInfo - Bosh::Director::CloudProviders::VSphere::HostIpmiInfo
class UpdateIpmiRequestType
  attr_accessor :ipmiInfo

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ipmiInfo = nil)
    @v__this = v__this
    @ipmiInfo = ipmiInfo
  end
end

# {urn:vim25}RetrieveHardwareUptimeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveHardwareUptimeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}HttpNfcLeaseGetManifestRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HttpNfcLeaseGetManifestRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}HttpNfcLeaseCompleteRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class HttpNfcLeaseCompleteRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}HttpNfcLeaseAbortRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class HttpNfcLeaseAbortRequestType
  attr_accessor :fault

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, fault = nil)
    @v__this = v__this
    @fault = fault
  end
end

# {urn:vim25}HttpNfcLeaseProgressRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   percent - SOAP::SOAPInt
class HttpNfcLeaseProgressRequestType
  attr_accessor :percent

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, percent = nil)
    @v__this = v__this
    @percent = percent
  end
end

# {urn:vim25}QueryIpPoolsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dc - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryIpPoolsRequestType
  attr_accessor :dc

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dc = nil)
    @v__this = v__this
    @dc = dc
  end
end

# {urn:vim25}CreateIpPoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dc - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::IpPool
class CreateIpPoolRequestType
  attr_accessor :dc
  attr_accessor :pool

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dc = nil, pool = nil)
    @v__this = v__this
    @dc = dc
    @pool = pool
  end
end

# {urn:vim25}UpdateIpPoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dc - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::IpPool
class UpdateIpPoolRequestType
  attr_accessor :dc
  attr_accessor :pool

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dc = nil, pool = nil)
    @v__this = v__this
    @dc = dc
    @pool = pool
  end
end

# {urn:vim25}DestroyIpPoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dc - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPInt
#   force - SOAP::SOAPBoolean
class DestroyIpPoolRequestType
  attr_accessor :dc
  attr_accessor :id
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dc = nil, id = nil, force = nil)
    @v__this = v__this
    @dc = dc
    @id = id
    @force = force
  end
end

# {urn:vim25}UpdateAssignedLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - SOAP::SOAPString
#   licenseKey - SOAP::SOAPString
#   entityDisplayName - SOAP::SOAPString
class UpdateAssignedLicenseRequestType
  attr_accessor :entity
  attr_accessor :licenseKey
  attr_accessor :entityDisplayName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, licenseKey = nil, entityDisplayName = nil)
    @v__this = v__this
    @entity = entity
    @licenseKey = licenseKey
    @entityDisplayName = entityDisplayName
  end
end

# {urn:vim25}RemoveAssignedLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entityId - SOAP::SOAPString
class RemoveAssignedLicenseRequestType
  attr_accessor :entityId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entityId = nil)
    @v__this = v__this
    @entityId = entityId
  end
end

# {urn:vim25}QueryAssignedLicensesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entityId - SOAP::SOAPString
class QueryAssignedLicensesRequestType
  attr_accessor :entityId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entityId = nil)
    @v__this = v__this
    @entityId = entityId
  end
end

# {urn:vim25}QuerySupportedFeaturesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QuerySupportedFeaturesRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}QueryLicenseSourceAvailabilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryLicenseSourceAvailabilityRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}QueryLicenseUsageRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryLicenseUsageRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}SetLicenseEditionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   featureKey - SOAP::SOAPString
class SetLicenseEditionRequestType
  attr_accessor :host
  attr_accessor :featureKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, featureKey = nil)
    @v__this = v__this
    @host = host
    @featureKey = featureKey
  end
end

# {urn:vim25}CheckLicenseFeatureRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   featureKey - SOAP::SOAPString
class CheckLicenseFeatureRequestType
  attr_accessor :host
  attr_accessor :featureKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, featureKey = nil)
    @v__this = v__this
    @host = host
    @featureKey = featureKey
  end
end

# {urn:vim25}EnableFeatureRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   featureKey - SOAP::SOAPString
class EnableFeatureRequestType
  attr_accessor :host
  attr_accessor :featureKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, featureKey = nil)
    @v__this = v__this
    @host = host
    @featureKey = featureKey
  end
end

# {urn:vim25}DisableFeatureRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   featureKey - SOAP::SOAPString
class DisableFeatureRequestType
  attr_accessor :host
  attr_accessor :featureKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, featureKey = nil)
    @v__this = v__this
    @host = host
    @featureKey = featureKey
  end
end

# {urn:vim25}ConfigureLicenseSourceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseSource - Bosh::Director::CloudProviders::VSphere::LicenseSource
class ConfigureLicenseSourceRequestType
  attr_accessor :host
  attr_accessor :licenseSource

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, licenseSource = nil)
    @v__this = v__this
    @host = host
    @licenseSource = licenseSource
  end
end

# {urn:vim25}UpdateLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
#   labels - Bosh::Director::CloudProviders::VSphere::KeyValue
class UpdateLicenseRequestType
  attr_accessor :licenseKey
  attr_accessor :labels

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil, labels = [])
    @v__this = v__this
    @licenseKey = licenseKey
    @labels = labels
  end
end

# {urn:vim25}AddLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
#   labels - Bosh::Director::CloudProviders::VSphere::KeyValue
class AddLicenseRequestType
  attr_accessor :licenseKey
  attr_accessor :labels

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil, labels = [])
    @v__this = v__this
    @licenseKey = licenseKey
    @labels = labels
  end
end

# {urn:vim25}RemoveLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
class RemoveLicenseRequestType
  attr_accessor :licenseKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil)
    @v__this = v__this
    @licenseKey = licenseKey
  end
end

# {urn:vim25}DecodeLicenseRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
class DecodeLicenseRequestType
  attr_accessor :licenseKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil)
    @v__this = v__this
    @licenseKey = licenseKey
  end
end

# {urn:vim25}UpdateLicenseLabelRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
#   labelKey - SOAP::SOAPString
#   labelValue - SOAP::SOAPString
class UpdateLicenseLabelRequestType
  attr_accessor :licenseKey
  attr_accessor :labelKey
  attr_accessor :labelValue

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil, labelKey = nil, labelValue = nil)
    @v__this = v__this
    @licenseKey = licenseKey
    @labelKey = labelKey
    @labelValue = labelValue
  end
end

# {urn:vim25}RemoveLicenseLabelRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   licenseKey - SOAP::SOAPString
#   labelKey - SOAP::SOAPString
class RemoveLicenseLabelRequestType
  attr_accessor :licenseKey
  attr_accessor :labelKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, licenseKey = nil, labelKey = nil)
    @v__this = v__this
    @licenseKey = licenseKey
    @labelKey = labelKey
  end
end

# {urn:vim25}ReloadRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReloadRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RenameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   newName - SOAP::SOAPString
class RenameRequestType
  attr_accessor :newName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, newName = nil)
    @v__this = v__this
    @newName = newName
  end
end

# {urn:vim25}DestroyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}DestroyNetworkRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyNetworkRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ValidateHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ovfDescriptor - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vhp - Bosh::Director::CloudProviders::VSphere::OvfValidateHostParams
class ValidateHostRequestType
  attr_accessor :ovfDescriptor
  attr_accessor :host
  attr_accessor :vhp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ovfDescriptor = nil, host = nil, vhp = nil)
    @v__this = v__this
    @ovfDescriptor = ovfDescriptor
    @host = host
    @vhp = vhp
  end
end

# {urn:vim25}ParseDescriptorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ovfDescriptor - SOAP::SOAPString
#   pdp - Bosh::Director::CloudProviders::VSphere::OvfParseDescriptorParams
class ParseDescriptorRequestType
  attr_accessor :ovfDescriptor
  attr_accessor :pdp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ovfDescriptor = nil, pdp = nil)
    @v__this = v__this
    @ovfDescriptor = ovfDescriptor
    @pdp = pdp
  end
end

# {urn:vim25}CreateImportSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ovfDescriptor - SOAP::SOAPString
#   resourcePool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cisp - Bosh::Director::CloudProviders::VSphere::OvfCreateImportSpecParams
class CreateImportSpecRequestType
  attr_accessor :ovfDescriptor
  attr_accessor :resourcePool
  attr_accessor :datastore
  attr_accessor :cisp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ovfDescriptor = nil, resourcePool = nil, datastore = nil, cisp = nil)
    @v__this = v__this
    @ovfDescriptor = ovfDescriptor
    @resourcePool = resourcePool
    @datastore = datastore
    @cisp = cisp
  end
end

# {urn:vim25}CreateDescriptorRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cdp - Bosh::Director::CloudProviders::VSphere::OvfCreateDescriptorParams
class CreateDescriptorRequestType
  attr_accessor :obj
  attr_accessor :cdp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = nil, cdp = nil)
    @v__this = v__this
    @obj = obj
    @cdp = cdp
  end
end

# {urn:vim25}QueryPerfProviderSummaryRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryPerfProviderSummaryRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}QueryAvailablePerfMetricRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   beginTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   intervalId - SOAP::SOAPInt
class QueryAvailablePerfMetricRequestType
  attr_accessor :entity
  attr_accessor :beginTime
  attr_accessor :endTime
  attr_accessor :intervalId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, beginTime = nil, endTime = nil, intervalId = nil)
    @v__this = v__this
    @entity = entity
    @beginTime = beginTime
    @endTime = endTime
    @intervalId = intervalId
  end
end

# {urn:vim25}QueryPerfCounterRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   counterId - SOAP::SOAPInt
class QueryPerfCounterRequestType
  attr_accessor :counterId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, counterId = [])
    @v__this = v__this
    @counterId = counterId
  end
end

# {urn:vim25}QueryPerfCounterByLevelRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   level - SOAP::SOAPInt
class QueryPerfCounterByLevelRequestType
  attr_accessor :level

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, level = nil)
    @v__this = v__this
    @level = level
  end
end

# {urn:vim25}QueryPerfRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   querySpec - Bosh::Director::CloudProviders::VSphere::PerfQuerySpec
class QueryPerfRequestType
  attr_accessor :querySpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, querySpec = [])
    @v__this = v__this
    @querySpec = querySpec
  end
end

# {urn:vim25}QueryPerfCompositeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   querySpec - Bosh::Director::CloudProviders::VSphere::PerfQuerySpec
class QueryPerfCompositeRequestType
  attr_accessor :querySpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, querySpec = nil)
    @v__this = v__this
    @querySpec = querySpec
  end
end

# {urn:vim25}CreatePerfIntervalRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   intervalId - Bosh::Director::CloudProviders::VSphere::PerfInterval
class CreatePerfIntervalRequestType
  attr_accessor :intervalId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, intervalId = nil)
    @v__this = v__this
    @intervalId = intervalId
  end
end

# {urn:vim25}RemovePerfIntervalRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   samplePeriod - SOAP::SOAPInt
class RemovePerfIntervalRequestType
  attr_accessor :samplePeriod

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, samplePeriod = nil)
    @v__this = v__this
    @samplePeriod = samplePeriod
  end
end

# {urn:vim25}UpdatePerfIntervalRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   interval - Bosh::Director::CloudProviders::VSphere::PerfInterval
class UpdatePerfIntervalRequestType
  attr_accessor :interval

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, interval = nil)
    @v__this = v__this
    @interval = interval
  end
end

# {urn:vim25}EstimateDatabaseSizeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dbSizeParam - Bosh::Director::CloudProviders::VSphere::DatabaseSizeParam
class EstimateDatabaseSizeRequestType
  attr_accessor :dbSizeParam

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dbSizeParam = nil)
    @v__this = v__this
    @dbSizeParam = dbSizeParam
  end
end

# {urn:vim25}UpdateConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   config - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
class UpdateConfigRequestType
  attr_accessor :name
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, config = nil)
    @v__this = v__this
    @name = name
    @config = config
  end
end

# {urn:vim25}MoveIntoResourcePoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   list - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveIntoResourcePoolRequestType
  attr_accessor :list

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, list = [])
    @v__this = v__this
    @list = list
  end
end

# {urn:vim25}UpdateChildResourceConfigurationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
class UpdateChildResourceConfigurationRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = [])
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}CreateResourcePoolRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
class CreateResourcePoolRequestType
  attr_accessor :name
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, spec = nil)
    @v__this = v__this
    @name = name
    @spec = spec
  end
end

# {urn:vim25}DestroyChildrenRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyChildrenRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   resSpec - Bosh::Director::CloudProviders::VSphere::ResourceConfigSpec
#   configSpec - Bosh::Director::CloudProviders::VSphere::VAppConfigSpec
#   vmFolder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVAppRequestType
  attr_accessor :name
  attr_accessor :resSpec
  attr_accessor :configSpec
  attr_accessor :vmFolder

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, resSpec = nil, configSpec = nil, vmFolder = nil)
    @v__this = v__this
    @name = name
    @resSpec = resSpec
    @configSpec = configSpec
    @vmFolder = vmFolder
  end
end

# {urn:vim25}CreateChildVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateChildVMRequestType
  attr_accessor :config
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil, host = nil)
    @v__this = v__this
    @config = config
    @host = host
  end
end

# {urn:vim25}RegisterChildVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   path - SOAP::SOAPString
#   name - SOAP::SOAPString
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RegisterChildVMRequestType
  attr_accessor :path
  attr_accessor :name
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, path = nil, name = nil, host = nil)
    @v__this = v__this
    @path = path
    @name = name
    @host = host
  end
end

# {urn:vim25}ImportVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ImportSpec
#   folder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ImportVAppRequestType
  attr_accessor :spec
  attr_accessor :folder
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, folder = nil, host = nil)
    @v__this = v__this
    @spec = spec
    @folder = folder
    @host = host
  end
end

# {urn:vim25}QueryResourceConfigOptionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryResourceConfigOptionRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RefreshRuntimeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshRuntimeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}FindByUuidRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   uuid - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
#   instanceUuid - SOAP::SOAPBoolean
class FindByUuidRequestType
  attr_accessor :datacenter
  attr_accessor :uuid
  attr_accessor :vmSearch
  attr_accessor :instanceUuid

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, uuid = nil, vmSearch = nil, instanceUuid = nil)
    @v__this = v__this
    @datacenter = datacenter
    @uuid = uuid
    @vmSearch = vmSearch
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}FindByDatastorePathRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   path - SOAP::SOAPString
class FindByDatastorePathRequestType
  attr_accessor :datacenter
  attr_accessor :path

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, path = nil)
    @v__this = v__this
    @datacenter = datacenter
    @path = path
  end
end

# {urn:vim25}FindByDnsNameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dnsName - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
class FindByDnsNameRequestType
  attr_accessor :datacenter
  attr_accessor :dnsName
  attr_accessor :vmSearch

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, dnsName = nil, vmSearch = nil)
    @v__this = v__this
    @datacenter = datacenter
    @dnsName = dnsName
    @vmSearch = vmSearch
  end
end

# {urn:vim25}FindByIpRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ip - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
class FindByIpRequestType
  attr_accessor :datacenter
  attr_accessor :ip
  attr_accessor :vmSearch

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, ip = nil, vmSearch = nil)
    @v__this = v__this
    @datacenter = datacenter
    @ip = ip
    @vmSearch = vmSearch
  end
end

# {urn:vim25}FindByInventoryPathRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   inventoryPath - SOAP::SOAPString
class FindByInventoryPathRequestType
  attr_accessor :inventoryPath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, inventoryPath = nil)
    @v__this = v__this
    @inventoryPath = inventoryPath
  end
end

# {urn:vim25}FindChildRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class FindChildRequestType
  attr_accessor :entity
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, name = nil)
    @v__this = v__this
    @entity = entity
    @name = name
  end
end

# {urn:vim25}FindAllByUuidRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   uuid - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
#   instanceUuid - SOAP::SOAPBoolean
class FindAllByUuidRequestType
  attr_accessor :datacenter
  attr_accessor :uuid
  attr_accessor :vmSearch
  attr_accessor :instanceUuid

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, uuid = nil, vmSearch = nil, instanceUuid = nil)
    @v__this = v__this
    @datacenter = datacenter
    @uuid = uuid
    @vmSearch = vmSearch
    @instanceUuid = instanceUuid
  end
end

# {urn:vim25}FindAllByDnsNameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dnsName - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
class FindAllByDnsNameRequestType
  attr_accessor :datacenter
  attr_accessor :dnsName
  attr_accessor :vmSearch

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, dnsName = nil, vmSearch = nil)
    @v__this = v__this
    @datacenter = datacenter
    @dnsName = dnsName
    @vmSearch = vmSearch
  end
end

# {urn:vim25}FindAllByIpRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ip - SOAP::SOAPString
#   vmSearch - SOAP::SOAPBoolean
class FindAllByIpRequestType
  attr_accessor :datacenter
  attr_accessor :ip
  attr_accessor :vmSearch

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datacenter = nil, ip = nil, vmSearch = nil)
    @v__this = v__this
    @datacenter = datacenter
    @ip = ip
    @vmSearch = vmSearch
  end
end

# {urn:vim25}CurrentTimeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CurrentTimeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RetrieveServiceContentRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveServiceContentRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ValidateMigrationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   state - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
#   testType - SOAP::SOAPString
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ValidateMigrationRequestType
  attr_accessor :vm
  attr_accessor :state
  attr_accessor :testType
  attr_accessor :pool
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = [], state = nil, testType = [], pool = nil, host = nil)
    @v__this = v__this
    @vm = vm
    @state = state
    @testType = testType
    @pool = pool
    @host = host
  end
end

# {urn:vim25}QueryVMotionCompatibilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   compatibility - SOAP::SOAPString
class QueryVMotionCompatibilityRequestType
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :compatibility

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, host = [], compatibility = [])
    @v__this = v__this
    @vm = vm
    @host = host
    @compatibility = compatibility
  end
end

# {urn:vim25}RetrieveProductComponentsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveProductComponentsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateServiceMessageRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   message - SOAP::SOAPString
class UpdateServiceMessageRequestType
  attr_accessor :message

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, message = nil)
    @v__this = v__this
    @message = message
  end
end

# {urn:vim25}LoginRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
#   locale - SOAP::SOAPString
class LoginRequestType
  attr_accessor :userName
  attr_accessor :password
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, userName = nil, password = nil, locale = nil)
    @v__this = v__this
    @userName = userName
    @password = password
    @locale = locale
  end
end

# {urn:vim25}LoginBySSPIRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   base64Token - SOAP::SOAPString
#   locale - SOAP::SOAPString
class LoginBySSPIRequestType
  attr_accessor :base64Token
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, base64Token = nil, locale = nil)
    @v__this = v__this
    @base64Token = base64Token
    @locale = locale
  end
end

# {urn:vim25}LogoutRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class LogoutRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AcquireLocalTicketRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userName - SOAP::SOAPString
class AcquireLocalTicketRequestType
  attr_accessor :userName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, userName = nil)
    @v__this = v__this
    @userName = userName
  end
end

# {urn:vim25}TerminateSessionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sessionId - SOAP::SOAPString
class TerminateSessionRequestType
  attr_accessor :sessionId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sessionId = [])
    @v__this = v__this
    @sessionId = sessionId
  end
end

# {urn:vim25}SetLocaleRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   locale - SOAP::SOAPString
class SetLocaleRequestType
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, locale = nil)
    @v__this = v__this
    @locale = locale
  end
end

# {urn:vim25}LoginExtensionBySubjectNameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
#   locale - SOAP::SOAPString
class LoginExtensionBySubjectNameRequestType
  attr_accessor :extensionKey
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil, locale = nil)
    @v__this = v__this
    @extensionKey = extensionKey
    @locale = locale
  end
end

# {urn:vim25}LoginExtensionByCertificateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   extensionKey - SOAP::SOAPString
#   locale - SOAP::SOAPString
class LoginExtensionByCertificateRequestType
  attr_accessor :extensionKey
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, extensionKey = nil, locale = nil)
    @v__this = v__this
    @extensionKey = extensionKey
    @locale = locale
  end
end

# {urn:vim25}ImpersonateUserRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userName - SOAP::SOAPString
#   locale - SOAP::SOAPString
class ImpersonateUserRequestType
  attr_accessor :userName
  attr_accessor :locale

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, userName = nil, locale = nil)
    @v__this = v__this
    @userName = userName
    @locale = locale
  end
end

# {urn:vim25}SessionIsActiveRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sessionID - SOAP::SOAPString
#   userName - SOAP::SOAPString
class SessionIsActiveRequestType
  attr_accessor :sessionID
  attr_accessor :userName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sessionID = nil, userName = nil)
    @v__this = v__this
    @sessionID = sessionID
    @userName = userName
  end
end

# {urn:vim25}AcquireCloneTicketRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AcquireCloneTicketRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CloneSessionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cloneTicket - SOAP::SOAPString
class CloneSessionRequestType
  attr_accessor :cloneTicket

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, cloneTicket = nil)
    @v__this = v__this
    @cloneTicket = cloneTicket
  end
end

# {urn:vim25}ConfigureDatastoreIORMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::StorageIORMConfigSpec
class ConfigureDatastoreIORMRequestType
  attr_accessor :datastore
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil, spec = nil)
    @v__this = v__this
    @datastore = datastore
    @spec = spec
  end
end

# {urn:vim25}QueryIORMConfigOptionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryIORMConfigOptionRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}CancelTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CancelTaskRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateProgressRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   percentDone - SOAP::SOAPInt
class UpdateProgressRequestType
  attr_accessor :percentDone

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, percentDone = nil)
    @v__this = v__this
    @percentDone = percentDone
  end
end

# {urn:vim25}SetTaskStateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   state - Bosh::Director::CloudProviders::VSphere::TaskInfoState
#   result - (any)
#   fault - Bosh::Director::CloudProviders::VSphere::LocalizedMethodFault
class SetTaskStateRequestType
  attr_accessor :state
  attr_accessor :result
  attr_accessor :fault

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, state = nil, result = nil, fault = nil)
    @v__this = v__this
    @state = state
    @result = result
    @fault = fault
  end
end

# {urn:vim25}SetTaskDescriptionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   description - Bosh::Director::CloudProviders::VSphere::LocalizableMessage
class SetTaskDescriptionRequestType
  attr_accessor :description

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, description = nil)
    @v__this = v__this
    @description = description
  end
end

# {urn:vim25}ReadNextTasksRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxCount - SOAP::SOAPInt
class ReadNextTasksRequestType
  attr_accessor :maxCount

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, maxCount = nil)
    @v__this = v__this
    @maxCount = maxCount
  end
end

# {urn:vim25}ReadPreviousTasksRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxCount - SOAP::SOAPInt
class ReadPreviousTasksRequestType
  attr_accessor :maxCount

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, maxCount = nil)
    @v__this = v__this
    @maxCount = maxCount
  end
end

# {urn:vim25}CreateCollectorForTasksRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   filter - Bosh::Director::CloudProviders::VSphere::TaskFilterSpec
class CreateCollectorForTasksRequestType
  attr_accessor :filter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, filter = nil)
    @v__this = v__this
    @filter = filter
  end
end

# {urn:vim25}CreateTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   taskTypeId - SOAP::SOAPString
#   initiatedBy - SOAP::SOAPString
#   cancelable - SOAP::SOAPBoolean
#   parentTaskKey - SOAP::SOAPString
class CreateTaskRequestType
  attr_accessor :obj
  attr_accessor :taskTypeId
  attr_accessor :initiatedBy
  attr_accessor :cancelable
  attr_accessor :parentTaskKey

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = nil, taskTypeId = nil, initiatedBy = nil, cancelable = nil, parentTaskKey = nil)
    @v__this = v__this
    @obj = obj
    @taskTypeId = taskTypeId
    @initiatedBy = initiatedBy
    @cancelable = cancelable
    @parentTaskKey = parentTaskKey
  end
end

# {urn:vim25}RetrieveUserGroupsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   domain - SOAP::SOAPString
#   searchStr - SOAP::SOAPString
#   belongsToGroup - SOAP::SOAPString
#   belongsToUser - SOAP::SOAPString
#   exactMatch - SOAP::SOAPBoolean
#   findUsers - SOAP::SOAPBoolean
#   findGroups - SOAP::SOAPBoolean
class RetrieveUserGroupsRequestType
  attr_accessor :domain
  attr_accessor :searchStr
  attr_accessor :belongsToGroup
  attr_accessor :belongsToUser
  attr_accessor :exactMatch
  attr_accessor :findUsers
  attr_accessor :findGroups

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, domain = nil, searchStr = nil, belongsToGroup = nil, belongsToUser = nil, exactMatch = nil, findUsers = nil, findGroups = nil)
    @v__this = v__this
    @domain = domain
    @searchStr = searchStr
    @belongsToGroup = belongsToGroup
    @belongsToUser = belongsToUser
    @exactMatch = exactMatch
    @findUsers = findUsers
    @findGroups = findGroups
  end
end

# {urn:vim25}UpdateVAppConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VAppConfigSpec
class UpdateVAppConfigRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}UpdateLinkedChildrenRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   addChangeSet - Bosh::Director::CloudProviders::VSphere::VirtualAppLinkInfo
#   removeSet - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpdateLinkedChildrenRequestType
  attr_accessor :addChangeSet
  attr_accessor :removeSet

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, addChangeSet = [], removeSet = [])
    @v__this = v__this
    @addChangeSet = addChangeSet
    @removeSet = removeSet
  end
end

# {urn:vim25}CloneVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   target - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VAppCloneSpec
class CloneVAppRequestType
  attr_accessor :name
  attr_accessor :target
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, target = nil, spec = nil)
    @v__this = v__this
    @name = name
    @target = target
    @spec = spec
  end
end

# {urn:vim25}ExportVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExportVAppRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}PowerOnVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOnVAppRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}PowerOffVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class PowerOffVAppRequestType
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, force = nil)
    @v__this = v__this
    @force = force
  end
end

# {urn:vim25}SuspendVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SuspendVAppRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}unregisterVAppRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnregisterVAppRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualDiskSpec
class CreateVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, spec = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @spec = spec
  end
end

# {urn:vim25}DeleteVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DeleteVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}MoveVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sourceName - SOAP::SOAPString
#   sourceDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destName - SOAP::SOAPString
#   destDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class MoveVirtualDiskRequestType
  attr_accessor :sourceName
  attr_accessor :sourceDatacenter
  attr_accessor :destName
  attr_accessor :destDatacenter
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sourceName = nil, sourceDatacenter = nil, destName = nil, destDatacenter = nil, force = nil)
    @v__this = v__this
    @sourceName = sourceName
    @sourceDatacenter = sourceDatacenter
    @destName = destName
    @destDatacenter = destDatacenter
    @force = force
  end
end

# {urn:vim25}CopyVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   sourceName - SOAP::SOAPString
#   sourceDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destName - SOAP::SOAPString
#   destDatacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   destSpec - Bosh::Director::CloudProviders::VSphere::VirtualDiskSpec
#   force - SOAP::SOAPBoolean
class CopyVirtualDiskRequestType
  attr_accessor :sourceName
  attr_accessor :sourceDatacenter
  attr_accessor :destName
  attr_accessor :destDatacenter
  attr_accessor :destSpec
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, sourceName = nil, sourceDatacenter = nil, destName = nil, destDatacenter = nil, destSpec = nil, force = nil)
    @v__this = v__this
    @sourceName = sourceName
    @sourceDatacenter = sourceDatacenter
    @destName = destName
    @destDatacenter = destDatacenter
    @destSpec = destSpec
    @force = force
  end
end

# {urn:vim25}ExtendVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   newCapacityKb - SOAP::SOAPLong
#   eagerZero - SOAP::SOAPBoolean
class ExtendVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :newCapacityKb
  attr_accessor :eagerZero

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, newCapacityKb = nil, eagerZero = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @newCapacityKb = newCapacityKb
    @eagerZero = eagerZero
  end
end

# {urn:vim25}QueryVirtualDiskFragmentationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVirtualDiskFragmentationRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}DefragmentVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DefragmentVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}ShrinkVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   copy - SOAP::SOAPBoolean
class ShrinkVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :copy

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, copy = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @copy = copy
  end
end

# {urn:vim25}InflateVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InflateVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}EagerZeroVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EagerZeroVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}ZeroFillVirtualDiskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ZeroFillVirtualDiskRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}SetVirtualDiskUuidRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   uuid - SOAP::SOAPString
class SetVirtualDiskUuidRequestType
  attr_accessor :name
  attr_accessor :datacenter
  attr_accessor :uuid

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil, uuid = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
    @uuid = uuid
  end
end

# {urn:vim25}QueryVirtualDiskUuidRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVirtualDiskUuidRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}QueryVirtualDiskGeometryRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   datacenter - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVirtualDiskGeometryRequestType
  attr_accessor :name
  attr_accessor :datacenter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, datacenter = nil)
    @v__this = v__this
    @name = name
    @datacenter = datacenter
  end
end

# {urn:vim25}RefreshStorageInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshStorageInfoRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateSnapshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
#   memory - SOAP::SOAPBoolean
#   quiesce - SOAP::SOAPBoolean
class CreateSnapshotRequestType
  attr_accessor :name
  attr_accessor :description
  attr_accessor :memory
  attr_accessor :quiesce

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, description = nil, memory = nil, quiesce = nil)
    @v__this = v__this
    @name = name
    @description = description
    @memory = memory
    @quiesce = quiesce
  end
end

# {urn:vim25}RevertToCurrentSnapshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   suppressPowerOn - SOAP::SOAPBoolean
class RevertToCurrentSnapshotRequestType
  attr_accessor :host
  attr_accessor :suppressPowerOn

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, suppressPowerOn = nil)
    @v__this = v__this
    @host = host
    @suppressPowerOn = suppressPowerOn
  end
end

# {urn:vim25}RemoveAllSnapshotsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveAllSnapshotsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigSpec
class ReconfigVMRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}UpgradeVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   version - SOAP::SOAPString
class UpgradeVMRequestType
  attr_accessor :version

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, version = nil)
    @v__this = v__this
    @version = version
  end
end

# {urn:vim25}ExtractOvfEnvironmentRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExtractOvfEnvironmentRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}PowerOnVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOnVMRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}PowerOffVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOffVMRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}SuspendVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SuspendVMRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResetVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetVMRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ShutdownGuestRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ShutdownGuestRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RebootGuestRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RebootGuestRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}StandbyGuestRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StandbyGuestRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AnswerVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   questionId - SOAP::SOAPString
#   answerChoice - SOAP::SOAPString
class AnswerVMRequestType
  attr_accessor :questionId
  attr_accessor :answerChoice

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, questionId = nil, answerChoice = nil)
    @v__this = v__this
    @questionId = questionId
    @answerChoice = answerChoice
  end
end

# {urn:vim25}CustomizeVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::CustomizationSpec
class CustomizeVMRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}CheckCustomizationSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::CustomizationSpec
class CheckCustomizationSpecRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}MigrateVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   priority - Bosh::Director::CloudProviders::VSphere::VirtualMachineMovePriority
#   state - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
class MigrateVMRequestType
  attr_accessor :pool
  attr_accessor :host
  attr_accessor :priority
  attr_accessor :state

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pool = nil, host = nil, priority = nil, state = nil)
    @v__this = v__this
    @pool = pool
    @host = host
    @priority = priority
    @state = state
  end
end

# {urn:vim25}RelocateVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualMachineRelocateSpec
#   priority - Bosh::Director::CloudProviders::VSphere::VirtualMachineMovePriority
class RelocateVMRequestType
  attr_accessor :spec
  attr_accessor :priority

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil, priority = nil)
    @v__this = v__this
    @spec = spec
    @priority = priority
  end
end

# {urn:vim25}CloneVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   folder - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualMachineCloneSpec
class CloneVMRequestType
  attr_accessor :folder
  attr_accessor :name
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, folder = nil, name = nil, spec = nil)
    @v__this = v__this
    @folder = folder
    @name = name
    @spec = spec
  end
end

# {urn:vim25}ExportVmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExportVmRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}MarkAsTemplateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MarkAsTemplateRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}MarkAsVirtualMachineRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MarkAsVirtualMachineRequestType
  attr_accessor :pool
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pool = nil, host = nil)
    @v__this = v__this
    @pool = pool
    @host = host
  end
end

# {urn:vim25}UnregisterVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnregisterVMRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResetGuestInformationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetGuestInformationRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}MountToolsInstallerRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MountToolsInstallerRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UnmountToolsInstallerRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnmountToolsInstallerRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpgradeToolsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   installerOptions - SOAP::SOAPString
class UpgradeToolsRequestType
  attr_accessor :installerOptions

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, installerOptions = nil)
    @v__this = v__this
    @installerOptions = installerOptions
  end
end

# {urn:vim25}AcquireMksTicketRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AcquireMksTicketRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AcquireTicketRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ticketType - SOAP::SOAPString
class AcquireTicketRequestType
  attr_accessor :ticketType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ticketType = nil)
    @v__this = v__this
    @ticketType = ticketType
  end
end

# {urn:vim25}SetScreenResolutionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   width - SOAP::SOAPInt
#   height - SOAP::SOAPInt
class SetScreenResolutionRequestType
  attr_accessor :width
  attr_accessor :height

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, width = nil, height = nil)
    @v__this = v__this
    @width = width
    @height = height
  end
end

# {urn:vim25}DefragmentAllDisksRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DefragmentAllDisksRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateSecondaryVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateSecondaryVMRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}TurnOffFaultToleranceForVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TurnOffFaultToleranceForVMRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}MakePrimaryVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MakePrimaryVMRequestType
  attr_accessor :vm

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil)
    @v__this = v__this
    @vm = vm
  end
end

# {urn:vim25}TerminateFaultTolerantVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TerminateFaultTolerantVMRequestType
  attr_accessor :vm

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil)
    @v__this = v__this
    @vm = vm
  end
end

# {urn:vim25}DisableSecondaryVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DisableSecondaryVMRequestType
  attr_accessor :vm

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil)
    @v__this = v__this
    @vm = vm
  end
end

# {urn:vim25}EnableSecondaryVMRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EnableSecondaryVMRequestType
  attr_accessor :vm
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, host = nil)
    @v__this = v__this
    @vm = vm
    @host = host
  end
end

# {urn:vim25}SetDisplayTopologyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   displays - Bosh::Director::CloudProviders::VSphere::VirtualMachineDisplayTopology
class SetDisplayTopologyRequestType
  attr_accessor :displays

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, displays = [])
    @v__this = v__this
    @displays = displays
  end
end

# {urn:vim25}StartRecordingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
class StartRecordingRequestType
  attr_accessor :name
  attr_accessor :description

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, description = nil)
    @v__this = v__this
    @name = name
    @description = description
  end
end

# {urn:vim25}StopRecordingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StopRecordingRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}StartReplayingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   replaySnapshot - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StartReplayingRequestType
  attr_accessor :replaySnapshot

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, replaySnapshot = nil)
    @v__this = v__this
    @replaySnapshot = replaySnapshot
  end
end

# {urn:vim25}StopReplayingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StopReplayingRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}PromoteDisksRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   unlink - SOAP::SOAPBoolean
#   disks - Bosh::Director::CloudProviders::VSphere::VirtualDisk
class PromoteDisksRequestType
  attr_accessor :unlink
  attr_accessor :disks

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, unlink = nil, disks = [])
    @v__this = v__this
    @unlink = unlink
    @disks = disks
  end
end

# {urn:vim25}CreateScreenshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateScreenshotRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryChangedDiskAreasRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   snapshot - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   deviceKey - SOAP::SOAPInt
#   startOffset - SOAP::SOAPLong
#   changeId - SOAP::SOAPString
class QueryChangedDiskAreasRequestType
  attr_accessor :snapshot
  attr_accessor :deviceKey
  attr_accessor :startOffset
  attr_accessor :changeId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, snapshot = nil, deviceKey = nil, startOffset = nil, changeId = nil)
    @v__this = v__this
    @snapshot = snapshot
    @deviceKey = deviceKey
    @startOffset = startOffset
    @changeId = changeId
  end
end

# {urn:vim25}QueryUnownedFilesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryUnownedFilesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}reloadVirtualMachineFromPathRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   configurationPath - SOAP::SOAPString
class ReloadVirtualMachineFromPathRequestType
  attr_accessor :configurationPath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, configurationPath = nil)
    @v__this = v__this
    @configurationPath = configurationPath
  end
end

# {urn:vim25}QueryFaultToleranceCompatibilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryFaultToleranceCompatibilityRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RemoveAlarmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveAlarmRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigureAlarmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::AlarmSpec
class ReconfigureAlarmRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}CreateAlarmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::AlarmSpec
class CreateAlarmRequestType
  attr_accessor :entity
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, spec = nil)
    @v__this = v__this
    @entity = entity
    @spec = spec
  end
end

# {urn:vim25}GetAlarmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GetAlarmRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}AreAlarmActionsEnabledRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AreAlarmActionsEnabledRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}EnableAlarmActionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   enabled - SOAP::SOAPBoolean
class EnableAlarmActionsRequestType
  attr_accessor :entity
  attr_accessor :enabled

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, enabled = nil)
    @v__this = v__this
    @entity = entity
    @enabled = enabled
  end
end

# {urn:vim25}GetAlarmStateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GetAlarmStateRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}AcknowledgeAlarmRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   alarm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AcknowledgeAlarmRequestType
  attr_accessor :alarm
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, alarm = nil, entity = nil)
    @v__this = v__this
    @alarm = alarm
    @entity = entity
  end
end

# {urn:vim25}ReconfigureDVPortgroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::DVPortgroupConfigSpec
class ReconfigureDVPortgroupRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}QueryAvailableDvsSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryAvailableDvsSpecRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryCompatibleHostForNewDvsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   container - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   recursive - SOAP::SOAPBoolean
#   switchProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class QueryCompatibleHostForNewDvsRequestType
  attr_accessor :container
  attr_accessor :recursive
  attr_accessor :switchProductSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, container = nil, recursive = nil, switchProductSpec = nil)
    @v__this = v__this
    @container = container
    @recursive = recursive
    @switchProductSpec = switchProductSpec
  end
end

# {urn:vim25}QueryCompatibleHostForExistingDvsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   container - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   recursive - SOAP::SOAPBoolean
#   dvs - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryCompatibleHostForExistingDvsRequestType
  attr_accessor :container
  attr_accessor :recursive
  attr_accessor :dvs

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, container = nil, recursive = nil, dvs = nil)
    @v__this = v__this
    @container = container
    @recursive = recursive
    @dvs = dvs
  end
end

# {urn:vim25}QueryDvsCompatibleHostSpecRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   switchProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class QueryDvsCompatibleHostSpecRequestType
  attr_accessor :switchProductSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, switchProductSpec = nil)
    @v__this = v__this
    @switchProductSpec = switchProductSpec
  end
end

# {urn:vim25}QueryDvsFeatureCapabilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   switchProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchProductSpec
class QueryDvsFeatureCapabilityRequestType
  attr_accessor :switchProductSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, switchProductSpec = nil)
    @v__this = v__this
    @switchProductSpec = switchProductSpec
  end
end

# {urn:vim25}QueryDvsByUuidRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   uuid - SOAP::SOAPString
class QueryDvsByUuidRequestType
  attr_accessor :uuid

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, uuid = nil)
    @v__this = v__this
    @uuid = uuid
  end
end

# {urn:vim25}QueryDvsConfigTargetRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dvs - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryDvsConfigTargetRequestType
  attr_accessor :host
  attr_accessor :dvs

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, dvs = nil)
    @v__this = v__this
    @host = host
    @dvs = dvs
  end
end

# {urn:vim25}QueryDvsCheckCompatibilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hostContainer - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchManagerHostContainer
#   dvsProductSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchManagerDvsProductSpec
#   hostFilterSpec - Bosh::Director::CloudProviders::VSphere::DistributedVirtualSwitchManagerHostDvsFilterSpec
class QueryDvsCheckCompatibilityRequestType
  attr_accessor :hostContainer
  attr_accessor :dvsProductSpec
  attr_accessor :hostFilterSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, hostContainer = nil, dvsProductSpec = nil, hostFilterSpec = [])
    @v__this = v__this
    @hostContainer = hostContainer
    @dvsProductSpec = dvsProductSpec
    @hostFilterSpec = hostFilterSpec
  end
end

# {urn:vim25}ReadNextEventsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxCount - SOAP::SOAPInt
class ReadNextEventsRequestType
  attr_accessor :maxCount

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, maxCount = nil)
    @v__this = v__this
    @maxCount = maxCount
  end
end

# {urn:vim25}ReadPreviousEventsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   maxCount - SOAP::SOAPInt
class ReadPreviousEventsRequestType
  attr_accessor :maxCount

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, maxCount = nil)
    @v__this = v__this
    @maxCount = maxCount
  end
end

# {urn:vim25}RetrieveArgumentDescriptionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   eventTypeId - SOAP::SOAPString
class RetrieveArgumentDescriptionRequestType
  attr_accessor :eventTypeId

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, eventTypeId = nil)
    @v__this = v__this
    @eventTypeId = eventTypeId
  end
end

# {urn:vim25}CreateCollectorForEventsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   filter - Bosh::Director::CloudProviders::VSphere::EventFilterSpec
class CreateCollectorForEventsRequestType
  attr_accessor :filter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, filter = nil)
    @v__this = v__this
    @filter = filter
  end
end

# {urn:vim25}LogUserEventRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   msg - SOAP::SOAPString
class LogUserEventRequestType
  attr_accessor :entity
  attr_accessor :msg

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, msg = nil)
    @v__this = v__this
    @entity = entity
    @msg = msg
  end
end

# {urn:vim25}QueryEventsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   filter - Bosh::Director::CloudProviders::VSphere::EventFilterSpec
class QueryEventsRequestType
  attr_accessor :filter

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, filter = nil)
    @v__this = v__this
    @filter = filter
  end
end

# {urn:vim25}PostEventRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   eventToPost - Bosh::Director::CloudProviders::VSphere::Event
#   taskInfo - Bosh::Director::CloudProviders::VSphere::TaskInfo
class PostEventRequestType
  attr_accessor :eventToPost
  attr_accessor :taskInfo

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, eventToPost = nil, taskInfo = nil)
    @v__this = v__this
    @eventToPost = eventToPost
    @taskInfo = taskInfo
  end
end

# {urn:vim25}JoinDomainRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   domainName - SOAP::SOAPString
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
class JoinDomainRequestType
  attr_accessor :domainName
  attr_accessor :userName
  attr_accessor :password

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, domainName = nil, userName = nil, password = nil)
    @v__this = v__this
    @domainName = domainName
    @userName = userName
    @password = password
  end
end

# {urn:vim25}LeaveCurrentDomainRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class LeaveCurrentDomainRequestType
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, force = nil)
    @v__this = v__this
    @force = force
  end
end

# {urn:vim25}ReconfigureAutostartRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostAutoStartManagerConfig
class ReconfigureAutostartRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}AutoStartPowerOnRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AutoStartPowerOnRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AutoStartPowerOffRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AutoStartPowerOffRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryBootDevicesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryBootDevicesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateBootDeviceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPString
class UpdateBootDeviceRequestType
  attr_accessor :key

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil)
    @v__this = v__this
    @key = key
  end
end

# {urn:vim25}EnableHyperThreadingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EnableHyperThreadingRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}DisableHyperThreadingRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DisableHyperThreadingRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}SearchDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastorePath - SOAP::SOAPString
#   searchSpec - Bosh::Director::CloudProviders::VSphere::HostDatastoreBrowserSearchSpec
class SearchDatastoreRequestType
  attr_accessor :datastorePath
  attr_accessor :searchSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastorePath = nil, searchSpec = nil)
    @v__this = v__this
    @datastorePath = datastorePath
    @searchSpec = searchSpec
  end
end

# {urn:vim25}SearchDatastoreSubFoldersRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastorePath - SOAP::SOAPString
#   searchSpec - Bosh::Director::CloudProviders::VSphere::HostDatastoreBrowserSearchSpec
class SearchDatastoreSubFoldersRequestType
  attr_accessor :datastorePath
  attr_accessor :searchSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastorePath = nil, searchSpec = nil)
    @v__this = v__this
    @datastorePath = datastorePath
    @searchSpec = searchSpec
  end
end

# {urn:vim25}DeleteFileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastorePath - SOAP::SOAPString
class DeleteFileRequestType
  attr_accessor :datastorePath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastorePath = nil)
    @v__this = v__this
    @datastorePath = datastorePath
  end
end

# {urn:vim25}UpdateLocalSwapDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpdateLocalSwapDatastoreRequestType
  attr_accessor :datastore

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil)
    @v__this = v__this
    @datastore = datastore
  end
end

# {urn:vim25}QueryAvailableDisksForVmfsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryAvailableDisksForVmfsRequestType
  attr_accessor :datastore

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil)
    @v__this = v__this
    @datastore = datastore
  end
end

# {urn:vim25}QueryVmfsDatastoreCreateOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   devicePath - SOAP::SOAPString
class QueryVmfsDatastoreCreateOptionsRequestType
  attr_accessor :devicePath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, devicePath = nil)
    @v__this = v__this
    @devicePath = devicePath
  end
end

# {urn:vim25}CreateVmfsDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VmfsDatastoreCreateSpec
class CreateVmfsDatastoreRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}QueryVmfsDatastoreExtendOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   devicePath - SOAP::SOAPString
#   suppressExpandCandidates - SOAP::SOAPBoolean
class QueryVmfsDatastoreExtendOptionsRequestType
  attr_accessor :datastore
  attr_accessor :devicePath
  attr_accessor :suppressExpandCandidates

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil, devicePath = nil, suppressExpandCandidates = nil)
    @v__this = v__this
    @datastore = datastore
    @devicePath = devicePath
    @suppressExpandCandidates = suppressExpandCandidates
  end
end

# {urn:vim25}QueryVmfsDatastoreExpandOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVmfsDatastoreExpandOptionsRequestType
  attr_accessor :datastore

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil)
    @v__this = v__this
    @datastore = datastore
  end
end

# {urn:vim25}ExtendVmfsDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VmfsDatastoreExtendSpec
class ExtendVmfsDatastoreRequestType
  attr_accessor :datastore
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil, spec = nil)
    @v__this = v__this
    @datastore = datastore
    @spec = spec
  end
end

# {urn:vim25}ExpandVmfsDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VmfsDatastoreExpandSpec
class ExpandVmfsDatastoreRequestType
  attr_accessor :datastore
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil, spec = nil)
    @v__this = v__this
    @datastore = datastore
    @spec = spec
  end
end

# {urn:vim25}CreateNasDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostNasVolumeSpec
class CreateNasDatastoreRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}CreateLocalDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   path - SOAP::SOAPString
class CreateLocalDatastoreRequestType
  attr_accessor :name
  attr_accessor :path

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, path = nil)
    @v__this = v__this
    @name = name
    @path = path
  end
end

# {urn:vim25}RemoveDatastoreRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   datastore - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveDatastoreRequestType
  attr_accessor :datastore

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, datastore = nil)
    @v__this = v__this
    @datastore = datastore
  end
end

# {urn:vim25}ConfigureDatastorePrincipalRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userName - SOAP::SOAPString
#   password - SOAP::SOAPString
class ConfigureDatastorePrincipalRequestType
  attr_accessor :userName
  attr_accessor :password

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, userName = nil, password = nil)
    @v__this = v__this
    @userName = userName
    @password = password
  end
end

# {urn:vim25}QueryUnresolvedVmfsVolumesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryUnresolvedVmfsVolumesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResignatureUnresolvedVmfsVolumeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resolutionSpec - Bosh::Director::CloudProviders::VSphere::HostUnresolvedVmfsResignatureSpec
class ResignatureUnresolvedVmfsVolumeRequestType
  attr_accessor :resolutionSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, resolutionSpec = nil)
    @v__this = v__this
    @resolutionSpec = resolutionSpec
  end
end

# {urn:vim25}UpdateDateTimeConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostDateTimeConfig
class UpdateDateTimeConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}QueryAvailableTimeZonesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryAvailableTimeZonesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryDateTimeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryDateTimeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateDateTimeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   dateTime - SOAP::SOAPDateTime
class UpdateDateTimeRequestType
  attr_accessor :dateTime

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, dateTime = nil)
    @v__this = v__this
    @dateTime = dateTime
  end
end

# {urn:vim25}RefreshDateTimeSystemRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshDateTimeSystemRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryAvailablePartitionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryAvailablePartitionRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}SelectActivePartitionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   partition - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class SelectActivePartitionRequestType
  attr_accessor :partition

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, partition = nil)
    @v__this = v__this
    @partition = partition
  end
end

# {urn:vim25}QueryPartitionCreateOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   storageType - SOAP::SOAPString
#   diagnosticType - SOAP::SOAPString
class QueryPartitionCreateOptionsRequestType
  attr_accessor :storageType
  attr_accessor :diagnosticType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, storageType = nil, diagnosticType = nil)
    @v__this = v__this
    @storageType = storageType
    @diagnosticType = diagnosticType
  end
end

# {urn:vim25}QueryPartitionCreateDescRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   diskUuid - SOAP::SOAPString
#   diagnosticType - SOAP::SOAPString
class QueryPartitionCreateDescRequestType
  attr_accessor :diskUuid
  attr_accessor :diagnosticType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, diskUuid = nil, diagnosticType = nil)
    @v__this = v__this
    @diskUuid = diskUuid
    @diagnosticType = diagnosticType
  end
end

# {urn:vim25}CreateDiagnosticPartitionRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostDiagnosticPartitionCreateSpec
class CreateDiagnosticPartitionRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}UpdateDefaultPolicyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   defaultPolicy - Bosh::Director::CloudProviders::VSphere::HostFirewallDefaultPolicy
class UpdateDefaultPolicyRequestType
  attr_accessor :defaultPolicy

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, defaultPolicy = nil)
    @v__this = v__this
    @defaultPolicy = defaultPolicy
  end
end

# {urn:vim25}EnableRulesetRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class EnableRulesetRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}DisableRulesetRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class DisableRulesetRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}RefreshFirewallRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshFirewallRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResetFirmwareToFactoryDefaultsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetFirmwareToFactoryDefaultsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}BackupFirmwareConfigurationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class BackupFirmwareConfigurationRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryFirmwareConfigUploadURLRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryFirmwareConfigUploadURLRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RestoreFirmwareConfigurationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   force - SOAP::SOAPBoolean
class RestoreFirmwareConfigurationRequestType
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, force = nil)
    @v__this = v__this
    @force = force
  end
end

# {urn:vim25}RefreshHealthStatusSystemRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshHealthStatusSystemRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResetSystemHealthInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetSystemHealthInfoRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryModulesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryModulesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateModuleOptionStringRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   options - SOAP::SOAPString
class UpdateModuleOptionStringRequestType
  attr_accessor :name
  attr_accessor :options

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, options = nil)
    @v__this = v__this
    @name = name
    @options = options
  end
end

# {urn:vim25}QueryConfiguredModuleOptionStringRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class QueryConfiguredModuleOptionStringRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}CreateUserRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   user - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
class CreateUserRequestType
  attr_accessor :user

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, user = nil)
    @v__this = v__this
    @user = user
  end
end

# {urn:vim25}UpdateUserRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   user - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
class UpdateUserRequestType
  attr_accessor :user

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, user = nil)
    @v__this = v__this
    @user = user
  end
end

# {urn:vim25}CreateGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   group - Bosh::Director::CloudProviders::VSphere::HostAccountSpec
class CreateGroupRequestType
  attr_accessor :group

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, group = nil)
    @v__this = v__this
    @group = group
  end
end

# {urn:vim25}RemoveUserRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   userName - SOAP::SOAPString
class RemoveUserRequestType
  attr_accessor :userName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, userName = nil)
    @v__this = v__this
    @userName = userName
  end
end

# {urn:vim25}RemoveGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   groupName - SOAP::SOAPString
class RemoveGroupRequestType
  attr_accessor :groupName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, groupName = nil)
    @v__this = v__this
    @groupName = groupName
  end
end

# {urn:vim25}AssignUserToGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   user - SOAP::SOAPString
#   group - SOAP::SOAPString
class AssignUserToGroupRequestType
  attr_accessor :user
  attr_accessor :group

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, user = nil, group = nil)
    @v__this = v__this
    @user = user
    @group = group
  end
end

# {urn:vim25}UnassignUserFromGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   user - SOAP::SOAPString
#   group - SOAP::SOAPString
class UnassignUserFromGroupRequestType
  attr_accessor :user
  attr_accessor :group

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, user = nil, group = nil)
    @v__this = v__this
    @user = user
    @group = group
  end
end

# {urn:vim25}ReconfigureServiceConsoleReservationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   cfgBytes - SOAP::SOAPLong
class ReconfigureServiceConsoleReservationRequestType
  attr_accessor :cfgBytes

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, cfgBytes = nil)
    @v__this = v__this
    @cfgBytes = cfgBytes
  end
end

# {urn:vim25}ReconfigureVirtualMachineReservationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualMachineMemoryReservationSpec
class ReconfigureVirtualMachineReservationRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}UpdateNetworkConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostNetworkConfig
#   changeMode - SOAP::SOAPString
class UpdateNetworkConfigRequestType
  attr_accessor :config
  attr_accessor :changeMode

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil, changeMode = nil)
    @v__this = v__this
    @config = config
    @changeMode = changeMode
  end
end

# {urn:vim25}UpdateDnsConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostDnsConfig
class UpdateDnsConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}UpdateIpRouteConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
class UpdateIpRouteConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}UpdateConsoleIpRouteConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostIpRouteConfig
class UpdateConsoleIpRouteConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}UpdateIpRouteTableConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostIpRouteTableConfig
class UpdateIpRouteTableConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}AddVirtualSwitchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vswitchName - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchSpec
class AddVirtualSwitchRequestType
  attr_accessor :vswitchName
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vswitchName = nil, spec = nil)
    @v__this = v__this
    @vswitchName = vswitchName
    @spec = spec
  end
end

# {urn:vim25}RemoveVirtualSwitchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vswitchName - SOAP::SOAPString
class RemoveVirtualSwitchRequestType
  attr_accessor :vswitchName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vswitchName = nil)
    @v__this = v__this
    @vswitchName = vswitchName
  end
end

# {urn:vim25}UpdateVirtualSwitchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vswitchName - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostVirtualSwitchSpec
class UpdateVirtualSwitchRequestType
  attr_accessor :vswitchName
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vswitchName = nil, spec = nil)
    @v__this = v__this
    @vswitchName = vswitchName
    @spec = spec
  end
end

# {urn:vim25}AddPortGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portgrp - Bosh::Director::CloudProviders::VSphere::HostPortGroupSpec
class AddPortGroupRequestType
  attr_accessor :portgrp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, portgrp = nil)
    @v__this = v__this
    @portgrp = portgrp
  end
end

# {urn:vim25}RemovePortGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pgName - SOAP::SOAPString
class RemovePortGroupRequestType
  attr_accessor :pgName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pgName = nil)
    @v__this = v__this
    @pgName = pgName
  end
end

# {urn:vim25}UpdatePortGroupRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pgName - SOAP::SOAPString
#   portgrp - Bosh::Director::CloudProviders::VSphere::HostPortGroupSpec
class UpdatePortGroupRequestType
  attr_accessor :pgName
  attr_accessor :portgrp

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pgName = nil, portgrp = nil)
    @v__this = v__this
    @pgName = pgName
    @portgrp = portgrp
  end
end

# {urn:vim25}UpdatePhysicalNicLinkSpeedRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
#   linkSpeed - Bosh::Director::CloudProviders::VSphere::PhysicalNicLinkInfo
class UpdatePhysicalNicLinkSpeedRequestType
  attr_accessor :device
  attr_accessor :linkSpeed

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil, linkSpeed = nil)
    @v__this = v__this
    @device = device
    @linkSpeed = linkSpeed
  end
end

# {urn:vim25}QueryNetworkHintRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class QueryNetworkHintRequestType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = [])
    @v__this = v__this
    @device = device
  end
end

# {urn:vim25}AddVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portgroup - SOAP::SOAPString
#   nic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
class AddVirtualNicRequestType
  attr_accessor :portgroup
  attr_accessor :nic

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, portgroup = nil, nic = nil)
    @v__this = v__this
    @portgroup = portgroup
    @nic = nic
  end
end

# {urn:vim25}RemoveVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class RemoveVirtualNicRequestType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil)
    @v__this = v__this
    @device = device
  end
end

# {urn:vim25}UpdateVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
#   nic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
class UpdateVirtualNicRequestType
  attr_accessor :device
  attr_accessor :nic

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil, nic = nil)
    @v__this = v__this
    @device = device
    @nic = nic
  end
end

# {urn:vim25}AddServiceConsoleVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   portgroup - SOAP::SOAPString
#   nic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
class AddServiceConsoleVirtualNicRequestType
  attr_accessor :portgroup
  attr_accessor :nic

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, portgroup = nil, nic = nil)
    @v__this = v__this
    @portgroup = portgroup
    @nic = nic
  end
end

# {urn:vim25}RemoveServiceConsoleVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class RemoveServiceConsoleVirtualNicRequestType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil)
    @v__this = v__this
    @device = device
  end
end

# {urn:vim25}UpdateServiceConsoleVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
#   nic - Bosh::Director::CloudProviders::VSphere::HostVirtualNicSpec
class UpdateServiceConsoleVirtualNicRequestType
  attr_accessor :device
  attr_accessor :nic

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil, nic = nil)
    @v__this = v__this
    @device = device
    @nic = nic
  end
end

# {urn:vim25}RestartServiceConsoleVirtualNicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class RestartServiceConsoleVirtualNicRequestType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil)
    @v__this = v__this
    @device = device
  end
end

# {urn:vim25}RefreshNetworkSystemRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshNetworkSystemRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CheckHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   metaUrls - SOAP::SOAPString
#   bundleUrls - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class CheckHostPatchRequestType
  attr_accessor :metaUrls
  attr_accessor :bundleUrls
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, metaUrls = [], bundleUrls = [], spec = nil)
    @v__this = v__this
    @metaUrls = metaUrls
    @bundleUrls = bundleUrls
    @spec = spec
  end
end

# {urn:vim25}ScanHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   repository - Bosh::Director::CloudProviders::VSphere::HostPatchManagerLocator
#   updateID - SOAP::SOAPString
class ScanHostPatchRequestType
  attr_accessor :repository
  attr_accessor :updateID

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, repository = nil, updateID = [])
    @v__this = v__this
    @repository = repository
    @updateID = updateID
  end
end

# {urn:vim25}ScanHostPatchV2RequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   metaUrls - SOAP::SOAPString
#   bundleUrls - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class ScanHostPatchV2RequestType
  attr_accessor :metaUrls
  attr_accessor :bundleUrls
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, metaUrls = [], bundleUrls = [], spec = nil)
    @v__this = v__this
    @metaUrls = metaUrls
    @bundleUrls = bundleUrls
    @spec = spec
  end
end

# {urn:vim25}StageHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   metaUrls - SOAP::SOAPString
#   bundleUrls - SOAP::SOAPString
#   vibUrls - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class StageHostPatchRequestType
  attr_accessor :metaUrls
  attr_accessor :bundleUrls
  attr_accessor :vibUrls
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, metaUrls = [], bundleUrls = [], vibUrls = [], spec = nil)
    @v__this = v__this
    @metaUrls = metaUrls
    @bundleUrls = bundleUrls
    @vibUrls = vibUrls
    @spec = spec
  end
end

# {urn:vim25}InstallHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   repository - Bosh::Director::CloudProviders::VSphere::HostPatchManagerLocator
#   updateID - SOAP::SOAPString
#   force - SOAP::SOAPBoolean
class InstallHostPatchRequestType
  attr_accessor :repository
  attr_accessor :updateID
  attr_accessor :force

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, repository = nil, updateID = nil, force = nil)
    @v__this = v__this
    @repository = repository
    @updateID = updateID
    @force = force
  end
end

# {urn:vim25}InstallHostPatchV2RequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   metaUrls - SOAP::SOAPString
#   bundleUrls - SOAP::SOAPString
#   vibUrls - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class InstallHostPatchV2RequestType
  attr_accessor :metaUrls
  attr_accessor :bundleUrls
  attr_accessor :vibUrls
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, metaUrls = [], bundleUrls = [], vibUrls = [], spec = nil)
    @v__this = v__this
    @metaUrls = metaUrls
    @bundleUrls = bundleUrls
    @vibUrls = vibUrls
    @spec = spec
  end
end

# {urn:vim25}UninstallHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   bulletinIds - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class UninstallHostPatchRequestType
  attr_accessor :bulletinIds
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, bulletinIds = [], spec = nil)
    @v__this = v__this
    @bulletinIds = bulletinIds
    @spec = spec
  end
end

# {urn:vim25}QueryHostPatchRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostPatchManagerPatchManagerOperationSpec
class QueryHostPatchRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}RefreshRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdatePassthruConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostPciPassthruConfig
class UpdatePassthruConfigRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = [])
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}ConfigurePowerPolicyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   key - SOAP::SOAPInt
class ConfigurePowerPolicyRequestType
  attr_accessor :key

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, key = nil)
    @v__this = v__this
    @key = key
  end
end

# {urn:vim25}UpdateServicePolicyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
#   policy - SOAP::SOAPString
class UpdateServicePolicyRequestType
  attr_accessor :id
  attr_accessor :policy

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil, policy = nil)
    @v__this = v__this
    @id = id
    @policy = policy
  end
end

# {urn:vim25}StartServiceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class StartServiceRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}StopServiceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class StopServiceRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}RestartServiceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class RestartServiceRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}UninstallServiceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   id - SOAP::SOAPString
class UninstallServiceRequestType
  attr_accessor :id

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, id = nil)
    @v__this = v__this
    @id = id
  end
end

# {urn:vim25}RefreshServicesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshServicesRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigureSnmpAgentRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::HostSnmpConfigSpec
class ReconfigureSnmpAgentRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}SendTestNotificationRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SendTestNotificationRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}RetrieveDiskPartitionInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   devicePath - SOAP::SOAPString
class RetrieveDiskPartitionInfoRequestType
  attr_accessor :devicePath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, devicePath = [])
    @v__this = v__this
    @devicePath = devicePath
  end
end

# {urn:vim25}ComputeDiskPartitionInfoRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   devicePath - SOAP::SOAPString
#   layout - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionLayout
class ComputeDiskPartitionInfoRequestType
  attr_accessor :devicePath
  attr_accessor :layout

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, devicePath = nil, layout = nil)
    @v__this = v__this
    @devicePath = devicePath
    @layout = layout
  end
end

# {urn:vim25}ComputeDiskPartitionInfoForResizeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   partition - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
#   blockRange - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionBlockRange
class ComputeDiskPartitionInfoForResizeRequestType
  attr_accessor :partition
  attr_accessor :blockRange

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, partition = nil, blockRange = nil)
    @v__this = v__this
    @partition = partition
    @blockRange = blockRange
  end
end

# {urn:vim25}UpdateDiskPartitionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   devicePath - SOAP::SOAPString
#   spec - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionSpec
class UpdateDiskPartitionsRequestType
  attr_accessor :devicePath
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, devicePath = nil, spec = nil)
    @v__this = v__this
    @devicePath = devicePath
    @spec = spec
  end
end

# {urn:vim25}FormatVmfsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   createSpec - Bosh::Director::CloudProviders::VSphere::HostVmfsSpec
class FormatVmfsRequestType
  attr_accessor :createSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, createSpec = nil)
    @v__this = v__this
    @createSpec = createSpec
  end
end

# {urn:vim25}RescanVmfsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RescanVmfsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AttachVmfsExtentRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmfsPath - SOAP::SOAPString
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class AttachVmfsExtentRequestType
  attr_accessor :vmfsPath
  attr_accessor :extent

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vmfsPath = nil, extent = nil)
    @v__this = v__this
    @vmfsPath = vmfsPath
    @extent = extent
  end
end

# {urn:vim25}ExpandVmfsExtentRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmfsPath - SOAP::SOAPString
#   extent - Bosh::Director::CloudProviders::VSphere::HostScsiDiskPartition
class ExpandVmfsExtentRequestType
  attr_accessor :vmfsPath
  attr_accessor :extent

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vmfsPath = nil, extent = nil)
    @v__this = v__this
    @vmfsPath = vmfsPath
    @extent = extent
  end
end

# {urn:vim25}UpgradeVmfsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmfsPath - SOAP::SOAPString
class UpgradeVmfsRequestType
  attr_accessor :vmfsPath

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vmfsPath = nil)
    @v__this = v__this
    @vmfsPath = vmfsPath
  end
end

# {urn:vim25}UpgradeVmLayoutRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpgradeVmLayoutRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryUnresolvedVmfsVolumeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryUnresolvedVmfsVolumeRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ResolveMultipleUnresolvedVmfsVolumesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   resolutionSpec - Bosh::Director::CloudProviders::VSphere::HostUnresolvedVmfsResolutionSpec
class ResolveMultipleUnresolvedVmfsVolumesRequestType
  attr_accessor :resolutionSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, resolutionSpec = [])
    @v__this = v__this
    @resolutionSpec = resolutionSpec
  end
end

# {urn:vim25}UnmountForceMountedVmfsVolumeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vmfsUuid - SOAP::SOAPString
class UnmountForceMountedVmfsVolumeRequestType
  attr_accessor :vmfsUuid

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vmfsUuid = nil)
    @v__this = v__this
    @vmfsUuid = vmfsUuid
  end
end

# {urn:vim25}RescanHbaRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   hbaDevice - SOAP::SOAPString
class RescanHbaRequestType
  attr_accessor :hbaDevice

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, hbaDevice = nil)
    @v__this = v__this
    @hbaDevice = hbaDevice
  end
end

# {urn:vim25}RescanAllHbaRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RescanAllHbaRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateSoftwareInternetScsiEnabledRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   enabled - SOAP::SOAPBoolean
class UpdateSoftwareInternetScsiEnabledRequestType
  attr_accessor :enabled

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, enabled = nil)
    @v__this = v__this
    @enabled = enabled
  end
end

# {urn:vim25}UpdateInternetScsiDiscoveryPropertiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   discoveryProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDiscoveryProperties
class UpdateInternetScsiDiscoveryPropertiesRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :discoveryProperties

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, discoveryProperties = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @discoveryProperties = discoveryProperties
  end
end

# {urn:vim25}UpdateInternetScsiAuthenticationPropertiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   authenticationProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaAuthenticationProperties
#   targetSet - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaTargetSet
class UpdateInternetScsiAuthenticationPropertiesRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :authenticationProperties
  attr_accessor :targetSet

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, authenticationProperties = nil, targetSet = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @authenticationProperties = authenticationProperties
    @targetSet = targetSet
  end
end

# {urn:vim25}UpdateInternetScsiDigestPropertiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targetSet - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaTargetSet
#   digestProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaDigestProperties
class UpdateInternetScsiDigestPropertiesRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targetSet
  attr_accessor :digestProperties

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targetSet = nil, digestProperties = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targetSet = targetSet
    @digestProperties = digestProperties
  end
end

# {urn:vim25}UpdateInternetScsiAdvancedOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targetSet - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaTargetSet
#   options - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaParamValue
class UpdateInternetScsiAdvancedOptionsRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targetSet
  attr_accessor :options

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targetSet = nil, options = [])
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targetSet = targetSet
    @options = options
  end
end

# {urn:vim25}UpdateInternetScsiIPPropertiesRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   ipProperties - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaIPProperties
class UpdateInternetScsiIPPropertiesRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :ipProperties

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, ipProperties = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @ipProperties = ipProperties
  end
end

# {urn:vim25}UpdateInternetScsiNameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   iScsiName - SOAP::SOAPString
class UpdateInternetScsiNameRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :iScsiName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, iScsiName = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @iScsiName = iScsiName
  end
end

# {urn:vim25}UpdateInternetScsiAliasRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   iScsiAlias - SOAP::SOAPString
class UpdateInternetScsiAliasRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :iScsiAlias

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, iScsiAlias = nil)
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @iScsiAlias = iScsiAlias
  end
end

# {urn:vim25}AddInternetScsiSendTargetsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaSendTarget
class AddInternetScsiSendTargetsRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targets

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targets = [])
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targets = targets
  end
end

# {urn:vim25}RemoveInternetScsiSendTargetsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaSendTarget
class RemoveInternetScsiSendTargetsRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targets

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targets = [])
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targets = targets
  end
end

# {urn:vim25}AddInternetScsiStaticTargetsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaStaticTarget
class AddInternetScsiStaticTargetsRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targets

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targets = [])
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targets = targets
  end
end

# {urn:vim25}RemoveInternetScsiStaticTargetsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   iScsiHbaDevice - SOAP::SOAPString
#   targets - Bosh::Director::CloudProviders::VSphere::HostInternetScsiHbaStaticTarget
class RemoveInternetScsiStaticTargetsRequestType
  attr_accessor :iScsiHbaDevice
  attr_accessor :targets

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, iScsiHbaDevice = nil, targets = [])
    @v__this = v__this
    @iScsiHbaDevice = iScsiHbaDevice
    @targets = targets
  end
end

# {urn:vim25}EnableMultipathPathRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pathName - SOAP::SOAPString
class EnableMultipathPathRequestType
  attr_accessor :pathName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pathName = nil)
    @v__this = v__this
    @pathName = pathName
  end
end

# {urn:vim25}DisableMultipathPathRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pathName - SOAP::SOAPString
class DisableMultipathPathRequestType
  attr_accessor :pathName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, pathName = nil)
    @v__this = v__this
    @pathName = pathName
  end
end

# {urn:vim25}SetMultipathLunPolicyRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   lunId - SOAP::SOAPString
#   policy - Bosh::Director::CloudProviders::VSphere::HostMultipathInfoLogicalUnitPolicy
class SetMultipathLunPolicyRequestType
  attr_accessor :lunId
  attr_accessor :policy

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, lunId = nil, policy = nil)
    @v__this = v__this
    @lunId = lunId
    @policy = policy
  end
end

# {urn:vim25}QueryPathSelectionPolicyOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryPathSelectionPolicyOptionsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryStorageArrayTypePolicyOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryStorageArrayTypePolicyOptionsRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateScsiLunDisplayNameRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   lunUuid - SOAP::SOAPString
#   displayName - SOAP::SOAPString
class UpdateScsiLunDisplayNameRequestType
  attr_accessor :lunUuid
  attr_accessor :displayName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, lunUuid = nil, displayName = nil)
    @v__this = v__this
    @lunUuid = lunUuid
    @displayName = displayName
  end
end

# {urn:vim25}RefreshStorageSystemRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RefreshStorageSystemRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}UpdateIpConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   ipConfig - Bosh::Director::CloudProviders::VSphere::HostIpConfig
class UpdateIpConfigRequestType
  attr_accessor :ipConfig

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, ipConfig = nil)
    @v__this = v__this
    @ipConfig = ipConfig
  end
end

# {urn:vim25}SelectVnicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   device - SOAP::SOAPString
class SelectVnicRequestType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, device = nil)
    @v__this = v__this
    @device = device
  end
end

# {urn:vim25}DeselectVnicRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DeselectVnicRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}QueryNetConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   nicType - SOAP::SOAPString
class QueryNetConfigRequestType
  attr_accessor :nicType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, nicType = nil)
    @v__this = v__this
    @nicType = nicType
  end
end

# {urn:vim25}SelectVnicForNicTypeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   nicType - SOAP::SOAPString
#   device - SOAP::SOAPString
class SelectVnicForNicTypeRequestType
  attr_accessor :nicType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, nicType = nil, device = nil)
    @v__this = v__this
    @nicType = nicType
    @device = device
  end
end

# {urn:vim25}DeselectVnicForNicTypeRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   nicType - SOAP::SOAPString
#   device - SOAP::SOAPString
class DeselectVnicForNicTypeRequestType
  attr_accessor :nicType
  attr_accessor :device

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, nicType = nil, device = nil)
    @v__this = v__this
    @nicType = nicType
    @device = device
  end
end

# {urn:vim25}QueryOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
class QueryOptionsRequestType
  attr_accessor :name

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil)
    @v__this = v__this
    @name = name
  end
end

# {urn:vim25}UpdateOptionsRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   changedValue - Bosh::Director::CloudProviders::VSphere::OptionValue
class UpdateOptionsRequestType
  attr_accessor :changedValue

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, changedValue = [])
    @v__this = v__this
    @changedValue = changedValue
  end
end

# {urn:vim25}CheckComplianceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   profile - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckComplianceRequestType
  attr_accessor :profile
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, profile = [], entity = [])
    @v__this = v__this
    @profile = profile
    @entity = entity
  end
end

# {urn:vim25}QueryComplianceStatusRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   profile - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryComplianceStatusRequestType
  attr_accessor :profile
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, profile = [], entity = [])
    @v__this = v__this
    @profile = profile
    @entity = entity
  end
end

# {urn:vim25}ClearComplianceStatusRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   profile - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ClearComplianceStatusRequestType
  attr_accessor :profile
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, profile = [], entity = [])
    @v__this = v__this
    @profile = profile
    @entity = entity
  end
end

# {urn:vim25}QueryExpressionMetadataRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   expressionName - SOAP::SOAPString
class QueryExpressionMetadataRequestType
  attr_accessor :expressionName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, expressionName = [])
    @v__this = v__this
    @expressionName = expressionName
  end
end

# {urn:vim25}DestroyProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyProfileRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}AssociateProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AssociateProfileRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = [])
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}DissociateProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DissociateProfileRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = [])
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}CheckProfileComplianceRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckProfileComplianceRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = [])
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}ExportProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExportProfileRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   createSpec - Bosh::Director::CloudProviders::VSphere::ProfileCreateSpec
class CreateProfileRequestType
  attr_accessor :createSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, createSpec = nil)
    @v__this = v__this
    @createSpec = createSpec
  end
end

# {urn:vim25}QueryPolicyMetadataRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   policyName - SOAP::SOAPString
class QueryPolicyMetadataRequestType
  attr_accessor :policyName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, policyName = [])
    @v__this = v__this
    @policyName = policyName
  end
end

# {urn:vim25}FindAssociatedProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindAssociatedProfileRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}UpdateClusterProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::ClusterProfileConfigSpec
class UpdateClusterProfileRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}UpdateReferenceHostRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpdateReferenceHostRequestType
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil)
    @v__this = v__this
    @host = host
  end
end

# {urn:vim25}UpdateHostProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   config - Bosh::Director::CloudProviders::VSphere::HostProfileConfigSpec
class UpdateHostProfileRequestType
  attr_accessor :config

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, config = nil)
    @v__this = v__this
    @config = config
  end
end

# {urn:vim25}ExecuteHostProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   deferredParam - Bosh::Director::CloudProviders::VSphere::ProfileDeferredPolicyOptionParameter
class ExecuteHostProfileRequestType
  attr_accessor :host
  attr_accessor :deferredParam

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, deferredParam = [])
    @v__this = v__this
    @host = host
    @deferredParam = deferredParam
  end
end

# {urn:vim25}ApplyHostConfigRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   configSpec - Bosh::Director::CloudProviders::VSphere::HostConfigSpec
class ApplyHostConfigRequestType
  attr_accessor :host
  attr_accessor :configSpec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, configSpec = nil)
    @v__this = v__this
    @host = host
    @configSpec = configSpec
  end
end

# {urn:vim25}GenerateConfigTaskListRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   configSpec - Bosh::Director::CloudProviders::VSphere::HostConfigSpec
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GenerateConfigTaskListRequestType
  attr_accessor :configSpec
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, configSpec = nil, host = nil)
    @v__this = v__this
    @configSpec = configSpec
    @host = host
  end
end

# {urn:vim25}QueryHostProfileMetadataRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   profileName - SOAP::SOAPString
class QueryHostProfileMetadataRequestType
  attr_accessor :profileName

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, profileName = [])
    @v__this = v__this
    @profileName = profileName
  end
end

# {urn:vim25}CreateDefaultProfileRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   profileType - SOAP::SOAPString
class CreateDefaultProfileRequestType
  attr_accessor :profileType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, profileType = nil)
    @v__this = v__this
    @profileType = profileType
  end
end

# {urn:vim25}RemoveScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveScheduledTaskRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}ReconfigureScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ScheduledTaskSpec
class ReconfigureScheduledTaskRequestType
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, spec = nil)
    @v__this = v__this
    @spec = spec
  end
end

# {urn:vim25}RunScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RunScheduledTaskRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ScheduledTaskSpec
class CreateScheduledTaskRequestType
  attr_accessor :entity
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil, spec = nil)
    @v__this = v__this
    @entity = entity
    @spec = spec
  end
end

# {urn:vim25}RetrieveEntityScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveEntityScheduledTaskRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = nil)
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}CreateObjectScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::ScheduledTaskSpec
class CreateObjectScheduledTaskRequestType
  attr_accessor :obj
  attr_accessor :spec

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = nil, spec = nil)
    @v__this = v__this
    @obj = obj
    @spec = spec
  end
end

# {urn:vim25}RetrieveObjectScheduledTaskRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RetrieveObjectScheduledTaskRequestType
  attr_accessor :obj

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = nil)
    @v__this = v__this
    @obj = obj
  end
end

# {urn:vim25}OpenInventoryViewFolderRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class OpenInventoryViewFolderRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = [])
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}CloseInventoryViewFolderRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   entity - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CloseInventoryViewFolderRequestType
  attr_accessor :entity

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, entity = [])
    @v__this = v__this
    @entity = entity
  end
end

# {urn:vim25}ModifyListViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   add - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   remove - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ModifyListViewRequestType
  attr_accessor :add
  attr_accessor :remove

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, add = [], remove = [])
    @v__this = v__this
    @add = add
    @remove = remove
  end
end

# {urn:vim25}ResetListViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetListViewRequestType
  attr_accessor :obj

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = [])
    @v__this = v__this
    @obj = obj
  end
end

# {urn:vim25}ResetListViewFromViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   view - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetListViewFromViewRequestType
  attr_accessor :view

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, view = nil)
    @v__this = v__this
    @view = view
  end
end

# {urn:vim25}DestroyViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DestroyViewRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateInventoryViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateInventoryViewRequestType
  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil)
    @v__this = v__this
  end
end

# {urn:vim25}CreateContainerViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   container - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   type - SOAP::SOAPString
#   recursive - SOAP::SOAPBoolean
class CreateContainerViewRequestType
  attr_accessor :container
  attr_accessor :type
  attr_accessor :recursive

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, container = nil, type = [], recursive = nil)
    @v__this = v__this
    @container = container
    @type = type
    @recursive = recursive
  end
end

# {urn:vim25}CreateListViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   obj - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateListViewRequestType
  attr_accessor :obj

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, obj = [])
    @v__this = v__this
    @obj = obj
  end
end

# {urn:vim25}CreateListViewFromViewRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   view - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateListViewFromViewRequestType
  attr_accessor :view

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, view = nil)
    @v__this = v__this
    @view = view
  end
end

# {urn:vim25}RevertToSnapshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   suppressPowerOn - SOAP::SOAPBoolean
class RevertToSnapshotRequestType
  attr_accessor :host
  attr_accessor :suppressPowerOn

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, host = nil, suppressPowerOn = nil)
    @v__this = v__this
    @host = host
    @suppressPowerOn = suppressPowerOn
  end
end

# {urn:vim25}RemoveSnapshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   removeChildren - SOAP::SOAPBoolean
class RemoveSnapshotRequestType
  attr_accessor :removeChildren

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, removeChildren = nil)
    @v__this = v__this
    @removeChildren = removeChildren
  end
end

# {urn:vim25}RenameSnapshotRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   name - SOAP::SOAPString
#   description - SOAP::SOAPString
class RenameSnapshotRequestType
  attr_accessor :name
  attr_accessor :description

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, name = nil, description = nil)
    @v__this = v__this
    @name = name
    @description = description
  end
end

# {urn:vim25}CheckCompatibilityRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   testType - SOAP::SOAPString
class CheckCompatibilityRequestType
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :pool
  attr_accessor :testType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, host = nil, pool = nil, testType = [])
    @v__this = v__this
    @vm = vm
    @host = host
    @pool = pool
    @testType = testType
  end
end

# {urn:vim25}QueryVMotionCompatibilityExRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVMotionCompatibilityExRequestType
  attr_accessor :vm
  attr_accessor :host

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = [], host = [])
    @v__this = v__this
    @vm = vm
    @host = host
  end
end

# {urn:vim25}CheckMigrateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   host - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   pool - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   state - Bosh::Director::CloudProviders::VSphere::VirtualMachinePowerState
#   testType - SOAP::SOAPString
class CheckMigrateRequestType
  attr_accessor :vm
  attr_accessor :host
  attr_accessor :pool
  attr_accessor :state
  attr_accessor :testType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, host = nil, pool = nil, state = nil, testType = [])
    @v__this = v__this
    @vm = vm
    @host = host
    @pool = pool
    @state = state
    @testType = testType
  end
end

# {urn:vim25}CheckRelocateRequestType
#   m__this - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   vm - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
#   spec - Bosh::Director::CloudProviders::VSphere::VirtualMachineRelocateSpec
#   testType - SOAP::SOAPString
class CheckRelocateRequestType
  attr_accessor :vm
  attr_accessor :spec
  attr_accessor :testType

  def m__this
    @v__this
  end

  def m__this=(value)
    @v__this = value
  end

  def initialize(v__this = nil, vm = nil, spec = nil, testType = [])
    @v__this = v__this
    @vm = vm
    @spec = spec
    @testType = testType
  end
end

# {urn:vim25}ArrayOfPermission
class ArrayOfPermission < ::Array
end

# {urn:vim25}ArrayOfAuthorizationRole
class ArrayOfAuthorizationRole < ::Array
end

# {urn:vim25}ArrayOfAuthorizationPrivilege
class ArrayOfAuthorizationPrivilege < ::Array
end

# {urn:vim25}ArrayOfCustomFieldDef
class ArrayOfCustomFieldDef < ::Array
end

# {urn:vim25}ArrayOfCustomFieldValue
class ArrayOfCustomFieldValue < ::Array
end

# {urn:vim25}ArrayOfCustomizationSpecInfo
class ArrayOfCustomizationSpecInfo < ::Array
end

# {urn:vim25}ArrayOfDatastoreHostMount
class ArrayOfDatastoreHostMount < ::Array
end

# {urn:vim25}ArrayOfDatastoreMountPathDatastorePair
class ArrayOfDatastoreMountPathDatastorePair < ::Array
end

# {urn:vim25}ArrayOfDiagnosticManagerLogDescriptor
class ArrayOfDiagnosticManagerLogDescriptor < ::Array
end

# {urn:vim25}ArrayOfDiagnosticManagerBundleInfo
class ArrayOfDiagnosticManagerBundleInfo < ::Array
end

# {urn:vim25}ArrayOfEVCMode
class ArrayOfEVCMode < ::Array
end

# {urn:vim25}ArrayOfElementDescription
class ArrayOfElementDescription < ::Array
end

# {urn:vim25}ArrayOfEnumDescription
class ArrayOfEnumDescription < ::Array
end

# {urn:vim25}ArrayOfExtensionServerInfo
class ArrayOfExtensionServerInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionClientInfo
class ArrayOfExtensionClientInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionTaskTypeInfo
class ArrayOfExtensionTaskTypeInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionEventTypeInfo
class ArrayOfExtensionEventTypeInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionFaultTypeInfo
class ArrayOfExtensionFaultTypeInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionPrivilegeInfo
class ArrayOfExtensionPrivilegeInfo < ::Array
end

# {urn:vim25}ArrayOfExtensionResourceInfo
class ArrayOfExtensionResourceInfo < ::Array
end

# {urn:vim25}ArrayOfExtension
class ArrayOfExtension < ::Array
end

# {urn:vim25}ArrayOfHttpNfcLeaseDatastoreLeaseInfo
class ArrayOfHttpNfcLeaseDatastoreLeaseInfo < ::Array
end

# {urn:vim25}ArrayOfHttpNfcLeaseHostInfo
class ArrayOfHttpNfcLeaseHostInfo < ::Array
end

# {urn:vim25}ArrayOfHttpNfcLeaseDeviceUrl
class ArrayOfHttpNfcLeaseDeviceUrl < ::Array
end

# {urn:vim25}ArrayOfHttpNfcLeaseManifestEntry
class ArrayOfHttpNfcLeaseManifestEntry < ::Array
end

# {urn:vim25}ArrayOfImportSpec
class ArrayOfImportSpec < ::Array
end

# {urn:vim25}ArrayOfKeyValue
class ArrayOfKeyValue < ::Array
end

# {urn:vim25}ArrayOfLicenseAssignmentManagerLicenseAssignment
class ArrayOfLicenseAssignmentManagerLicenseAssignment < ::Array
end

# {urn:vim25}ArrayOfLicenseFeatureInfo
class ArrayOfLicenseFeatureInfo < ::Array
end

# {urn:vim25}ArrayOfLicenseReservationInfo
class ArrayOfLicenseReservationInfo < ::Array
end

# {urn:vim25}ArrayOfLicenseAvailabilityInfo
class ArrayOfLicenseAvailabilityInfo < ::Array
end

# {urn:vim25}ArrayOfLicenseManagerLicenseInfo
class ArrayOfLicenseManagerLicenseInfo < ::Array
end

# {urn:vim25}ArrayOfLocalizationManagerMessageCatalog
class ArrayOfLocalizationManagerMessageCatalog < ::Array
end

# {urn:vim25}ArrayOfNumericRange
class ArrayOfNumericRange < ::Array
end

# {urn:vim25}ArrayOfOvfDeploymentOption
class ArrayOfOvfDeploymentOption < ::Array
end

# {urn:vim25}ArrayOfOvfNetworkInfo
class ArrayOfOvfNetworkInfo < ::Array
end

# {urn:vim25}ArrayOfOvfResourceMap
class ArrayOfOvfResourceMap < ::Array
end

# {urn:vim25}ArrayOfOvfNetworkMapping
class ArrayOfOvfNetworkMapping < ::Array
end

# {urn:vim25}ArrayOfOvfFileItem
class ArrayOfOvfFileItem < ::Array
end

# {urn:vim25}ArrayOfOvfFile
class ArrayOfOvfFile < ::Array
end

# {urn:vim25}ArrayOfPerfCounterInfo
class ArrayOfPerfCounterInfo < ::Array
end

# {urn:vim25}ArrayOfPerfMetricId
class ArrayOfPerfMetricId < ::Array
end

# {urn:vim25}ArrayOfPerfQuerySpec
class ArrayOfPerfQuerySpec < ::Array
end

# {urn:vim25}ArrayOfPerfSampleInfo
class ArrayOfPerfSampleInfo < ::Array
end

# {urn:vim25}ArrayOfPerfMetricSeries
class ArrayOfPerfMetricSeries < ::Array
end

# {urn:vim25}ArrayOfPerfMetricSeriesCSV
class ArrayOfPerfMetricSeriesCSV < ::Array
end

# {urn:vim25}ArrayOfPerfEntityMetricBase
class ArrayOfPerfEntityMetricBase < ::Array
end

# {urn:vim25}ArrayOfPerfInterval
class ArrayOfPerfInterval < ::Array
end

# {urn:vim25}ArrayOfResourceConfigSpec
class ArrayOfResourceConfigSpec < ::Array
end

# {urn:vim25}ArrayOfHostVMotionCompatibility
class ArrayOfHostVMotionCompatibility < ::Array
end

# {urn:vim25}ArrayOfProductComponentInfo
class ArrayOfProductComponentInfo < ::Array
end

# {urn:vim25}ArrayOfUserSession
class ArrayOfUserSession < ::Array
end

# {urn:vim25}ArrayOfTag
class ArrayOfTag < ::Array
end

# {urn:vim25}ArrayOfTaskInfoState
class ArrayOfTaskInfoState < ::Array
end

# {urn:vim25}ArrayOfTaskInfo
class ArrayOfTaskInfo < ::Array
end

# {urn:vim25}ArrayOfTypeDescription
class ArrayOfTypeDescription < ::Array
end

# {urn:vim25}ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo
class ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo < ::Array
end

# {urn:vim25}ArrayOfUserSearchResult
class ArrayOfUserSearchResult < ::Array
end

# {urn:vim25}ArrayOfVirtualAppLinkInfo
class ArrayOfVirtualAppLinkInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineDisplayTopology
class ArrayOfVirtualMachineDisplayTopology < ::Array
end

# {urn:vim25}ArrayOfDiskChangeExtent
class ArrayOfDiskChangeExtent < ::Array
end

# {urn:vim25}ArrayOfMethodActionArgument
class ArrayOfMethodActionArgument < ::Array
end

# {urn:vim25}ArrayOfAlarmAction
class ArrayOfAlarmAction < ::Array
end

# {urn:vim25}ArrayOfAlarmTriggeringActionTransitionSpec
class ArrayOfAlarmTriggeringActionTransitionSpec < ::Array
end

# {urn:vim25}ArrayOfAlarmExpression
class ArrayOfAlarmExpression < ::Array
end

# {urn:vim25}ArrayOfEventAlarmExpressionComparison
class ArrayOfEventAlarmExpressionComparison < ::Array
end

# {urn:vim25}ArrayOfAlarmState
class ArrayOfAlarmState < ::Array
end

# {urn:vim25}ArrayOfClusterAction
class ArrayOfClusterAction < ::Array
end

# {urn:vim25}ArrayOfClusterActionHistory
class ArrayOfClusterActionHistory < ::Array
end

# {urn:vim25}ArrayOfClusterAttemptedVmInfo
class ArrayOfClusterAttemptedVmInfo < ::Array
end

# {urn:vim25}ArrayOfClusterDrsVmConfigInfo
class ArrayOfClusterDrsVmConfigInfo < ::Array
end

# {urn:vim25}ArrayOfClusterDpmHostConfigInfo
class ArrayOfClusterDpmHostConfigInfo < ::Array
end

# {urn:vim25}ArrayOfClusterDasVmConfigSpec
class ArrayOfClusterDasVmConfigSpec < ::Array
end

# {urn:vim25}ArrayOfClusterDrsVmConfigSpec
class ArrayOfClusterDrsVmConfigSpec < ::Array
end

# {urn:vim25}ArrayOfClusterRuleSpec
class ArrayOfClusterRuleSpec < ::Array
end

# {urn:vim25}ArrayOfClusterDpmHostConfigSpec
class ArrayOfClusterDpmHostConfigSpec < ::Array
end

# {urn:vim25}ArrayOfClusterGroupSpec
class ArrayOfClusterGroupSpec < ::Array
end

# {urn:vim25}ArrayOfClusterDasAamNodeState
class ArrayOfClusterDasAamNodeState < ::Array
end

# {urn:vim25}ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots
class ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots < ::Array
end

# {urn:vim25}ArrayOfClusterDasVmConfigInfo
class ArrayOfClusterDasVmConfigInfo < ::Array
end

# {urn:vim25}ArrayOfClusterDrsFaultsFaultsByVm
class ArrayOfClusterDrsFaultsFaultsByVm < ::Array
end

# {urn:vim25}ArrayOfClusterDrsFaults
class ArrayOfClusterDrsFaults < ::Array
end

# {urn:vim25}ArrayOfClusterDrsMigration
class ArrayOfClusterDrsMigration < ::Array
end

# {urn:vim25}ArrayOfClusterDrsRecommendation
class ArrayOfClusterDrsRecommendation < ::Array
end

# {urn:vim25}ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus
class ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus < ::Array
end

# {urn:vim25}ArrayOfClusterGroupInfo
class ArrayOfClusterGroupInfo < ::Array
end

# {urn:vim25}ArrayOfClusterHostRecommendation
class ArrayOfClusterHostRecommendation < ::Array
end

# {urn:vim25}ArrayOfClusterNotAttemptedVmInfo
class ArrayOfClusterNotAttemptedVmInfo < ::Array
end

# {urn:vim25}ArrayOfClusterRecommendation
class ArrayOfClusterRecommendation < ::Array
end

# {urn:vim25}ArrayOfClusterRuleInfo
class ArrayOfClusterRuleInfo < ::Array
end

# {urn:vim25}ArrayOfDVPortConfigSpec
class ArrayOfDVPortConfigSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualPort
class ArrayOfDistributedVirtualPort < ::Array
end

# {urn:vim25}ArrayOfDVPortgroupConfigSpec
class ArrayOfDVPortgroupConfigSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualPortgroupInfo
class ArrayOfDistributedVirtualPortgroupInfo < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchInfo
class ArrayOfDistributedVirtualSwitchInfo < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchManagerCompatibilityResult
class ArrayOfDistributedVirtualSwitchManagerCompatibilityResult < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec
class ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchHostMemberConfigSpec
class ArrayOfDistributedVirtualSwitchHostMemberConfigSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchHostMemberPnicSpec
class ArrayOfDistributedVirtualSwitchHostMemberPnicSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchHostMember
class ArrayOfDistributedVirtualSwitchHostMember < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchHostProductSpec
class ArrayOfDistributedVirtualSwitchHostProductSpec < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob
class ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob < ::Array
end

# {urn:vim25}ArrayOfDVSNetworkResourcePoolConfigSpec
class ArrayOfDVSNetworkResourcePoolConfigSpec < ::Array
end

# {urn:vim25}ArrayOfDVSNetworkResourcePool
class ArrayOfDVSNetworkResourcePool < ::Array
end

# {urn:vim25}ArrayOfDistributedVirtualSwitchProductSpec
class ArrayOfDistributedVirtualSwitchProductSpec < ::Array
end

# {urn:vim25}ArrayOfVMwareDVSPvlanConfigSpec
class ArrayOfVMwareDVSPvlanConfigSpec < ::Array
end

# {urn:vim25}ArrayOfVMwareDVSPvlanMapEntry
class ArrayOfVMwareDVSPvlanMapEntry < ::Array
end

# {urn:vim25}ArrayOfEvent
class ArrayOfEvent < ::Array
end

# {urn:vim25}ArrayOfExtendedEventPair
class ArrayOfExtendedEventPair < ::Array
end

# {urn:vim25}ArrayOfVnicPortArgument
class ArrayOfVnicPortArgument < ::Array
end

# {urn:vim25}ArrayOfDvsOutOfSyncHostArgument
class ArrayOfDvsOutOfSyncHostArgument < ::Array
end

# {urn:vim25}ArrayOfHostEventArgument
class ArrayOfHostEventArgument < ::Array
end

# {urn:vim25}ArrayOfVmEventArgument
class ArrayOfVmEventArgument < ::Array
end

# {urn:vim25}ArrayOfEventArgDesc
class ArrayOfEventArgDesc < ::Array
end

# {urn:vim25}ArrayOfEventDescriptionEventDetail
class ArrayOfEventDescriptionEventDetail < ::Array
end

# {urn:vim25}ArrayOfDatacenterMismatchArgument
class ArrayOfDatacenterMismatchArgument < ::Array
end

# {urn:vim25}ArrayOfDvsOperationBulkFaultFaultOnHost
class ArrayOfDvsOperationBulkFaultFaultOnHost < ::Array
end

# {urn:vim25}ArrayOfMultipleCertificatesVerifyFaultThumbprintData
class ArrayOfMultipleCertificatesVerifyFaultThumbprintData < ::Array
end

# {urn:vim25}ArrayOfProfileUpdateFailedUpdateFailure
class ArrayOfProfileUpdateFailedUpdateFailure < ::Array
end

# {urn:vim25}ArrayOfHostActiveDirectory
class ArrayOfHostActiveDirectory < ::Array
end

# {urn:vim25}ArrayOfHostAuthenticationStoreInfo
class ArrayOfHostAuthenticationStoreInfo < ::Array
end

# {urn:vim25}ArrayOfAutoStartPowerInfo
class ArrayOfAutoStartPowerInfo < ::Array
end

# {urn:vim25}ArrayOfHostBootDevice
class ArrayOfHostBootDevice < ::Array
end

# {urn:vim25}ArrayOfHostConnectInfoNetworkInfo
class ArrayOfHostConnectInfoNetworkInfo < ::Array
end

# {urn:vim25}ArrayOfHostDatastoreConnectInfo
class ArrayOfHostDatastoreConnectInfo < ::Array
end

# {urn:vim25}ArrayOfHostCpuIdInfo
class ArrayOfHostCpuIdInfo < ::Array
end

# {urn:vim25}ArrayOfFileInfo
class ArrayOfFileInfo < ::Array
end

# {urn:vim25}ArrayOfFileQuery
class ArrayOfFileQuery < ::Array
end

# {urn:vim25}ArrayOfHostDatastoreBrowserSearchResults
class ArrayOfHostDatastoreBrowserSearchResults < ::Array
end

# {urn:vim25}ArrayOfVmfsDatastoreOption
class ArrayOfVmfsDatastoreOption < ::Array
end

# {urn:vim25}ArrayOfHostDateTimeSystemTimeZone
class ArrayOfHostDateTimeSystemTimeZone < ::Array
end

# {urn:vim25}ArrayOfHostDhcpServiceConfig
class ArrayOfHostDhcpServiceConfig < ::Array
end

# {urn:vim25}ArrayOfHostDhcpService
class ArrayOfHostDhcpService < ::Array
end

# {urn:vim25}ArrayOfHostDiagnosticPartitionCreateOption
class ArrayOfHostDiagnosticPartitionCreateOption < ::Array
end

# {urn:vim25}ArrayOfHostDiagnosticPartition
class ArrayOfHostDiagnosticPartition < ::Array
end

# {urn:vim25}ArrayOfHostDiskPartitionAttributes
class ArrayOfHostDiskPartitionAttributes < ::Array
end

# {urn:vim25}ArrayOfHostDiskPartitionBlockRange
class ArrayOfHostDiskPartitionBlockRange < ::Array
end

# {urn:vim25}ArrayOfHostDiskPartitionInfo
class ArrayOfHostDiskPartitionInfo < ::Array
end

# {urn:vim25}ArrayOfHostFeatureVersionInfo
class ArrayOfHostFeatureVersionInfo < ::Array
end

# {urn:vim25}ArrayOfHostFileSystemMountInfo
class ArrayOfHostFileSystemMountInfo < ::Array
end

# {urn:vim25}ArrayOfHostNasVolumeConfig
class ArrayOfHostNasVolumeConfig < ::Array
end

# {urn:vim25}ArrayOfHostFirewallConfigRuleSetConfig
class ArrayOfHostFirewallConfigRuleSetConfig < ::Array
end

# {urn:vim25}ArrayOfHostCpuPackage
class ArrayOfHostCpuPackage < ::Array
end

# {urn:vim25}ArrayOfHostNumaNode
class ArrayOfHostNumaNode < ::Array
end

# {urn:vim25}ArrayOfHostHardwareElementInfo
class ArrayOfHostHardwareElementInfo < ::Array
end

# {urn:vim25}ArrayOfHostStorageOperationalInfo
class ArrayOfHostStorageOperationalInfo < ::Array
end

# {urn:vim25}ArrayOfHostStorageElementInfo
class ArrayOfHostStorageElementInfo < ::Array
end

# {urn:vim25}ArrayOfHostHostBusAdapter
class ArrayOfHostHostBusAdapter < ::Array
end

# {urn:vim25}ArrayOfHostInternetScsiHbaParamValue
class ArrayOfHostInternetScsiHbaParamValue < ::Array
end

# {urn:vim25}ArrayOfHostInternetScsiHbaSendTarget
class ArrayOfHostInternetScsiHbaSendTarget < ::Array
end

# {urn:vim25}ArrayOfHostInternetScsiHbaStaticTarget
class ArrayOfHostInternetScsiHbaStaticTarget < ::Array
end

# {urn:vim25}ArrayOfHostProxySwitchConfig
class ArrayOfHostProxySwitchConfig < ::Array
end

# {urn:vim25}ArrayOfHostProxySwitch
class ArrayOfHostProxySwitch < ::Array
end

# {urn:vim25}ArrayOfHostIpConfigIpV6Address
class ArrayOfHostIpConfigIpV6Address < ::Array
end

# {urn:vim25}ArrayOfHostIpRouteEntry
class ArrayOfHostIpRouteEntry < ::Array
end

# {urn:vim25}ArrayOfHostIpRouteOp
class ArrayOfHostIpRouteOp < ::Array
end

# {urn:vim25}ArrayOfKernelModuleInfo
class ArrayOfKernelModuleInfo < ::Array
end

# {urn:vim25}ArrayOfHostAccountSpec
class ArrayOfHostAccountSpec < ::Array
end

# {urn:vim25}ArrayOfHostMultipathInfoLogicalUnit
class ArrayOfHostMultipathInfoLogicalUnit < ::Array
end

# {urn:vim25}ArrayOfHostMultipathInfoPath
class ArrayOfHostMultipathInfoPath < ::Array
end

# {urn:vim25}ArrayOfHostMultipathStateInfoPath
class ArrayOfHostMultipathStateInfoPath < ::Array
end

# {urn:vim25}ArrayOfHostNatServicePortForwardSpec
class ArrayOfHostNatServicePortForwardSpec < ::Array
end

# {urn:vim25}ArrayOfHostNatServiceConfig
class ArrayOfHostNatServiceConfig < ::Array
end

# {urn:vim25}ArrayOfHostNatService
class ArrayOfHostNatService < ::Array
end

# {urn:vim25}ArrayOfHostNumericSensorInfo
class ArrayOfHostNumericSensorInfo < ::Array
end

# {urn:vim25}ArrayOfHostPatchManagerStatusPrerequisitePatch
class ArrayOfHostPatchManagerStatusPrerequisitePatch < ::Array
end

# {urn:vim25}ArrayOfHostPatchManagerStatus
class ArrayOfHostPatchManagerStatus < ::Array
end

# {urn:vim25}ArrayOfHostPathSelectionPolicyOption
class ArrayOfHostPathSelectionPolicyOption < ::Array
end

# {urn:vim25}ArrayOfHostPciDevice
class ArrayOfHostPciDevice < ::Array
end

# {urn:vim25}ArrayOfHostPciPassthruConfig
class ArrayOfHostPciPassthruConfig < ::Array
end

# {urn:vim25}ArrayOfHostPciPassthruInfo
class ArrayOfHostPciPassthruInfo < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicConfig
class ArrayOfPhysicalNicConfig < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicLinkInfo
class ArrayOfPhysicalNicLinkInfo < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicIpHint
class ArrayOfPhysicalNicIpHint < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicNameHint
class ArrayOfPhysicalNicNameHint < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicHintInfo
class ArrayOfPhysicalNicHintInfo < ::Array
end

# {urn:vim25}ArrayOfPhysicalNic
class ArrayOfPhysicalNic < ::Array
end

# {urn:vim25}ArrayOfHostPlugStoreTopologyAdapter
class ArrayOfHostPlugStoreTopologyAdapter < ::Array
end

# {urn:vim25}ArrayOfHostPlugStoreTopologyPath
class ArrayOfHostPlugStoreTopologyPath < ::Array
end

# {urn:vim25}ArrayOfHostPlugStoreTopologyDevice
class ArrayOfHostPlugStoreTopologyDevice < ::Array
end

# {urn:vim25}ArrayOfHostPlugStoreTopologyPlugin
class ArrayOfHostPlugStoreTopologyPlugin < ::Array
end

# {urn:vim25}ArrayOfHostPlugStoreTopologyTarget
class ArrayOfHostPlugStoreTopologyTarget < ::Array
end

# {urn:vim25}ArrayOfHostPortGroupConfig
class ArrayOfHostPortGroupConfig < ::Array
end

# {urn:vim25}ArrayOfHostPortGroupPort
class ArrayOfHostPortGroupPort < ::Array
end

# {urn:vim25}ArrayOfHostPortGroup
class ArrayOfHostPortGroup < ::Array
end

# {urn:vim25}ArrayOfHostPowerPolicy
class ArrayOfHostPowerPolicy < ::Array
end

# {urn:vim25}ArrayOfHostFirewallRule
class ArrayOfHostFirewallRule < ::Array
end

# {urn:vim25}ArrayOfHostFirewallRuleset
class ArrayOfHostFirewallRuleset < ::Array
end

# {urn:vim25}ArrayOfHostScsiDiskPartition
class ArrayOfHostScsiDiskPartition < ::Array
end

# {urn:vim25}ArrayOfHostScsiDisk
class ArrayOfHostScsiDisk < ::Array
end

# {urn:vim25}ArrayOfScsiLunDurableName
class ArrayOfScsiLunDurableName < ::Array
end

# {urn:vim25}ArrayOfScsiLunDescriptor
class ArrayOfScsiLunDescriptor < ::Array
end

# {urn:vim25}ArrayOfScsiLun
class ArrayOfScsiLun < ::Array
end

# {urn:vim25}ArrayOfHostScsiTopologyInterface
class ArrayOfHostScsiTopologyInterface < ::Array
end

# {urn:vim25}ArrayOfHostScsiTopologyTarget
class ArrayOfHostScsiTopologyTarget < ::Array
end

# {urn:vim25}ArrayOfHostScsiTopologyLun
class ArrayOfHostScsiTopologyLun < ::Array
end

# {urn:vim25}ArrayOfHostService
class ArrayOfHostService < ::Array
end

# {urn:vim25}ArrayOfHostServiceConfig
class ArrayOfHostServiceConfig < ::Array
end

# {urn:vim25}ArrayOfHostSnmpDestination
class ArrayOfHostSnmpDestination < ::Array
end

# {urn:vim25}ArrayOfHostStorageArrayTypePolicyOption
class ArrayOfHostStorageArrayTypePolicyOption < ::Array
end

# {urn:vim25}ArrayOfHostSystemIdentificationInfo
class ArrayOfHostSystemIdentificationInfo < ::Array
end

# {urn:vim25}ArrayOfHostSystemResourceInfo
class ArrayOfHostSystemResourceInfo < ::Array
end

# {urn:vim25}ArrayOfHostTpmDigestInfo
class ArrayOfHostTpmDigestInfo < ::Array
end

# {urn:vim25}ArrayOfHostUnresolvedVmfsExtent
class ArrayOfHostUnresolvedVmfsExtent < ::Array
end

# {urn:vim25}ArrayOfHostUnresolvedVmfsResolutionResult
class ArrayOfHostUnresolvedVmfsResolutionResult < ::Array
end

# {urn:vim25}ArrayOfHostUnresolvedVmfsResolutionSpec
class ArrayOfHostUnresolvedVmfsResolutionSpec < ::Array
end

# {urn:vim25}ArrayOfHostUnresolvedVmfsVolume
class ArrayOfHostUnresolvedVmfsVolume < ::Array
end

# {urn:vim25}ArrayOfHostVirtualNicConfig
class ArrayOfHostVirtualNicConfig < ::Array
end

# {urn:vim25}ArrayOfHostVirtualNic
class ArrayOfHostVirtualNic < ::Array
end

# {urn:vim25}ArrayOfHostVirtualNicManagerNicTypeSelection
class ArrayOfHostVirtualNicManagerNicTypeSelection < ::Array
end

# {urn:vim25}ArrayOfVirtualNicManagerNetConfig
class ArrayOfVirtualNicManagerNetConfig < ::Array
end

# {urn:vim25}ArrayOfHostVirtualSwitchConfig
class ArrayOfHostVirtualSwitchConfig < ::Array
end

# {urn:vim25}ArrayOfHostVirtualSwitch
class ArrayOfHostVirtualSwitch < ::Array
end

# {urn:vim25}ArrayOfHostVmfsRescanResult
class ArrayOfHostVmfsRescanResult < ::Array
end

# {urn:vim25}ArrayOfNetIpConfigInfoIpAddress
class ArrayOfNetIpConfigInfoIpAddress < ::Array
end

# {urn:vim25}ArrayOfNetIpConfigSpecIpAddressSpec
class ArrayOfNetIpConfigSpecIpAddressSpec < ::Array
end

# {urn:vim25}ArrayOfNetIpRouteConfigInfoIpRoute
class ArrayOfNetIpRouteConfigInfoIpRoute < ::Array
end

# {urn:vim25}ArrayOfNetIpRouteConfigSpecIpRouteSpec
class ArrayOfNetIpRouteConfigSpecIpRouteSpec < ::Array
end

# {urn:vim25}ArrayOfNetIpStackInfoNetToMedia
class ArrayOfNetIpStackInfoNetToMedia < ::Array
end

# {urn:vim25}ArrayOfNetIpStackInfoDefaultRouter
class ArrayOfNetIpStackInfoDefaultRouter < ::Array
end

# {urn:vim25}ArrayOfOptionDef
class ArrayOfOptionDef < ::Array
end

# {urn:vim25}ArrayOfOptionValue
class ArrayOfOptionValue < ::Array
end

# {urn:vim25}ArrayOfComplianceLocator
class ArrayOfComplianceLocator < ::Array
end

# {urn:vim25}ArrayOfComplianceFailure
class ArrayOfComplianceFailure < ::Array
end

# {urn:vim25}ArrayOfComplianceResult
class ArrayOfComplianceResult < ::Array
end

# {urn:vim25}ArrayOfProfileDeferredPolicyOptionParameter
class ArrayOfProfileDeferredPolicyOptionParameter < ::Array
end

# {urn:vim25}ArrayOfProfileExpression
class ArrayOfProfileExpression < ::Array
end

# {urn:vim25}ArrayOfProfileExpressionMetadata
class ArrayOfProfileExpressionMetadata < ::Array
end

# {urn:vim25}ArrayOfProfileParameterMetadata
class ArrayOfProfileParameterMetadata < ::Array
end

# {urn:vim25}ArrayOfProfilePolicy
class ArrayOfProfilePolicy < ::Array
end

# {urn:vim25}ArrayOfProfilePolicyOptionMetadata
class ArrayOfProfilePolicyOptionMetadata < ::Array
end

# {urn:vim25}ArrayOfProfilePolicyMetadata
class ArrayOfProfilePolicyMetadata < ::Array
end

# {urn:vim25}ArrayOfPolicyOption
class ArrayOfPolicyOption < ::Array
end

# {urn:vim25}ArrayOfProfileDescriptionSection
class ArrayOfProfileDescriptionSection < ::Array
end

# {urn:vim25}ArrayOfProfileMetadata
class ArrayOfProfileMetadata < ::Array
end

# {urn:vim25}ArrayOfProfileExecuteError
class ArrayOfProfileExecuteError < ::Array
end

# {urn:vim25}ArrayOfPhysicalNicProfile
class ArrayOfPhysicalNicProfile < ::Array
end

# {urn:vim25}ArrayOfUserProfile
class ArrayOfUserProfile < ::Array
end

# {urn:vim25}ArrayOfUserGroupProfile
class ArrayOfUserGroupProfile < ::Array
end

# {urn:vim25}ArrayOfOptionProfile
class ArrayOfOptionProfile < ::Array
end

# {urn:vim25}ArrayOfServiceProfile
class ArrayOfServiceProfile < ::Array
end

# {urn:vim25}ArrayOfFirewallProfileRulesetProfile
class ArrayOfFirewallProfileRulesetProfile < ::Array
end

# {urn:vim25}ArrayOfNasStorageProfile
class ArrayOfNasStorageProfile < ::Array
end

# {urn:vim25}ArrayOfDvsServiceConsoleVNicProfile
class ArrayOfDvsServiceConsoleVNicProfile < ::Array
end

# {urn:vim25}ArrayOfDvsHostVNicProfile
class ArrayOfDvsHostVNicProfile < ::Array
end

# {urn:vim25}ArrayOfDvsProfile
class ArrayOfDvsProfile < ::Array
end

# {urn:vim25}ArrayOfPnicUplinkProfile
class ArrayOfPnicUplinkProfile < ::Array
end

# {urn:vim25}ArrayOfStaticRouteProfile
class ArrayOfStaticRouteProfile < ::Array
end

# {urn:vim25}ArrayOfVirtualSwitchProfile
class ArrayOfVirtualSwitchProfile < ::Array
end

# {urn:vim25}ArrayOfVmPortGroupProfile
class ArrayOfVmPortGroupProfile < ::Array
end

# {urn:vim25}ArrayOfHostPortGroupProfile
class ArrayOfHostPortGroupProfile < ::Array
end

# {urn:vim25}ArrayOfServiceConsolePortGroupProfile
class ArrayOfServiceConsolePortGroupProfile < ::Array
end

# {urn:vim25}ArrayOfPermissionProfile
class ArrayOfPermissionProfile < ::Array
end

# {urn:vim25}ArrayOfScheduledTaskDetail
class ArrayOfScheduledTaskDetail < ::Array
end

# {urn:vim25}ArrayOfVAppCloneSpecNetworkMappingPair
class ArrayOfVAppCloneSpecNetworkMappingPair < ::Array
end

# {urn:vim25}ArrayOfVAppCloneSpecResourceMap
class ArrayOfVAppCloneSpecResourceMap < ::Array
end

# {urn:vim25}ArrayOfVAppEntityConfigInfo
class ArrayOfVAppEntityConfigInfo < ::Array
end

# {urn:vim25}ArrayOfIpPoolAssociation
class ArrayOfIpPoolAssociation < ::Array
end

# {urn:vim25}ArrayOfIpPool
class ArrayOfIpPool < ::Array
end

# {urn:vim25}ArrayOfVAppOvfSectionInfo
class ArrayOfVAppOvfSectionInfo < ::Array
end

# {urn:vim25}ArrayOfVAppProductInfo
class ArrayOfVAppProductInfo < ::Array
end

# {urn:vim25}ArrayOfVAppPropertyInfo
class ArrayOfVAppPropertyInfo < ::Array
end

# {urn:vim25}ArrayOfVAppProductSpec
class ArrayOfVAppProductSpec < ::Array
end

# {urn:vim25}ArrayOfVAppPropertySpec
class ArrayOfVAppPropertySpec < ::Array
end

# {urn:vim25}ArrayOfVAppOvfSectionSpec
class ArrayOfVAppOvfSectionSpec < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineCdromInfo
class ArrayOfVirtualMachineCdromInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineConfigInfoDatastoreUrlPair
class ArrayOfVirtualMachineConfigInfoDatastoreUrlPair < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineConfigOptionDescriptor
class ArrayOfVirtualMachineConfigOptionDescriptor < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineCpuIdInfoSpec
class ArrayOfVirtualMachineCpuIdInfoSpec < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineDatastoreInfo
class ArrayOfVirtualMachineDatastoreInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineDatastoreVolumeOption
class ArrayOfVirtualMachineDatastoreVolumeOption < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineDeviceRuntimeInfo
class ArrayOfVirtualMachineDeviceRuntimeInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutDiskLayout
class ArrayOfVirtualMachineFileLayoutDiskLayout < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutSnapshotLayout
class ArrayOfVirtualMachineFileLayoutSnapshotLayout < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutExFileInfo
class ArrayOfVirtualMachineFileLayoutExFileInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutExDiskUnit
class ArrayOfVirtualMachineFileLayoutExDiskUnit < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutExDiskLayout
class ArrayOfVirtualMachineFileLayoutExDiskLayout < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFileLayoutExSnapshotLayout
class ArrayOfVirtualMachineFileLayoutExSnapshotLayout < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineFloppyInfo
class ArrayOfVirtualMachineFloppyInfo < ::Array
end

# {urn:vim25}ArrayOfGuestDiskInfo
class ArrayOfGuestDiskInfo < ::Array
end

# {urn:vim25}ArrayOfGuestNicInfo
class ArrayOfGuestNicInfo < ::Array
end

# {urn:vim25}ArrayOfGuestStackInfo
class ArrayOfGuestStackInfo < ::Array
end

# {urn:vim25}ArrayOfGuestOsDescriptor
class ArrayOfGuestOsDescriptor < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineIdeDiskDevicePartitionInfo
class ArrayOfVirtualMachineIdeDiskDevicePartitionInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineIdeDiskDeviceInfo
class ArrayOfVirtualMachineIdeDiskDeviceInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineLegacyNetworkSwitchInfo
class ArrayOfVirtualMachineLegacyNetworkSwitchInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineMessage
class ArrayOfVirtualMachineMessage < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineNetworkInfo
class ArrayOfVirtualMachineNetworkInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineParallelInfo
class ArrayOfVirtualMachineParallelInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachinePciPassthroughInfo
class ArrayOfVirtualMachinePciPassthroughInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineRelocateSpecDiskLocator
class ArrayOfVirtualMachineRelocateSpecDiskLocator < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineScsiDiskDeviceInfo
class ArrayOfVirtualMachineScsiDiskDeviceInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineScsiPassthroughInfo
class ArrayOfVirtualMachineScsiPassthroughInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineSerialInfo
class ArrayOfVirtualMachineSerialInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineSnapshotTree
class ArrayOfVirtualMachineSnapshotTree < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineSoundInfo
class ArrayOfVirtualMachineSoundInfo < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineUsageOnDatastore
class ArrayOfVirtualMachineUsageOnDatastore < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineSummary
class ArrayOfVirtualMachineSummary < ::Array
end

# {urn:vim25}ArrayOfVirtualMachineUsbInfo
class ArrayOfVirtualMachineUsbInfo < ::Array
end

# {urn:vim25}ArrayOfCheckResult
class ArrayOfCheckResult < ::Array
end

# {urn:vim25}ArrayOfCustomizationIpV6Generator
class ArrayOfCustomizationIpV6Generator < ::Array
end

# {urn:vim25}ArrayOfCustomizationAdapterMapping
class ArrayOfCustomizationAdapterMapping < ::Array
end

# {urn:vim25}ArrayOfHostDiskMappingPartitionOption
class ArrayOfHostDiskMappingPartitionOption < ::Array
end

# {urn:vim25}ArrayOfVirtualDevice
class ArrayOfVirtualDevice < ::Array
end

# {urn:vim25}ArrayOfVirtualDeviceBackingOption
class ArrayOfVirtualDeviceBackingOption < ::Array
end

# {urn:vim25}ArrayOfVirtualDeviceOption
class ArrayOfVirtualDeviceOption < ::Array
end

# {urn:vim25}ArrayOfVirtualDeviceConfigSpec
class ArrayOfVirtualDeviceConfigSpec < ::Array
end

# {urn:vim25}ArrayOfVirtualDisk
class ArrayOfVirtualDisk < ::Array
end

# {urn:vim25}ArrayOfVirtualSCSISharing
class ArrayOfVirtualSCSISharing < ::Array
end

# {urn:vim25}ObjectUpdateKind
class ObjectUpdateKind < ::String
  Enter = ObjectUpdateKind.new("enter")
  Leave = ObjectUpdateKind.new("leave")
  Modify = ObjectUpdateKind.new("modify")
end

# {urn:vim25}PropertyChangeOp
class PropertyChangeOp < ::String
  Add = PropertyChangeOp.new("add")
  Assign = PropertyChangeOp.new("assign")
  IndirectRemove = PropertyChangeOp.new("indirectRemove")
  Remove = PropertyChangeOp.new("remove")
end

# {urn:vim25}ConfigSpecOperation
class ConfigSpecOperation < ::String
  Add = ConfigSpecOperation.new("add")
  Edit = ConfigSpecOperation.new("edit")
  Remove = ConfigSpecOperation.new("remove")
end

# {urn:vim25}DatastoreAccessible
class DatastoreAccessible < ::String
  False = DatastoreAccessible.new("False")
  True = DatastoreAccessible.new("True")
end

# {urn:vim25}DiagnosticManagerLogCreator
class DiagnosticManagerLogCreator < ::String
  Hostd = DiagnosticManagerLogCreator.new("hostd")
  Install = DiagnosticManagerLogCreator.new("install")
  RecordLog = DiagnosticManagerLogCreator.new("recordLog")
  Serverd = DiagnosticManagerLogCreator.new("serverd")
  VpxClient = DiagnosticManagerLogCreator.new("vpxClient")
  Vpxa = DiagnosticManagerLogCreator.new("vpxa")
  Vpxd = DiagnosticManagerLogCreator.new("vpxd")
end

# {urn:vim25}DiagnosticManagerLogFormat
class DiagnosticManagerLogFormat < ::String
  Plain = DiagnosticManagerLogFormat.new("plain")
end

# {urn:vim25}DistributedVirtualSwitchProductSpecOperationType
class DistributedVirtualSwitchProductSpecOperationType < ::String
  NotifyAvailableUpgrade = DistributedVirtualSwitchProductSpecOperationType.new("notifyAvailableUpgrade")
  PreInstall = DistributedVirtualSwitchProductSpecOperationType.new("preInstall")
  ProceedWithUpgrade = DistributedVirtualSwitchProductSpecOperationType.new("proceedWithUpgrade")
  UpdateBundleInfo = DistributedVirtualSwitchProductSpecOperationType.new("updateBundleInfo")
  Upgrade = DistributedVirtualSwitchProductSpecOperationType.new("upgrade")
end

# {urn:vim25}DistributedVirtualSwitchNicTeamingPolicyMode
class DistributedVirtualSwitchNicTeamingPolicyMode < ::String
  Failover_explicit = DistributedVirtualSwitchNicTeamingPolicyMode.new("failover_explicit")
  Loadbalance_ip = DistributedVirtualSwitchNicTeamingPolicyMode.new("loadbalance_ip")
  Loadbalance_loadbased = DistributedVirtualSwitchNicTeamingPolicyMode.new("loadbalance_loadbased")
  Loadbalance_srcid = DistributedVirtualSwitchNicTeamingPolicyMode.new("loadbalance_srcid")
  Loadbalance_srcmac = DistributedVirtualSwitchNicTeamingPolicyMode.new("loadbalance_srcmac")
end

# {urn:vim25}HostSystemConnectionState
class HostSystemConnectionState < ::String
  Connected = HostSystemConnectionState.new("connected")
  Disconnected = HostSystemConnectionState.new("disconnected")
  NotResponding = HostSystemConnectionState.new("notResponding")
end

# {urn:vim25}HostSystemPowerState
class HostSystemPowerState < ::String
  PoweredOff = HostSystemPowerState.new("poweredOff")
  PoweredOn = HostSystemPowerState.new("poweredOn")
  StandBy = HostSystemPowerState.new("standBy")
  Unknown = HostSystemPowerState.new("unknown")
end

# {urn:vim25}HostStandbyMode
class HostStandbyMode < ::String
  Entering = HostStandbyMode.new("entering")
  Exiting = HostStandbyMode.new("exiting")
  In = HostStandbyMode.new("in")
  None = HostStandbyMode.new("none")
end

# {urn:vim25}HttpNfcLeaseState
class HttpNfcLeaseState < ::String
  Done = HttpNfcLeaseState.new("done")
  Error = HttpNfcLeaseState.new("error")
  Initializing = HttpNfcLeaseState.new("initializing")
  Ready = HttpNfcLeaseState.new("ready")
end

# {urn:vim25}LicenseManagerState
class LicenseManagerState < ::String
  Fault = LicenseManagerState.new("fault")
  Initializing = LicenseManagerState.new("initializing")
  Marginal = LicenseManagerState.new("marginal")
  Normal = LicenseManagerState.new("normal")
end

# {urn:vim25}LicenseManagerLicenseKey
class LicenseManagerLicenseKey < ::String
  Backup = LicenseManagerLicenseKey.new("backup")
  Das = LicenseManagerLicenseKey.new("das")
  Drs = LicenseManagerLicenseKey.new("drs")
  DrsPower = LicenseManagerLicenseKey.new("drsPower")
  EsxExpress = LicenseManagerLicenseKey.new("esxExpress")
  EsxFull = LicenseManagerLicenseKey.new("esxFull")
  EsxHost = LicenseManagerLicenseKey.new("esxHost")
  EsxVmtn = LicenseManagerLicenseKey.new("esxVmtn")
  GsxHost = LicenseManagerLicenseKey.new("gsxHost")
  Iscsi = LicenseManagerLicenseKey.new("iscsi")
  Nas = LicenseManagerLicenseKey.new("nas")
  San = LicenseManagerLicenseKey.new("san")
  ServerHost = LicenseManagerLicenseKey.new("serverHost")
  Vc = LicenseManagerLicenseKey.new("vc")
  VcExpress = LicenseManagerLicenseKey.new("vcExpress")
  Vmotion = LicenseManagerLicenseKey.new("vmotion")
  Vsmp = LicenseManagerLicenseKey.new("vsmp")
end

# {urn:vim25}LicenseFeatureInfoUnit
class LicenseFeatureInfoUnit < ::String
  CpuCore = LicenseFeatureInfoUnit.new("cpuCore")
  CpuPackage = LicenseFeatureInfoUnit.new("cpuPackage")
  Host = LicenseFeatureInfoUnit.new("host")
  Server = LicenseFeatureInfoUnit.new("server")
  Vm = LicenseFeatureInfoUnit.new("vm")
end

# {urn:vim25}LicenseFeatureInfoState
class LicenseFeatureInfoState < ::String
  Disabled = LicenseFeatureInfoState.new("disabled")
  Enabled = LicenseFeatureInfoState.new("enabled")
  Optional = LicenseFeatureInfoState.new("optional")
end

# {urn:vim25}LicenseFeatureInfoSourceRestriction
class LicenseFeatureInfoSourceRestriction < ::String
  C_File = LicenseFeatureInfoSourceRestriction.new("file")
  Served = LicenseFeatureInfoSourceRestriction.new("served")
  Unrestricted = LicenseFeatureInfoSourceRestriction.new("unrestricted")
end

# {urn:vim25}LicenseReservationInfoState
class LicenseReservationInfoState < ::String
  Licensed = LicenseReservationInfoState.new("licensed")
  NoLicense = LicenseReservationInfoState.new("noLicense")
  NotUsed = LicenseReservationInfoState.new("notUsed")
  UnlicensedUse = LicenseReservationInfoState.new("unlicensedUse")
end

# {urn:vim25}ManagedEntityStatus
class ManagedEntityStatus < ::String
  Gray = ManagedEntityStatus.new("gray")
  Green = ManagedEntityStatus.new("green")
  Red = ManagedEntityStatus.new("red")
  Yellow = ManagedEntityStatus.new("yellow")
end

# {urn:vim25}OvfCreateImportSpecParamsDiskProvisioningType
class OvfCreateImportSpecParamsDiskProvisioningType < ::String
  Flat = OvfCreateImportSpecParamsDiskProvisioningType.new("flat")
  MonolithicFlat = OvfCreateImportSpecParamsDiskProvisioningType.new("monolithicFlat")
  MonolithicSparse = OvfCreateImportSpecParamsDiskProvisioningType.new("monolithicSparse")
  Sparse = OvfCreateImportSpecParamsDiskProvisioningType.new("sparse")
  Thick = OvfCreateImportSpecParamsDiskProvisioningType.new("thick")
  Thin = OvfCreateImportSpecParamsDiskProvisioningType.new("thin")
  TwoGbMaxExtentFlat = OvfCreateImportSpecParamsDiskProvisioningType.new("twoGbMaxExtentFlat")
  TwoGbMaxExtentSparse = OvfCreateImportSpecParamsDiskProvisioningType.new("twoGbMaxExtentSparse")
end

# {urn:vim25}PerfFormat
class PerfFormat < ::String
  Csv = PerfFormat.new("csv")
  Normal = PerfFormat.new("normal")
end

# {urn:vim25}PerfSummaryType
class PerfSummaryType < ::String
  Average = PerfSummaryType.new("average")
  Latest = PerfSummaryType.new("latest")
  Maximum = PerfSummaryType.new("maximum")
  Minimum = PerfSummaryType.new("minimum")
  None = PerfSummaryType.new("none")
  Summation = PerfSummaryType.new("summation")
end

# {urn:vim25}PerfStatsType
class PerfStatsType < ::String
  Absolute = PerfStatsType.new("absolute")
  Delta = PerfStatsType.new("delta")
  Rate = PerfStatsType.new("rate")
end

# {urn:vim25}PerformanceManagerUnit
class PerformanceManagerUnit < ::String
  Joule = PerformanceManagerUnit.new("joule")
  KiloBytes = PerformanceManagerUnit.new("kiloBytes")
  KiloBytesPerSecond = PerformanceManagerUnit.new("kiloBytesPerSecond")
  MegaBytes = PerformanceManagerUnit.new("megaBytes")
  MegaBytesPerSecond = PerformanceManagerUnit.new("megaBytesPerSecond")
  MegaHertz = PerformanceManagerUnit.new("megaHertz")
  Microsecond = PerformanceManagerUnit.new("microsecond")
  Millisecond = PerformanceManagerUnit.new("millisecond")
  Number = PerformanceManagerUnit.new("number")
  Percent = PerformanceManagerUnit.new("percent")
  Second = PerformanceManagerUnit.new("second")
  Watt = PerformanceManagerUnit.new("watt")
end

# {urn:vim25}ValidateMigrationTestType
class ValidateMigrationTestType < ::String
  CompatibilityTests = ValidateMigrationTestType.new("compatibilityTests")
  DiskAccessibilityTests = ValidateMigrationTestType.new("diskAccessibilityTests")
  ResourceTests = ValidateMigrationTestType.new("resourceTests")
  SourceTests = ValidateMigrationTestType.new("sourceTests")
end

# {urn:vim25}VMotionCompatibilityType
class VMotionCompatibilityType < ::String
  Cpu = VMotionCompatibilityType.new("cpu")
  Software = VMotionCompatibilityType.new("software")
end

# {urn:vim25}SharesLevel
class SharesLevel < ::String
  Custom = SharesLevel.new("custom")
  High = SharesLevel.new("high")
  Low = SharesLevel.new("low")
  Normal = SharesLevel.new("normal")
end

# {urn:vim25}TaskFilterSpecRecursionOption
class TaskFilterSpecRecursionOption < ::String
  All = TaskFilterSpecRecursionOption.new("all")
  Children = TaskFilterSpecRecursionOption.new("children")
  Self = TaskFilterSpecRecursionOption.new("self")
end

# {urn:vim25}TaskFilterSpecTimeOption
class TaskFilterSpecTimeOption < ::String
  CompletedTime = TaskFilterSpecTimeOption.new("completedTime")
  QueuedTime = TaskFilterSpecTimeOption.new("queuedTime")
  StartedTime = TaskFilterSpecTimeOption.new("startedTime")
end

# {urn:vim25}TaskInfoState
class TaskInfoState < ::String
  Error = TaskInfoState.new("error")
  Queued = TaskInfoState.new("queued")
  Running = TaskInfoState.new("running")
  Success = TaskInfoState.new("success")
end

# {urn:vim25}VirtualAppVAppState
class VirtualAppVAppState < ::String
  Started = VirtualAppVAppState.new("started")
  Starting = VirtualAppVAppState.new("starting")
  Stopped = VirtualAppVAppState.new("stopped")
  Stopping = VirtualAppVAppState.new("stopping")
end

# {urn:vim25}VirtualDiskType
class VirtualDiskType < ::String
  EagerZeroedThick = VirtualDiskType.new("eagerZeroedThick")
  FlatMonolithic = VirtualDiskType.new("flatMonolithic")
  Preallocated = VirtualDiskType.new("preallocated")
  Raw = VirtualDiskType.new("raw")
  Rdm = VirtualDiskType.new("rdm")
  Rdmp = VirtualDiskType.new("rdmp")
  Sparse2Gb = VirtualDiskType.new("sparse2Gb")
  SparseMonolithic = VirtualDiskType.new("sparseMonolithic")
  Thick = VirtualDiskType.new("thick")
  Thick2Gb = VirtualDiskType.new("thick2Gb")
  Thin = VirtualDiskType.new("thin")
end

# {urn:vim25}VirtualDiskAdapterType
class VirtualDiskAdapterType < ::String
  BusLogic = VirtualDiskAdapterType.new("busLogic")
  Ide = VirtualDiskAdapterType.new("ide")
  LsiLogic = VirtualDiskAdapterType.new("lsiLogic")
end

# {urn:vim25}VirtualMachinePowerState
class VirtualMachinePowerState < ::String
  PoweredOff = VirtualMachinePowerState.new("poweredOff")
  PoweredOn = VirtualMachinePowerState.new("poweredOn")
  Suspended = VirtualMachinePowerState.new("suspended")
end

# {urn:vim25}VirtualMachineAppHeartbeatStatusType
class VirtualMachineAppHeartbeatStatusType < ::String
  AppStatusGray = VirtualMachineAppHeartbeatStatusType.new("appStatusGray")
  AppStatusGreen = VirtualMachineAppHeartbeatStatusType.new("appStatusGreen")
  AppStatusRed = VirtualMachineAppHeartbeatStatusType.new("appStatusRed")
end

# {urn:vim25}VirtualMachineConnectionState
class VirtualMachineConnectionState < ::String
  Connected = VirtualMachineConnectionState.new("connected")
  Disconnected = VirtualMachineConnectionState.new("disconnected")
  Inaccessible = VirtualMachineConnectionState.new("inaccessible")
  Invalid = VirtualMachineConnectionState.new("invalid")
  Orphaned = VirtualMachineConnectionState.new("orphaned")
end

# {urn:vim25}VirtualMachineMovePriority
class VirtualMachineMovePriority < ::String
  DefaultPriority = VirtualMachineMovePriority.new("defaultPriority")
  HighPriority = VirtualMachineMovePriority.new("highPriority")
  LowPriority = VirtualMachineMovePriority.new("lowPriority")
end

# {urn:vim25}VirtualMachineFaultToleranceState
class VirtualMachineFaultToleranceState < ::String
  Disabled = VirtualMachineFaultToleranceState.new("disabled")
  Enabled = VirtualMachineFaultToleranceState.new("enabled")
  NeedSecondary = VirtualMachineFaultToleranceState.new("needSecondary")
  NotConfigured = VirtualMachineFaultToleranceState.new("notConfigured")
  Running = VirtualMachineFaultToleranceState.new("running")
  Starting = VirtualMachineFaultToleranceState.new("starting")
end

# {urn:vim25}VirtualMachineRecordReplayState
class VirtualMachineRecordReplayState < ::String
  Inactive = VirtualMachineRecordReplayState.new("inactive")
  Recording = VirtualMachineRecordReplayState.new("recording")
  Replaying = VirtualMachineRecordReplayState.new("replaying")
end

# {urn:vim25}VirtualMachineNeedSecondaryReason
class VirtualMachineNeedSecondaryReason < ::String
  Divergence = VirtualMachineNeedSecondaryReason.new("divergence")
  Initializing = VirtualMachineNeedSecondaryReason.new("initializing")
  LostConnection = VirtualMachineNeedSecondaryReason.new("lostConnection")
  Other = VirtualMachineNeedSecondaryReason.new("other")
  PartialHardwareFailure = VirtualMachineNeedSecondaryReason.new("partialHardwareFailure")
  UserAction = VirtualMachineNeedSecondaryReason.new("userAction")
end

# {urn:vim25}VirtualMachineTicketType
class VirtualMachineTicketType < ::String
  Device = VirtualMachineTicketType.new("device")
  GuestControl = VirtualMachineTicketType.new("guestControl")
  Mks = VirtualMachineTicketType.new("mks")
end

# {urn:vim25}ActionParameter
class ActionParameter < ::String
  Alarm = ActionParameter.new("alarm")
  AlarmName = ActionParameter.new("alarmName")
  DeclaringSummary = ActionParameter.new("declaringSummary")
  EventDescription = ActionParameter.new("eventDescription")
  NewStatus = ActionParameter.new("newStatus")
  OldStatus = ActionParameter.new("oldStatus")
  Target = ActionParameter.new("target")
  TargetName = ActionParameter.new("targetName")
  TriggeringSummary = ActionParameter.new("triggeringSummary")
end

# {urn:vim25}StateAlarmOperator
class StateAlarmOperator < ::String
  IsEqual = StateAlarmOperator.new("isEqual")
  IsUnequal = StateAlarmOperator.new("isUnequal")
end

# {urn:vim25}EventAlarmExpressionComparisonOperator
class EventAlarmExpressionComparisonOperator < ::String
  DoesNotEndWith = EventAlarmExpressionComparisonOperator.new("doesNotEndWith")
  DoesNotStartWith = EventAlarmExpressionComparisonOperator.new("doesNotStartWith")
  EndsWith = EventAlarmExpressionComparisonOperator.new("endsWith")
  Equals = EventAlarmExpressionComparisonOperator.new("equals")
  NotEqualTo = EventAlarmExpressionComparisonOperator.new("notEqualTo")
  StartsWith = EventAlarmExpressionComparisonOperator.new("startsWith")
end

# {urn:vim25}MetricAlarmOperator
class MetricAlarmOperator < ::String
  IsAbove = MetricAlarmOperator.new("isAbove")
  IsBelow = MetricAlarmOperator.new("isBelow")
end

# {urn:vim25}ActionType
class ActionType < ::String
  HostPowerV1 = ActionType.new("HostPowerV1")
  MigrationV1 = ActionType.new("MigrationV1")
  VmPowerV1 = ActionType.new("VmPowerV1")
end

# {urn:vim25}DrsBehavior
class DrsBehavior < ::String
  FullyAutomated = DrsBehavior.new("fullyAutomated")
  Manual = DrsBehavior.new("manual")
  PartiallyAutomated = DrsBehavior.new("partiallyAutomated")
end

# {urn:vim25}DpmBehavior
class DpmBehavior < ::String
  Automated = DpmBehavior.new("automated")
  Manual = DpmBehavior.new("manual")
end

# {urn:vim25}ClusterDasAamNodeStateDasState
class ClusterDasAamNodeStateDasState < ::String
  AgentShutdown = ClusterDasAamNodeStateDasState.new("agentShutdown")
  Configuring = ClusterDasAamNodeStateDasState.new("configuring")
  Error = ClusterDasAamNodeStateDasState.new("error")
  Initialized = ClusterDasAamNodeStateDasState.new("initialized")
  NodeFailed = ClusterDasAamNodeStateDasState.new("nodeFailed")
  Running = ClusterDasAamNodeStateDasState.new("running")
  Unconfiguring = ClusterDasAamNodeStateDasState.new("unconfiguring")
  Uninitialized = ClusterDasAamNodeStateDasState.new("uninitialized")
end

# {urn:vim25}ClusterDasConfigInfoServiceState
class ClusterDasConfigInfoServiceState < ::String
  Disabled = ClusterDasConfigInfoServiceState.new("disabled")
  Enabled = ClusterDasConfigInfoServiceState.new("enabled")
end

# {urn:vim25}ClusterDasConfigInfoVmMonitoringState
class ClusterDasConfigInfoVmMonitoringState < ::String
  VmAndAppMonitoring = ClusterDasConfigInfoVmMonitoringState.new("vmAndAppMonitoring")
  VmMonitoringDisabled = ClusterDasConfigInfoVmMonitoringState.new("vmMonitoringDisabled")
  VmMonitoringOnly = ClusterDasConfigInfoVmMonitoringState.new("vmMonitoringOnly")
end

# {urn:vim25}DasVmPriority
class DasVmPriority < ::String
  Disabled = DasVmPriority.new("disabled")
  High = DasVmPriority.new("high")
  Low = DasVmPriority.new("low")
  Medium = DasVmPriority.new("medium")
end

# {urn:vim25}ClusterDasVmSettingsRestartPriority
class ClusterDasVmSettingsRestartPriority < ::String
  ClusterRestartPriority = ClusterDasVmSettingsRestartPriority.new("clusterRestartPriority")
  Disabled = ClusterDasVmSettingsRestartPriority.new("disabled")
  High = ClusterDasVmSettingsRestartPriority.new("high")
  Low = ClusterDasVmSettingsRestartPriority.new("low")
  Medium = ClusterDasVmSettingsRestartPriority.new("medium")
end

# {urn:vim25}ClusterDasVmSettingsIsolationResponse
class ClusterDasVmSettingsIsolationResponse < ::String
  ClusterIsolationResponse = ClusterDasVmSettingsIsolationResponse.new("clusterIsolationResponse")
  None = ClusterDasVmSettingsIsolationResponse.new("none")
  PowerOff = ClusterDasVmSettingsIsolationResponse.new("powerOff")
  Shutdown = ClusterDasVmSettingsIsolationResponse.new("shutdown")
end

# {urn:vim25}DrsRecommendationReasonCode
class DrsRecommendationReasonCode < ::String
  AntiAffin = DrsRecommendationReasonCode.new("antiAffin")
  FairnessCpuAvg = DrsRecommendationReasonCode.new("fairnessCpuAvg")
  FairnessMemAvg = DrsRecommendationReasonCode.new("fairnessMemAvg")
  HostMaint = DrsRecommendationReasonCode.new("hostMaint")
  JointAffin = DrsRecommendationReasonCode.new("jointAffin")
end

# {urn:vim25}HostPowerOperationType
class HostPowerOperationType < ::String
  PowerOff = HostPowerOperationType.new("powerOff")
  PowerOn = HostPowerOperationType.new("powerOn")
end

# {urn:vim25}ClusterPowerOnVmOption
class ClusterPowerOnVmOption < ::String
  OverrideAutomationLevel = ClusterPowerOnVmOption.new("OverrideAutomationLevel")
  ReserveResources = ClusterPowerOnVmOption.new("ReserveResources")
end

# {urn:vim25}RecommendationType
class RecommendationType < ::String
  V1 = RecommendationType.new("V1")
end

# {urn:vim25}RecommendationReasonCode
class RecommendationReasonCode < ::String
  AntiAffin = RecommendationReasonCode.new("antiAffin")
  CheckResource = RecommendationReasonCode.new("checkResource")
  EnterStandby = RecommendationReasonCode.new("enterStandby")
  FairnessCpuAvg = RecommendationReasonCode.new("fairnessCpuAvg")
  FairnessMemAvg = RecommendationReasonCode.new("fairnessMemAvg")
  HostMaint = RecommendationReasonCode.new("hostMaint")
  IncreaseCapacity = RecommendationReasonCode.new("increaseCapacity")
  JointAffin = RecommendationReasonCode.new("jointAffin")
  PowerOnVm = RecommendationReasonCode.new("powerOnVm")
  PowerSaving = RecommendationReasonCode.new("powerSaving")
  ReservationCpu = RecommendationReasonCode.new("reservationCpu")
  ReservationMem = RecommendationReasonCode.new("reservationMem")
  UnreservedCapacity = RecommendationReasonCode.new("unreservedCapacity")
  VmHostHardAffinity = RecommendationReasonCode.new("vmHostHardAffinity")
  VmHostSoftAffinity = RecommendationReasonCode.new("vmHostSoftAffinity")
end

# {urn:vim25}DVPortStatusVmDirectPathGen2InactiveReasonNetwork
class DVPortStatusVmDirectPathGen2InactiveReasonNetwork < ::String
  PortNptDisabledForPort = DVPortStatusVmDirectPathGen2InactiveReasonNetwork.new("portNptDisabledForPort")
  PortNptIncompatibleDvs = DVPortStatusVmDirectPathGen2InactiveReasonNetwork.new("portNptIncompatibleDvs")
  PortNptNoCompatibleNics = DVPortStatusVmDirectPathGen2InactiveReasonNetwork.new("portNptNoCompatibleNics")
  PortNptNoVirtualFunctionsAvailable = DVPortStatusVmDirectPathGen2InactiveReasonNetwork.new("portNptNoVirtualFunctionsAvailable")
end

# {urn:vim25}DVPortStatusVmDirectPathGen2InactiveReasonOther
class DVPortStatusVmDirectPathGen2InactiveReasonOther < ::String
  PortNptIncompatibleConnectee = DVPortStatusVmDirectPathGen2InactiveReasonOther.new("portNptIncompatibleConnectee")
  PortNptIncompatibleHost = DVPortStatusVmDirectPathGen2InactiveReasonOther.new("portNptIncompatibleHost")
end

# {urn:vim25}DistributedVirtualPortgroupPortgroupType
class DistributedVirtualPortgroupPortgroupType < ::String
  EarlyBinding = DistributedVirtualPortgroupPortgroupType.new("earlyBinding")
  Ephemeral = DistributedVirtualPortgroupPortgroupType.new("ephemeral")
  LateBinding = DistributedVirtualPortgroupPortgroupType.new("lateBinding")
end

# {urn:vim25}DistributedVirtualPortgroupMetaTagName
class DistributedVirtualPortgroupMetaTagName < ::String
  DvsName = DistributedVirtualPortgroupMetaTagName.new("dvsName")
  PortIndex = DistributedVirtualPortgroupMetaTagName.new("portIndex")
  PortgroupName = DistributedVirtualPortgroupMetaTagName.new("portgroupName")
end

# {urn:vim25}HostDistributedVirtualSwitchManagerNetworkResourcePoolKey
class HostDistributedVirtualSwitchManagerNetworkResourcePoolKey < ::String
  FaultTolerance = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("faultTolerance")
  ISCSI = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("iSCSI")
  Management = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("management")
  Nfs = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("nfs")
  VirtualMachine = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("virtualMachine")
  Vmotion = HostDistributedVirtualSwitchManagerNetworkResourcePoolKey.new("vmotion")
end

# {urn:vim25}DistributedVirtualSwitchHostMemberHostComponentState
class DistributedVirtualSwitchHostMemberHostComponentState < ::String
  Disconnected = DistributedVirtualSwitchHostMemberHostComponentState.new("disconnected")
  Down = DistributedVirtualSwitchHostMemberHostComponentState.new("down")
  OutOfSync = DistributedVirtualSwitchHostMemberHostComponentState.new("outOfSync")
  Pending = DistributedVirtualSwitchHostMemberHostComponentState.new("pending")
  Up = DistributedVirtualSwitchHostMemberHostComponentState.new("up")
  Warning = DistributedVirtualSwitchHostMemberHostComponentState.new("warning")
end

# {urn:vim25}DistributedVirtualSwitchPortConnecteeConnecteeType
class DistributedVirtualSwitchPortConnecteeConnecteeType < ::String
  HostConsoleVnic = DistributedVirtualSwitchPortConnecteeConnecteeType.new("hostConsoleVnic")
  HostVmkVnic = DistributedVirtualSwitchPortConnecteeConnecteeType.new("hostVmkVnic")
  Pnic = DistributedVirtualSwitchPortConnecteeConnecteeType.new("pnic")
  VmVnic = DistributedVirtualSwitchPortConnecteeConnecteeType.new("vmVnic")
end

# {urn:vim25}VmwareDistributedVirtualSwitchPvlanPortType
class VmwareDistributedVirtualSwitchPvlanPortType < ::String
  Community = VmwareDistributedVirtualSwitchPvlanPortType.new("community")
  Isolated = VmwareDistributedVirtualSwitchPvlanPortType.new("isolated")
  Promiscuous = VmwareDistributedVirtualSwitchPvlanPortType.new("promiscuous")
end

# {urn:vim25}EventEventSeverity
class EventEventSeverity < ::String
  Error = EventEventSeverity.new("error")
  Info = EventEventSeverity.new("info")
  User = EventEventSeverity.new("user")
  Warning = EventEventSeverity.new("warning")
end

# {urn:vim25}HostDisconnectedEventReasonCode
class HostDisconnectedEventReasonCode < ::String
  AgentOutOfDate = HostDisconnectedEventReasonCode.new("agentOutOfDate")
  AgentUpgrade = HostDisconnectedEventReasonCode.new("agentUpgrade")
  InsufficientLicenses = HostDisconnectedEventReasonCode.new("insufficientLicenses")
  LicenseExpired = HostDisconnectedEventReasonCode.new("licenseExpired")
  PasswordDecryptFailure = HostDisconnectedEventReasonCode.new("passwordDecryptFailure")
  SslThumbprintVerifyFailed = HostDisconnectedEventReasonCode.new("sslThumbprintVerifyFailed")
  Unknown = HostDisconnectedEventReasonCode.new("unknown")
  UserRequest = HostDisconnectedEventReasonCode.new("userRequest")
end

# {urn:vim25}HostDasErrorEventHostDasErrorReason
class HostDasErrorEventHostDasErrorReason < ::String
  AgentFailed = HostDasErrorEventHostDasErrorReason.new("agentFailed")
  AgentShutdown = HostDasErrorEventHostDasErrorReason.new("agentShutdown")
  CommunicationInitFailed = HostDasErrorEventHostDasErrorReason.new("communicationInitFailed")
  ConfigFailed = HostDasErrorEventHostDasErrorReason.new("configFailed")
  HealthCheckScriptFailed = HostDasErrorEventHostDasErrorReason.new("healthCheckScriptFailed")
  IsolationAddressUnpingable = HostDasErrorEventHostDasErrorReason.new("isolationAddressUnpingable")
  Other = HostDasErrorEventHostDasErrorReason.new("other")
  Timeout = HostDasErrorEventHostDasErrorReason.new("timeout")
end

# {urn:vim25}VmShutdownOnIsolationEventOperation
class VmShutdownOnIsolationEventOperation < ::String
  PoweredOff = VmShutdownOnIsolationEventOperation.new("poweredOff")
  Shutdown = VmShutdownOnIsolationEventOperation.new("shutdown")
end

# {urn:vim25}VmDasBeingResetEventReasonCode
class VmDasBeingResetEventReasonCode < ::String
  AppHeartbeatFailure = VmDasBeingResetEventReasonCode.new("appHeartbeatFailure")
  VmtoolsHeartbeatFailure = VmDasBeingResetEventReasonCode.new("vmtoolsHeartbeatFailure")
end

# {urn:vim25}VmFailedStartingSecondaryEventFailureReason
class VmFailedStartingSecondaryEventFailureReason < ::String
  IncompatibleHost = VmFailedStartingSecondaryEventFailureReason.new("incompatibleHost")
  LoginFailed = VmFailedStartingSecondaryEventFailureReason.new("loginFailed")
  MigrateFailed = VmFailedStartingSecondaryEventFailureReason.new("migrateFailed")
  RegisterVmFailed = VmFailedStartingSecondaryEventFailureReason.new("registerVmFailed")
end

# {urn:vim25}EventCategory
class EventCategory < ::String
  Error = EventCategory.new("error")
  Info = EventCategory.new("info")
  User = EventCategory.new("user")
  Warning = EventCategory.new("warning")
end

# {urn:vim25}EventFilterSpecRecursionOption
class EventFilterSpecRecursionOption < ::String
  All = EventFilterSpecRecursionOption.new("all")
  Children = EventFilterSpecRecursionOption.new("children")
  Self = EventFilterSpecRecursionOption.new("self")
end

# {urn:vim25}AffinityType
class AffinityType < ::String
  Cpu = AffinityType.new("cpu")
  Memory = AffinityType.new("memory")
end

# {urn:vim25}AgentInstallFailedReason
class AgentInstallFailedReason < ::String
  AgentNotReachable = AgentInstallFailedReason.new("AgentNotReachable")
  AgentNotRunning = AgentInstallFailedReason.new("AgentNotRunning")
  AgentUploadFailed = AgentInstallFailedReason.new("AgentUploadFailed")
  AgentUploadTimedout = AgentInstallFailedReason.new("AgentUploadTimedout")
  InstallTimedout = AgentInstallFailedReason.new("InstallTimedout")
  NotEnoughSpaceOnDevice = AgentInstallFailedReason.new("NotEnoughSpaceOnDevice")
  PrepareToUpgradeFailed = AgentInstallFailedReason.new("PrepareToUpgradeFailed")
  SignatureVerificationFailed = AgentInstallFailedReason.new("SignatureVerificationFailed")
  UnknownInstallerError = AgentInstallFailedReason.new("UnknownInstallerError")
end

# {urn:vim25}CannotMoveFaultToleranceVmMoveType
class CannotMoveFaultToleranceVmMoveType < ::String
  Cluster = CannotMoveFaultToleranceVmMoveType.new("cluster")
  ResourcePool = CannotMoveFaultToleranceVmMoveType.new("resourcePool")
end

# {urn:vim25}DasConfigFaultDasConfigFaultReason
class DasConfigFaultDasConfigFaultReason < ::String
  HostMisconfiguration = DasConfigFaultDasConfigFaultReason.new("HostMisconfiguration")
  HostNetworkMisconfiguration = DasConfigFaultDasConfigFaultReason.new("HostNetworkMisconfiguration")
  InsufficientPrivileges = DasConfigFaultDasConfigFaultReason.new("InsufficientPrivileges")
  NoPrimaryAgentAvailable = DasConfigFaultDasConfigFaultReason.new("NoPrimaryAgentAvailable")
  Other = DasConfigFaultDasConfigFaultReason.new("Other")
end

# {urn:vim25}DeviceNotSupportedReason
class DeviceNotSupportedReason < ::String
  Guest = DeviceNotSupportedReason.new("guest")
  Host = DeviceNotSupportedReason.new("host")
end

# {urn:vim25}FtIssuesOnHostHostSelectionType
class FtIssuesOnHostHostSelectionType < ::String
  Drs = FtIssuesOnHostHostSelectionType.new("drs")
  User = FtIssuesOnHostHostSelectionType.new("user")
  Vc = FtIssuesOnHostHostSelectionType.new("vc")
end

# {urn:vim25}HostIncompatibleForFaultToleranceReason
class HostIncompatibleForFaultToleranceReason < ::String
  Processor = HostIncompatibleForFaultToleranceReason.new("processor")
  Product = HostIncompatibleForFaultToleranceReason.new("product")
end

# {urn:vim25}HostIncompatibleForRecordReplayReason
class HostIncompatibleForRecordReplayReason < ::String
  Processor = HostIncompatibleForRecordReplayReason.new("processor")
  Product = HostIncompatibleForRecordReplayReason.new("product")
end

# {urn:vim25}LicenseAssignmentFailedReason
class LicenseAssignmentFailedReason < ::String
  DowngradeDisallowed = LicenseAssignmentFailedReason.new("downgradeDisallowed")
  HostsUnmanageableByVirtualCenterWithoutLicenseServer = LicenseAssignmentFailedReason.new("hostsUnmanageableByVirtualCenterWithoutLicenseServer")
  InventoryNotManageableByVirtualCenter = LicenseAssignmentFailedReason.new("inventoryNotManageableByVirtualCenter")
  KeyEntityMismatch = LicenseAssignmentFailedReason.new("keyEntityMismatch")
end

# {urn:vim25}NotSupportedDeviceForFTDeviceType
class NotSupportedDeviceForFTDeviceType < ::String
  ParaVirtualSCSIController = NotSupportedDeviceForFTDeviceType.new("paraVirtualSCSIController")
  VirtualVmxnet3 = NotSupportedDeviceForFTDeviceType.new("virtualVmxnet3")
end

# {urn:vim25}NumVirtualCpusIncompatibleReason
class NumVirtualCpusIncompatibleReason < ::String
  FaultTolerance = NumVirtualCpusIncompatibleReason.new("faultTolerance")
  RecordReplay = NumVirtualCpusIncompatibleReason.new("recordReplay")
end

# {urn:vim25}VmFaultToleranceConfigIssueReasonForIssue
class VmFaultToleranceConfigIssueReasonForIssue < ::String
  FtSecondaryVm = VmFaultToleranceConfigIssueReasonForIssue.new("ftSecondaryVm")
  FtUnsupportedHardware = VmFaultToleranceConfigIssueReasonForIssue.new("ftUnsupportedHardware")
  FtUnsupportedProduct = VmFaultToleranceConfigIssueReasonForIssue.new("ftUnsupportedProduct")
  HaNotEnabled = VmFaultToleranceConfigIssueReasonForIssue.new("haNotEnabled")
  HasLocalDisk = VmFaultToleranceConfigIssueReasonForIssue.new("hasLocalDisk")
  HasSnapshots = VmFaultToleranceConfigIssueReasonForIssue.new("hasSnapshots")
  HostInactive = VmFaultToleranceConfigIssueReasonForIssue.new("hostInactive")
  MissingFTLoggingNic = VmFaultToleranceConfigIssueReasonForIssue.new("missingFTLoggingNic")
  MissingVMotionNic = VmFaultToleranceConfigIssueReasonForIssue.new("missingVMotionNic")
  MoreThanOneSecondary = VmFaultToleranceConfigIssueReasonForIssue.new("moreThanOneSecondary")
  MultipleVCPU = VmFaultToleranceConfigIssueReasonForIssue.new("multipleVCPU")
  NoConfig = VmFaultToleranceConfigIssueReasonForIssue.new("noConfig")
  RecordReplayNotSupported = VmFaultToleranceConfigIssueReasonForIssue.new("recordReplayNotSupported")
  ReplayNotSupported = VmFaultToleranceConfigIssueReasonForIssue.new("replayNotSupported")
  TemplateVm = VmFaultToleranceConfigIssueReasonForIssue.new("templateVm")
  ThinDisk = VmFaultToleranceConfigIssueReasonForIssue.new("thinDisk")
  VerifySSLCertificateFlagNotSet = VmFaultToleranceConfigIssueReasonForIssue.new("verifySSLCertificateFlagNotSet")
end

# {urn:vim25}VmFaultToleranceInvalidFileBackingDeviceType
class VmFaultToleranceInvalidFileBackingDeviceType < ::String
  VirtualCdrom = VmFaultToleranceInvalidFileBackingDeviceType.new("virtualCdrom")
  VirtualDisk = VmFaultToleranceInvalidFileBackingDeviceType.new("virtualDisk")
  VirtualFloppy = VmFaultToleranceInvalidFileBackingDeviceType.new("virtualFloppy")
  VirtualParallelPort = VmFaultToleranceInvalidFileBackingDeviceType.new("virtualParallelPort")
  VirtualSerialPort = VmFaultToleranceInvalidFileBackingDeviceType.new("virtualSerialPort")
end

# {urn:vim25}HostActiveDirectoryInfoDomainMembershipStatus
class HostActiveDirectoryInfoDomainMembershipStatus < ::String
  ClientTrustBroken = HostActiveDirectoryInfoDomainMembershipStatus.new("clientTrustBroken")
  InconsistentTrust = HostActiveDirectoryInfoDomainMembershipStatus.new("inconsistentTrust")
  NoServers = HostActiveDirectoryInfoDomainMembershipStatus.new("noServers")
  Ok = HostActiveDirectoryInfoDomainMembershipStatus.new("ok")
  OtherProblem = HostActiveDirectoryInfoDomainMembershipStatus.new("otherProblem")
  ServerTrustBroken = HostActiveDirectoryInfoDomainMembershipStatus.new("serverTrustBroken")
  Unknown = HostActiveDirectoryInfoDomainMembershipStatus.new("unknown")
end

# {urn:vim25}AutoStartAction
class AutoStartAction < ::String
  GuestShutdown = AutoStartAction.new("guestShutdown")
  None = AutoStartAction.new("none")
  PowerOff = AutoStartAction.new("powerOff")
  PowerOn = AutoStartAction.new("powerOn")
  Suspend = AutoStartAction.new("suspend")
  SystemDefault = AutoStartAction.new("systemDefault")
end

# {urn:vim25}AutoStartWaitHeartbeatSetting
class AutoStartWaitHeartbeatSetting < ::String
  No = AutoStartWaitHeartbeatSetting.new("no")
  SystemDefault = AutoStartWaitHeartbeatSetting.new("systemDefault")
  Yes = AutoStartWaitHeartbeatSetting.new("yes")
end

# {urn:vim25}HostReplayUnsupportedReason
class HostReplayUnsupportedReason < ::String
  CpuidLimitSet = HostReplayUnsupportedReason.new("cpuidLimitSet")
  HvDisabled = HostReplayUnsupportedReason.new("hvDisabled")
  IncompatibleCpu = HostReplayUnsupportedReason.new("incompatibleCpu")
  IncompatibleProduct = HostReplayUnsupportedReason.new("incompatibleProduct")
  OldBIOS = HostReplayUnsupportedReason.new("oldBIOS")
  Unknown = HostReplayUnsupportedReason.new("unknown")
end

# {urn:vim25}HostCapabilityFtUnsupportedReason
class HostCapabilityFtUnsupportedReason < ::String
  FtNotLicensed = HostCapabilityFtUnsupportedReason.new("ftNotLicensed")
  HaAgentIssue = HostCapabilityFtUnsupportedReason.new("haAgentIssue")
  MissingFTLoggingNic = HostCapabilityFtUnsupportedReason.new("missingFTLoggingNic")
  MissingVMotionNic = HostCapabilityFtUnsupportedReason.new("missingVMotionNic")
  VMotionNotLicensed = HostCapabilityFtUnsupportedReason.new("vMotionNotLicensed")
end

# {urn:vim25}HostCapabilityVmDirectPathGen2UnsupportedReason
class HostCapabilityVmDirectPathGen2UnsupportedReason < ::String
  HostNptDisabled = HostCapabilityVmDirectPathGen2UnsupportedReason.new("hostNptDisabled")
  HostNptIncompatibleHardware = HostCapabilityVmDirectPathGen2UnsupportedReason.new("hostNptIncompatibleHardware")
  HostNptIncompatibleProduct = HostCapabilityVmDirectPathGen2UnsupportedReason.new("hostNptIncompatibleProduct")
end

# {urn:vim25}HostConfigChangeMode
class HostConfigChangeMode < ::String
  Modify = HostConfigChangeMode.new("modify")
  Replace = HostConfigChangeMode.new("replace")
end

# {urn:vim25}HostConfigChangeOperation
class HostConfigChangeOperation < ::String
  Add = HostConfigChangeOperation.new("add")
  Edit = HostConfigChangeOperation.new("edit")
  Remove = HostConfigChangeOperation.new("remove")
end

# {urn:vim25}DiagnosticPartitionStorageType
class DiagnosticPartitionStorageType < ::String
  DirectAttached = DiagnosticPartitionStorageType.new("directAttached")
  NetworkAttached = DiagnosticPartitionStorageType.new("networkAttached")
end

# {urn:vim25}DiagnosticPartitionType
class DiagnosticPartitionType < ::String
  MultiHost = DiagnosticPartitionType.new("multiHost")
  SingleHost = DiagnosticPartitionType.new("singleHost")
end

# {urn:vim25}HostDiskPartitionInfoType
class HostDiskPartitionInfoType < ::String
  Extended = HostDiskPartitionInfoType.new("extended")
  LinuxNative = HostDiskPartitionInfoType.new("linuxNative")
  LinuxSwap = HostDiskPartitionInfoType.new("linuxSwap")
  None = HostDiskPartitionInfoType.new("none")
  Ntfs = HostDiskPartitionInfoType.new("ntfs")
  Vmfs = HostDiskPartitionInfoType.new("vmfs")
  VmkDiagnostic = HostDiskPartitionInfoType.new("vmkDiagnostic")
end

# {urn:vim25}HostFeatureVersionKey
class HostFeatureVersionKey < ::String
  FaultTolerance = HostFeatureVersionKey.new("faultTolerance")
end

# {urn:vim25}FileSystemMountInfoVStorageSupportStatus
class FileSystemMountInfoVStorageSupportStatus < ::String
  VStorageSupported = FileSystemMountInfoVStorageSupportStatus.new("vStorageSupported")
  VStorageUnknown = FileSystemMountInfoVStorageSupportStatus.new("vStorageUnknown")
  VStorageUnsupported = FileSystemMountInfoVStorageSupportStatus.new("vStorageUnsupported")
end

# {urn:vim25}HostCpuPowerManagementInfoPolicyType
class HostCpuPowerManagementInfoPolicyType < ::String
  DynamicPolicy = HostCpuPowerManagementInfoPolicyType.new("dynamicPolicy")
  Off = HostCpuPowerManagementInfoPolicyType.new("off")
  StaticPolicy = HostCpuPowerManagementInfoPolicyType.new("staticPolicy")
end

# {urn:vim25}HostCpuPackageVendor
class HostCpuPackageVendor < ::String
  Amd = HostCpuPackageVendor.new("amd")
  Intel = HostCpuPackageVendor.new("intel")
  Unknown = HostCpuPackageVendor.new("unknown")
end

# {urn:vim25}HostHardwareElementStatus
class HostHardwareElementStatus < ::String
  Green = HostHardwareElementStatus.new("Green")
  Red = HostHardwareElementStatus.new("Red")
  Unknown = HostHardwareElementStatus.new("Unknown")
  Yellow = HostHardwareElementStatus.new("Yellow")
end

# {urn:vim25}FibreChannelPortType
class FibreChannelPortType < ::String
  Fabric = FibreChannelPortType.new("fabric")
  Loop = FibreChannelPortType.new("loop")
  PointToPoint = FibreChannelPortType.new("pointToPoint")
  Unknown = FibreChannelPortType.new("unknown")
end

# {urn:vim25}InternetScsiSnsDiscoveryMethod
class InternetScsiSnsDiscoveryMethod < ::String
  IsnsDhcp = InternetScsiSnsDiscoveryMethod.new("isnsDhcp")
  IsnsSlp = InternetScsiSnsDiscoveryMethod.new("isnsSlp")
  IsnsStatic = InternetScsiSnsDiscoveryMethod.new("isnsStatic")
end

# {urn:vim25}SlpDiscoveryMethod
class SlpDiscoveryMethod < ::String
  SlpAutoMulticast = SlpDiscoveryMethod.new("slpAutoMulticast")
  SlpAutoUnicast = SlpDiscoveryMethod.new("slpAutoUnicast")
  SlpDhcp = SlpDiscoveryMethod.new("slpDhcp")
  SlpManual = SlpDiscoveryMethod.new("slpManual")
end

# {urn:vim25}HostInternetScsiHbaChapAuthenticationType
class HostInternetScsiHbaChapAuthenticationType < ::String
  ChapDiscouraged = HostInternetScsiHbaChapAuthenticationType.new("chapDiscouraged")
  ChapPreferred = HostInternetScsiHbaChapAuthenticationType.new("chapPreferred")
  ChapProhibited = HostInternetScsiHbaChapAuthenticationType.new("chapProhibited")
  ChapRequired = HostInternetScsiHbaChapAuthenticationType.new("chapRequired")
end

# {urn:vim25}HostInternetScsiHbaDigestType
class HostInternetScsiHbaDigestType < ::String
  DigestDiscouraged = HostInternetScsiHbaDigestType.new("digestDiscouraged")
  DigestPreferred = HostInternetScsiHbaDigestType.new("digestPreferred")
  DigestProhibited = HostInternetScsiHbaDigestType.new("digestProhibited")
  DigestRequired = HostInternetScsiHbaDigestType.new("digestRequired")
end

# {urn:vim25}HostIpConfigIpV6AddressConfigType
class HostIpConfigIpV6AddressConfigType < ::String
  Dhcp = HostIpConfigIpV6AddressConfigType.new("dhcp")
  Linklayer = HostIpConfigIpV6AddressConfigType.new("linklayer")
  Manual = HostIpConfigIpV6AddressConfigType.new("manual")
  Other = HostIpConfigIpV6AddressConfigType.new("other")
  Random = HostIpConfigIpV6AddressConfigType.new("random")
end

# {urn:vim25}HostIpConfigIpV6AddressStatus
class HostIpConfigIpV6AddressStatus < ::String
  Deprecated = HostIpConfigIpV6AddressStatus.new("deprecated")
  Duplicate = HostIpConfigIpV6AddressStatus.new("duplicate")
  Inaccessible = HostIpConfigIpV6AddressStatus.new("inaccessible")
  Invalid = HostIpConfigIpV6AddressStatus.new("invalid")
  Preferred = HostIpConfigIpV6AddressStatus.new("preferred")
  Tentative = HostIpConfigIpV6AddressStatus.new("tentative")
  Unknown = HostIpConfigIpV6AddressStatus.new("unknown")
end

# {urn:vim25}LinkDiscoveryProtocolConfigProtocolType
class LinkDiscoveryProtocolConfigProtocolType < ::String
  Cdp = LinkDiscoveryProtocolConfigProtocolType.new("cdp")
  Lldp = LinkDiscoveryProtocolConfigProtocolType.new("lldp")
end

# {urn:vim25}LinkDiscoveryProtocolConfigOperationType
class LinkDiscoveryProtocolConfigOperationType < ::String
  Advertise = LinkDiscoveryProtocolConfigOperationType.new("advertise")
  Both = LinkDiscoveryProtocolConfigOperationType.new("both")
  Listen = LinkDiscoveryProtocolConfigOperationType.new("listen")
  None = LinkDiscoveryProtocolConfigOperationType.new("none")
end

# {urn:vim25}HostLowLevelProvisioningManagerReloadTarget
class HostLowLevelProvisioningManagerReloadTarget < ::String
  CurrentConfig = HostLowLevelProvisioningManagerReloadTarget.new("currentConfig")
  SnapshotConfig = HostLowLevelProvisioningManagerReloadTarget.new("snapshotConfig")
end

# {urn:vim25}VirtualMachineMemoryAllocationPolicy
class VirtualMachineMemoryAllocationPolicy < ::String
  SwapMost = VirtualMachineMemoryAllocationPolicy.new("swapMost")
  SwapNone = VirtualMachineMemoryAllocationPolicy.new("swapNone")
  SwapSome = VirtualMachineMemoryAllocationPolicy.new("swapSome")
end

# {urn:vim25}HostMountMode
class HostMountMode < ::String
  ReadOnly = HostMountMode.new("readOnly")
  ReadWrite = HostMountMode.new("readWrite")
end

# {urn:vim25}MultipathState
class MultipathState < ::String
  Active = MultipathState.new("active")
  Dead = MultipathState.new("dead")
  Disabled = MultipathState.new("disabled")
  Standby = MultipathState.new("standby")
  Unknown = MultipathState.new("unknown")
end

# {urn:vim25}HostNumericSensorHealthState
class HostNumericSensorHealthState < ::String
  Green = HostNumericSensorHealthState.new("green")
  Red = HostNumericSensorHealthState.new("red")
  Unknown = HostNumericSensorHealthState.new("unknown")
  Yellow = HostNumericSensorHealthState.new("yellow")
end

# {urn:vim25}HostNumericSensorType
class HostNumericSensorType < ::String
  Fan = HostNumericSensorType.new("fan")
  Other = HostNumericSensorType.new("other")
  Power = HostNumericSensorType.new("power")
  Temperature = HostNumericSensorType.new("temperature")
  Voltage = HostNumericSensorType.new("voltage")
end

# {urn:vim25}HostPatchManagerReason
class HostPatchManagerReason < ::String
  ConflictLib = HostPatchManagerReason.new("conflictLib")
  ConflictPatch = HostPatchManagerReason.new("conflictPatch")
  HasDependentPatch = HostPatchManagerReason.new("hasDependentPatch")
  MissingLib = HostPatchManagerReason.new("missingLib")
  MissingPatch = HostPatchManagerReason.new("missingPatch")
  Obsoleted = HostPatchManagerReason.new("obsoleted")
end

# {urn:vim25}HostPatchManagerIntegrityStatus
class HostPatchManagerIntegrityStatus < ::String
  DigestMismatch = HostPatchManagerIntegrityStatus.new("digestMismatch")
  KeyExpired = HostPatchManagerIntegrityStatus.new("keyExpired")
  KeyNotFound = HostPatchManagerIntegrityStatus.new("keyNotFound")
  KeyRevoked = HostPatchManagerIntegrityStatus.new("keyRevoked")
  NotEnoughSignatures = HostPatchManagerIntegrityStatus.new("notEnoughSignatures")
  Validated = HostPatchManagerIntegrityStatus.new("validated")
  ValidationError = HostPatchManagerIntegrityStatus.new("validationError")
end

# {urn:vim25}HostPatchManagerInstallState
class HostPatchManagerInstallState < ::String
  HostRestarted = HostPatchManagerInstallState.new("hostRestarted")
  ImageActive = HostPatchManagerInstallState.new("imageActive")
end

# {urn:vim25}PhysicalNicVmDirectPathGen2SupportedMode
class PhysicalNicVmDirectPathGen2SupportedMode < ::String
  Upt = PhysicalNicVmDirectPathGen2SupportedMode.new("upt")
end

# {urn:vim25}PhysicalNicResourcePoolSchedulerDisallowedReason
class PhysicalNicResourcePoolSchedulerDisallowedReason < ::String
  HardwareUnsupported = PhysicalNicResourcePoolSchedulerDisallowedReason.new("hardwareUnsupported")
  UserOptOut = PhysicalNicResourcePoolSchedulerDisallowedReason.new("userOptOut")
end

# {urn:vim25}PortGroupConnecteeType
class PortGroupConnecteeType < ::String
  Host = PortGroupConnecteeType.new("host")
  SystemManagement = PortGroupConnecteeType.new("systemManagement")
  Unknown = PortGroupConnecteeType.new("unknown")
  VirtualMachine = PortGroupConnecteeType.new("virtualMachine")
end

# {urn:vim25}HostFirewallRuleDirection
class HostFirewallRuleDirection < ::String
  Inbound = HostFirewallRuleDirection.new("inbound")
  Outbound = HostFirewallRuleDirection.new("outbound")
end

# {urn:vim25}HostFirewallRuleProtocol
class HostFirewallRuleProtocol < ::String
  Tcp = HostFirewallRuleProtocol.new("tcp")
  Udp = HostFirewallRuleProtocol.new("udp")
end

# {urn:vim25}ScsiLunType
class ScsiLunType < ::String
  Cdrom = ScsiLunType.new("cdrom")
  Communications = ScsiLunType.new("communications")
  Disk = ScsiLunType.new("disk")
  Enclosure = ScsiLunType.new("enclosure")
  MediaChanger = ScsiLunType.new("mediaChanger")
  OpticalDevice = ScsiLunType.new("opticalDevice")
  Printer = ScsiLunType.new("printer")
  Processor = ScsiLunType.new("processor")
  Scanner = ScsiLunType.new("scanner")
  StorageArrayController = ScsiLunType.new("storageArrayController")
  Tape = ScsiLunType.new("tape")
  Unknown = ScsiLunType.new("unknown")
  Worm = ScsiLunType.new("worm")
end

# {urn:vim25}ScsiLunState
class ScsiLunState < ::String
  Degraded = ScsiLunState.new("degraded")
  Error = ScsiLunState.new("error")
  LostCommunication = ScsiLunState.new("lostCommunication")
  Off = ScsiLunState.new("off")
  Ok = ScsiLunState.new("ok")
  Quiesced = ScsiLunState.new("quiesced")
  UnknownState = ScsiLunState.new("unknownState")
end

# {urn:vim25}ScsiLunDescriptorQuality
class ScsiLunDescriptorQuality < ::String
  HighQuality = ScsiLunDescriptorQuality.new("highQuality")
  LowQuality = ScsiLunDescriptorQuality.new("lowQuality")
  MediumQuality = ScsiLunDescriptorQuality.new("mediumQuality")
  UnknownQuality = ScsiLunDescriptorQuality.new("unknownQuality")
end

# {urn:vim25}ScsiLunVStorageSupportStatus
class ScsiLunVStorageSupportStatus < ::String
  VStorageSupported = ScsiLunVStorageSupportStatus.new("vStorageSupported")
  VStorageUnknown = ScsiLunVStorageSupportStatus.new("vStorageUnknown")
  VStorageUnsupported = ScsiLunVStorageSupportStatus.new("vStorageUnsupported")
end

# {urn:vim25}HostServicePolicy
class HostServicePolicy < ::String
  Automatic = HostServicePolicy.new("automatic")
  Off = HostServicePolicy.new("off")
  On = HostServicePolicy.new("on")
end

# {urn:vim25}HostSnmpAgentCapability
class HostSnmpAgentCapability < ::String
  COMPLETE = HostSnmpAgentCapability.new("COMPLETE")
  CONFIGURATION = HostSnmpAgentCapability.new("CONFIGURATION")
  DIAGNOSTICS = HostSnmpAgentCapability.new("DIAGNOSTICS")
end

# {urn:vim25}HostSystemIdentificationInfoIdentifier
class HostSystemIdentificationInfoIdentifier < ::String
  AssetTag = HostSystemIdentificationInfoIdentifier.new("AssetTag")
  ServiceTag = HostSystemIdentificationInfoIdentifier.new("ServiceTag")
end

# {urn:vim25}HostDigestInfoDigestMethodType
class HostDigestInfoDigestMethodType < ::String
  MD5 = HostDigestInfoDigestMethodType.new("MD5")
  SHA1 = HostDigestInfoDigestMethodType.new("SHA1")
end

# {urn:vim25}HostUnresolvedVmfsExtentUnresolvedReason
class HostUnresolvedVmfsExtentUnresolvedReason < ::String
  DiskIdMismatch = HostUnresolvedVmfsExtentUnresolvedReason.new("diskIdMismatch")
  UuidConflict = HostUnresolvedVmfsExtentUnresolvedReason.new("uuidConflict")
end

# {urn:vim25}HostUnresolvedVmfsResolutionSpecVmfsUuidResolution
class HostUnresolvedVmfsResolutionSpecVmfsUuidResolution < ::String
  ForceMount = HostUnresolvedVmfsResolutionSpecVmfsUuidResolution.new("forceMount")
  Resignature = HostUnresolvedVmfsResolutionSpecVmfsUuidResolution.new("resignature")
end

# {urn:vim25}HostVirtualNicManagerNicType
class HostVirtualNicManagerNicType < ::String
  FaultToleranceLogging = HostVirtualNicManagerNicType.new("faultToleranceLogging")
  Management = HostVirtualNicManagerNicType.new("management")
  Vmotion = HostVirtualNicManagerNicType.new("vmotion")
end

# {urn:vim25}NetIpConfigInfoIpAddressOrigin
class NetIpConfigInfoIpAddressOrigin < ::String
  Dhcp = NetIpConfigInfoIpAddressOrigin.new("dhcp")
  Linklayer = NetIpConfigInfoIpAddressOrigin.new("linklayer")
  Manual = NetIpConfigInfoIpAddressOrigin.new("manual")
  Other = NetIpConfigInfoIpAddressOrigin.new("other")
  Random = NetIpConfigInfoIpAddressOrigin.new("random")
end

# {urn:vim25}NetIpConfigInfoIpAddressStatus
class NetIpConfigInfoIpAddressStatus < ::String
  Deprecated = NetIpConfigInfoIpAddressStatus.new("deprecated")
  Duplicate = NetIpConfigInfoIpAddressStatus.new("duplicate")
  Inaccessible = NetIpConfigInfoIpAddressStatus.new("inaccessible")
  Invalid = NetIpConfigInfoIpAddressStatus.new("invalid")
  Preferred = NetIpConfigInfoIpAddressStatus.new("preferred")
  Tentative = NetIpConfigInfoIpAddressStatus.new("tentative")
  Unknown = NetIpConfigInfoIpAddressStatus.new("unknown")
end

# {urn:vim25}NetIpStackInfoEntryType
class NetIpStackInfoEntryType < ::String
  Dynamic = NetIpStackInfoEntryType.new("dynamic")
  Invalid = NetIpStackInfoEntryType.new("invalid")
  Manual = NetIpStackInfoEntryType.new("manual")
  Other = NetIpStackInfoEntryType.new("other")
end

# {urn:vim25}NetIpStackInfoPreference
class NetIpStackInfoPreference < ::String
  High = NetIpStackInfoPreference.new("high")
  Low = NetIpStackInfoPreference.new("low")
  Medium = NetIpStackInfoPreference.new("medium")
  Reserved = NetIpStackInfoPreference.new("reserved")
end

# {urn:vim25}NetBIOSConfigInfoMode
class NetBIOSConfigInfoMode < ::String
  Disabled = NetBIOSConfigInfoMode.new("disabled")
  Enabled = NetBIOSConfigInfoMode.new("enabled")
  EnabledViaDHCP = NetBIOSConfigInfoMode.new("enabledViaDHCP")
  Unknown = NetBIOSConfigInfoMode.new("unknown")
end

# {urn:vim25}ArrayUpdateOperation
class ArrayUpdateOperation < ::String
  Add = ArrayUpdateOperation.new("add")
  Edit = ArrayUpdateOperation.new("edit")
  Remove = ArrayUpdateOperation.new("remove")
end

# {urn:vim25}ComplianceResultStatus
class ComplianceResultStatus < ::String
  Compliant = ComplianceResultStatus.new("compliant")
  NonCompliant = ComplianceResultStatus.new("nonCompliant")
  Unknown = ComplianceResultStatus.new("unknown")
end

# {urn:vim25}ProfileNumericComparator
class ProfileNumericComparator < ::String
  Equal = ProfileNumericComparator.new("equal")
  GreaterThan = ProfileNumericComparator.new("greaterThan")
  GreaterThanEqual = ProfileNumericComparator.new("greaterThanEqual")
  LessThan = ProfileNumericComparator.new("lessThan")
  LessThanEqual = ProfileNumericComparator.new("lessThanEqual")
  NotEqual = ProfileNumericComparator.new("notEqual")
end

# {urn:vim25}ClusterProfileServiceType
class ClusterProfileServiceType < ::String
  DPM = ClusterProfileServiceType.new("DPM")
  DRS = ClusterProfileServiceType.new("DRS")
  FT = ClusterProfileServiceType.new("FT")
  HA = ClusterProfileServiceType.new("HA")
end

# {urn:vim25}ProfileExecuteResultStatus
class ProfileExecuteResultStatus < ::String
  Error = ProfileExecuteResultStatus.new("error")
  NeedInput = ProfileExecuteResultStatus.new("needInput")
  Success = ProfileExecuteResultStatus.new("success")
end

# {urn:vim25}DayOfWeek
class DayOfWeek < ::String
  Friday = DayOfWeek.new("friday")
  Monday = DayOfWeek.new("monday")
  Saturday = DayOfWeek.new("saturday")
  Sunday = DayOfWeek.new("sunday")
  Thursday = DayOfWeek.new("thursday")
  Tuesday = DayOfWeek.new("tuesday")
  Wednesday = DayOfWeek.new("wednesday")
end

# {urn:vim25}WeekOfMonth
class WeekOfMonth < ::String
  First = WeekOfMonth.new("first")
  Fourth = WeekOfMonth.new("fourth")
  Last = WeekOfMonth.new("last")
  Second = WeekOfMonth.new("second")
  Third = WeekOfMonth.new("third")
end

# {urn:vim25}VAppCloneSpecProvisioningType
class VAppCloneSpecProvisioningType < ::String
  SameAsSource = VAppCloneSpecProvisioningType.new("sameAsSource")
  Thick = VAppCloneSpecProvisioningType.new("thick")
  Thin = VAppCloneSpecProvisioningType.new("thin")
end

# {urn:vim25}VAppAutoStartAction
class VAppAutoStartAction < ::String
  GuestShutdown = VAppAutoStartAction.new("guestShutdown")
  None = VAppAutoStartAction.new("none")
  PowerOff = VAppAutoStartAction.new("powerOff")
  PowerOn = VAppAutoStartAction.new("powerOn")
  Suspend = VAppAutoStartAction.new("suspend")
end

# {urn:vim25}VAppIPAssignmentInfoIpAllocationPolicy
class VAppIPAssignmentInfoIpAllocationPolicy < ::String
  DhcpPolicy = VAppIPAssignmentInfoIpAllocationPolicy.new("dhcpPolicy")
  FixedPolicy = VAppIPAssignmentInfoIpAllocationPolicy.new("fixedPolicy")
  TransientPolicy = VAppIPAssignmentInfoIpAllocationPolicy.new("transientPolicy")
end

# {urn:vim25}VAppIPAssignmentInfoAllocationSchemes
class VAppIPAssignmentInfoAllocationSchemes < ::String
  Dhcp = VAppIPAssignmentInfoAllocationSchemes.new("dhcp")
  Ovfenv = VAppIPAssignmentInfoAllocationSchemes.new("ovfenv")
end

# {urn:vim25}VAppIPAssignmentInfoProtocols
class VAppIPAssignmentInfoProtocols < ::String
  IPv4 = VAppIPAssignmentInfoProtocols.new("IPv4")
  IPv6 = VAppIPAssignmentInfoProtocols.new("IPv6")
end

# {urn:vim25}VirtualMachineConfigInfoNpivWwnType
class VirtualMachineConfigInfoNpivWwnType < ::String
  External = VirtualMachineConfigInfoNpivWwnType.new("external")
  Host = VirtualMachineConfigInfoNpivWwnType.new("host")
  Vc = VirtualMachineConfigInfoNpivWwnType.new("vc")
end

# {urn:vim25}VirtualMachineConfigInfoSwapPlacementType
class VirtualMachineConfigInfoSwapPlacementType < ::String
  HostLocal = VirtualMachineConfigInfoSwapPlacementType.new("hostLocal")
  Inherit = VirtualMachineConfigInfoSwapPlacementType.new("inherit")
  VmDirectory = VirtualMachineConfigInfoSwapPlacementType.new("vmDirectory")
end

# {urn:vim25}VirtualMachineConfigSpecNpivWwnOp
class VirtualMachineConfigSpecNpivWwnOp < ::String
  Extend = VirtualMachineConfigSpecNpivWwnOp.new("extend")
  Generate = VirtualMachineConfigSpecNpivWwnOp.new("generate")
  Remove = VirtualMachineConfigSpecNpivWwnOp.new("remove")
  Set = VirtualMachineConfigSpecNpivWwnOp.new("set")
end

# {urn:vim25}VirtualMachinePowerOpType
class VirtualMachinePowerOpType < ::String
  Hard = VirtualMachinePowerOpType.new("hard")
  Preset = VirtualMachinePowerOpType.new("preset")
  Soft = VirtualMachinePowerOpType.new("soft")
end

# {urn:vim25}VirtualMachineStandbyActionType
class VirtualMachineStandbyActionType < ::String
  Checkpoint = VirtualMachineStandbyActionType.new("checkpoint")
  PowerOnSuspend = VirtualMachineStandbyActionType.new("powerOnSuspend")
end

# {urn:vim25}VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm
class VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm < ::String
  VmNptConflictingIOChainConfigured = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptConflictingIOChainConfigured")
  VmNptConflictingOperationInProgress = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptConflictingOperationInProgress")
  VmNptDisabledOrDisconnectedAdapter = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptDisabledOrDisconnectedAdapter")
  VmNptFaultToleranceOrRecordReplayConfigured = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptFaultToleranceOrRecordReplayConfigured")
  VmNptIncompatibleAdapterFeatures = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptIncompatibleAdapterFeatures")
  VmNptIncompatibleAdapterType = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptIncompatibleAdapterType")
  VmNptIncompatibleBackingType = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptIncompatibleBackingType")
  VmNptIncompatibleGuest = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptIncompatibleGuest")
  VmNptIncompatibleGuestDriver = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptIncompatibleGuestDriver")
  VmNptInsufficientMemoryReservation = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptInsufficientMemoryReservation")
  VmNptMonitorBlocks = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptMonitorBlocks")
  VmNptRuntimeError = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.new("vmNptRuntimeError")
end

# {urn:vim25}VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther
class VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther < ::String
  VmNptIncompatibleHost = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther.new("vmNptIncompatibleHost")
  VmNptIncompatibleNetwork = VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther.new("vmNptIncompatibleNetwork")
end

# {urn:vim25}VirtualMachineFileLayoutExFileType
class VirtualMachineFileLayoutExFileType < ::String
  Config = VirtualMachineFileLayoutExFileType.new("config")
  Core = VirtualMachineFileLayoutExFileType.new("core")
  DiskDescriptor = VirtualMachineFileLayoutExFileType.new("diskDescriptor")
  DiskExtent = VirtualMachineFileLayoutExFileType.new("diskExtent")
  ExtendedConfig = VirtualMachineFileLayoutExFileType.new("extendedConfig")
  Log = VirtualMachineFileLayoutExFileType.new("log")
  Nvram = VirtualMachineFileLayoutExFileType.new("nvram")
  Screenshot = VirtualMachineFileLayoutExFileType.new("screenshot")
  SnapshotData = VirtualMachineFileLayoutExFileType.new("snapshotData")
  SnapshotList = VirtualMachineFileLayoutExFileType.new("snapshotList")
  Stat = VirtualMachineFileLayoutExFileType.new("stat")
  Suspend = VirtualMachineFileLayoutExFileType.new("suspend")
  Swap = VirtualMachineFileLayoutExFileType.new("swap")
end

# {urn:vim25}VirtualMachineHtSharing
class VirtualMachineHtSharing < ::String
  Any = VirtualMachineHtSharing.new("any")
  Internal = VirtualMachineHtSharing.new("internal")
  None = VirtualMachineHtSharing.new("none")
end

# {urn:vim25}VirtualMachinePowerOffBehavior
class VirtualMachinePowerOffBehavior < ::String
  PowerOff = VirtualMachinePowerOffBehavior.new("powerOff")
  Prompt = VirtualMachinePowerOffBehavior.new("prompt")
  Revert = VirtualMachinePowerOffBehavior.new("revert")
end

# {urn:vim25}VirtualMachineFlagInfoMonitorType
class VirtualMachineFlagInfoMonitorType < ::String
  Debug = VirtualMachineFlagInfoMonitorType.new("debug")
  Release = VirtualMachineFlagInfoMonitorType.new("release")
  Stats = VirtualMachineFlagInfoMonitorType.new("stats")
end

# {urn:vim25}VirtualMachineFlagInfoVirtualMmuUsage
class VirtualMachineFlagInfoVirtualMmuUsage < ::String
  Automatic = VirtualMachineFlagInfoVirtualMmuUsage.new("automatic")
  Off = VirtualMachineFlagInfoVirtualMmuUsage.new("off")
  On = VirtualMachineFlagInfoVirtualMmuUsage.new("on")
end

# {urn:vim25}VirtualMachineFlagInfoVirtualExecUsage
class VirtualMachineFlagInfoVirtualExecUsage < ::String
  HvAuto = VirtualMachineFlagInfoVirtualExecUsage.new("hvAuto")
  HvOff = VirtualMachineFlagInfoVirtualExecUsage.new("hvOff")
  HvOn = VirtualMachineFlagInfoVirtualExecUsage.new("hvOn")
end

# {urn:vim25}VirtualMachineToolsStatus
class VirtualMachineToolsStatus < ::String
  ToolsNotInstalled = VirtualMachineToolsStatus.new("toolsNotInstalled")
  ToolsNotRunning = VirtualMachineToolsStatus.new("toolsNotRunning")
  ToolsOk = VirtualMachineToolsStatus.new("toolsOk")
  ToolsOld = VirtualMachineToolsStatus.new("toolsOld")
end

# {urn:vim25}VirtualMachineToolsVersionStatus
class VirtualMachineToolsVersionStatus < ::String
  GuestToolsCurrent = VirtualMachineToolsVersionStatus.new("guestToolsCurrent")
  GuestToolsNeedUpgrade = VirtualMachineToolsVersionStatus.new("guestToolsNeedUpgrade")
  GuestToolsNotInstalled = VirtualMachineToolsVersionStatus.new("guestToolsNotInstalled")
  GuestToolsUnmanaged = VirtualMachineToolsVersionStatus.new("guestToolsUnmanaged")
end

# {urn:vim25}VirtualMachineToolsRunningStatus
class VirtualMachineToolsRunningStatus < ::String
  GuestToolsExecutingScripts = VirtualMachineToolsRunningStatus.new("guestToolsExecutingScripts")
  GuestToolsNotRunning = VirtualMachineToolsRunningStatus.new("guestToolsNotRunning")
  GuestToolsRunning = VirtualMachineToolsRunningStatus.new("guestToolsRunning")
end

# {urn:vim25}VirtualMachineGuestState
class VirtualMachineGuestState < ::String
  NotRunning = VirtualMachineGuestState.new("notRunning")
  Resetting = VirtualMachineGuestState.new("resetting")
  Running = VirtualMachineGuestState.new("running")
  ShuttingDown = VirtualMachineGuestState.new("shuttingDown")
  Standby = VirtualMachineGuestState.new("standby")
  Unknown = VirtualMachineGuestState.new("unknown")
end

# {urn:vim25}VirtualMachineGuestOsFamily
class VirtualMachineGuestOsFamily < ::String
  LinuxGuest = VirtualMachineGuestOsFamily.new("linuxGuest")
  NetwareGuest = VirtualMachineGuestOsFamily.new("netwareGuest")
  OtherGuestFamily = VirtualMachineGuestOsFamily.new("otherGuestFamily")
  SolarisGuest = VirtualMachineGuestOsFamily.new("solarisGuest")
  WindowsGuest = VirtualMachineGuestOsFamily.new("windowsGuest")
end

# {urn:vim25}VirtualMachineGuestOsIdentifier
class VirtualMachineGuestOsIdentifier < ::String
  Asianux3Guest = VirtualMachineGuestOsIdentifier.new("asianux3Guest")
  Asianux3_64Guest = VirtualMachineGuestOsIdentifier.new("asianux3_64Guest")
  Asianux4Guest = VirtualMachineGuestOsIdentifier.new("asianux4Guest")
  Asianux4_64Guest = VirtualMachineGuestOsIdentifier.new("asianux4_64Guest")
  Centos64Guest = VirtualMachineGuestOsIdentifier.new("centos64Guest")
  CentosGuest = VirtualMachineGuestOsIdentifier.new("centosGuest")
  Darwin64Guest = VirtualMachineGuestOsIdentifier.new("darwin64Guest")
  DarwinGuest = VirtualMachineGuestOsIdentifier.new("darwinGuest")
  Debian4Guest = VirtualMachineGuestOsIdentifier.new("debian4Guest")
  Debian4_64Guest = VirtualMachineGuestOsIdentifier.new("debian4_64Guest")
  Debian5Guest = VirtualMachineGuestOsIdentifier.new("debian5Guest")
  Debian5_64Guest = VirtualMachineGuestOsIdentifier.new("debian5_64Guest")
  DosGuest = VirtualMachineGuestOsIdentifier.new("dosGuest")
  EComStationGuest = VirtualMachineGuestOsIdentifier.new("eComStationGuest")
  Freebsd64Guest = VirtualMachineGuestOsIdentifier.new("freebsd64Guest")
  FreebsdGuest = VirtualMachineGuestOsIdentifier.new("freebsdGuest")
  Mandriva64Guest = VirtualMachineGuestOsIdentifier.new("mandriva64Guest")
  MandrivaGuest = VirtualMachineGuestOsIdentifier.new("mandrivaGuest")
  Netware4Guest = VirtualMachineGuestOsIdentifier.new("netware4Guest")
  Netware5Guest = VirtualMachineGuestOsIdentifier.new("netware5Guest")
  Netware6Guest = VirtualMachineGuestOsIdentifier.new("netware6Guest")
  Nld9Guest = VirtualMachineGuestOsIdentifier.new("nld9Guest")
  OesGuest = VirtualMachineGuestOsIdentifier.new("oesGuest")
  OpenServer5Guest = VirtualMachineGuestOsIdentifier.new("openServer5Guest")
  OpenServer6Guest = VirtualMachineGuestOsIdentifier.new("openServer6Guest")
  OracleLinux64Guest = VirtualMachineGuestOsIdentifier.new("oracleLinux64Guest")
  OracleLinuxGuest = VirtualMachineGuestOsIdentifier.new("oracleLinuxGuest")
  Os2Guest = VirtualMachineGuestOsIdentifier.new("os2Guest")
  Other24xLinux64Guest = VirtualMachineGuestOsIdentifier.new("other24xLinux64Guest")
  Other24xLinuxGuest = VirtualMachineGuestOsIdentifier.new("other24xLinuxGuest")
  Other26xLinux64Guest = VirtualMachineGuestOsIdentifier.new("other26xLinux64Guest")
  Other26xLinuxGuest = VirtualMachineGuestOsIdentifier.new("other26xLinuxGuest")
  OtherGuest = VirtualMachineGuestOsIdentifier.new("otherGuest")
  OtherGuest64 = VirtualMachineGuestOsIdentifier.new("otherGuest64")
  OtherLinux64Guest = VirtualMachineGuestOsIdentifier.new("otherLinux64Guest")
  OtherLinuxGuest = VirtualMachineGuestOsIdentifier.new("otherLinuxGuest")
  RedhatGuest = VirtualMachineGuestOsIdentifier.new("redhatGuest")
  Rhel2Guest = VirtualMachineGuestOsIdentifier.new("rhel2Guest")
  Rhel3Guest = VirtualMachineGuestOsIdentifier.new("rhel3Guest")
  Rhel3_64Guest = VirtualMachineGuestOsIdentifier.new("rhel3_64Guest")
  Rhel4Guest = VirtualMachineGuestOsIdentifier.new("rhel4Guest")
  Rhel4_64Guest = VirtualMachineGuestOsIdentifier.new("rhel4_64Guest")
  Rhel5Guest = VirtualMachineGuestOsIdentifier.new("rhel5Guest")
  Rhel5_64Guest = VirtualMachineGuestOsIdentifier.new("rhel5_64Guest")
  Rhel6Guest = VirtualMachineGuestOsIdentifier.new("rhel6Guest")
  Rhel6_64Guest = VirtualMachineGuestOsIdentifier.new("rhel6_64Guest")
  SjdsGuest = VirtualMachineGuestOsIdentifier.new("sjdsGuest")
  Sles10Guest = VirtualMachineGuestOsIdentifier.new("sles10Guest")
  Sles10_64Guest = VirtualMachineGuestOsIdentifier.new("sles10_64Guest")
  Sles11Guest = VirtualMachineGuestOsIdentifier.new("sles11Guest")
  Sles11_64Guest = VirtualMachineGuestOsIdentifier.new("sles11_64Guest")
  Sles64Guest = VirtualMachineGuestOsIdentifier.new("sles64Guest")
  SlesGuest = VirtualMachineGuestOsIdentifier.new("slesGuest")
  Solaris10Guest = VirtualMachineGuestOsIdentifier.new("solaris10Guest")
  Solaris10_64Guest = VirtualMachineGuestOsIdentifier.new("solaris10_64Guest")
  Solaris6Guest = VirtualMachineGuestOsIdentifier.new("solaris6Guest")
  Solaris7Guest = VirtualMachineGuestOsIdentifier.new("solaris7Guest")
  Solaris8Guest = VirtualMachineGuestOsIdentifier.new("solaris8Guest")
  Solaris9Guest = VirtualMachineGuestOsIdentifier.new("solaris9Guest")
  Suse64Guest = VirtualMachineGuestOsIdentifier.new("suse64Guest")
  SuseGuest = VirtualMachineGuestOsIdentifier.new("suseGuest")
  TurboLinux64Guest = VirtualMachineGuestOsIdentifier.new("turboLinux64Guest")
  TurboLinuxGuest = VirtualMachineGuestOsIdentifier.new("turboLinuxGuest")
  Ubuntu64Guest = VirtualMachineGuestOsIdentifier.new("ubuntu64Guest")
  UbuntuGuest = VirtualMachineGuestOsIdentifier.new("ubuntuGuest")
  UnixWare7Guest = VirtualMachineGuestOsIdentifier.new("unixWare7Guest")
  Win2000AdvServGuest = VirtualMachineGuestOsIdentifier.new("win2000AdvServGuest")
  Win2000ProGuest = VirtualMachineGuestOsIdentifier.new("win2000ProGuest")
  Win2000ServGuest = VirtualMachineGuestOsIdentifier.new("win2000ServGuest")
  Win31Guest = VirtualMachineGuestOsIdentifier.new("win31Guest")
  Win95Guest = VirtualMachineGuestOsIdentifier.new("win95Guest")
  Win98Guest = VirtualMachineGuestOsIdentifier.new("win98Guest")
  WinLonghorn64Guest = VirtualMachineGuestOsIdentifier.new("winLonghorn64Guest")
  WinLonghornGuest = VirtualMachineGuestOsIdentifier.new("winLonghornGuest")
  WinMeGuest = VirtualMachineGuestOsIdentifier.new("winMeGuest")
  WinNTGuest = VirtualMachineGuestOsIdentifier.new("winNTGuest")
  WinNetBusinessGuest = VirtualMachineGuestOsIdentifier.new("winNetBusinessGuest")
  WinNetDatacenter64Guest = VirtualMachineGuestOsIdentifier.new("winNetDatacenter64Guest")
  WinNetDatacenterGuest = VirtualMachineGuestOsIdentifier.new("winNetDatacenterGuest")
  WinNetEnterprise64Guest = VirtualMachineGuestOsIdentifier.new("winNetEnterprise64Guest")
  WinNetEnterpriseGuest = VirtualMachineGuestOsIdentifier.new("winNetEnterpriseGuest")
  WinNetStandard64Guest = VirtualMachineGuestOsIdentifier.new("winNetStandard64Guest")
  WinNetStandardGuest = VirtualMachineGuestOsIdentifier.new("winNetStandardGuest")
  WinNetWebGuest = VirtualMachineGuestOsIdentifier.new("winNetWebGuest")
  WinVista64Guest = VirtualMachineGuestOsIdentifier.new("winVista64Guest")
  WinVistaGuest = VirtualMachineGuestOsIdentifier.new("winVistaGuest")
  WinXPHomeGuest = VirtualMachineGuestOsIdentifier.new("winXPHomeGuest")
  WinXPPro64Guest = VirtualMachineGuestOsIdentifier.new("winXPPro64Guest")
  WinXPProGuest = VirtualMachineGuestOsIdentifier.new("winXPProGuest")
  Windows7Guest = VirtualMachineGuestOsIdentifier.new("windows7Guest")
  Windows7Server64Guest = VirtualMachineGuestOsIdentifier.new("windows7Server64Guest")
  Windows7_64Guest = VirtualMachineGuestOsIdentifier.new("windows7_64Guest")
end

# {urn:vim25}VirtualMachineRelocateTransformation
class VirtualMachineRelocateTransformation < ::String
  Flat = VirtualMachineRelocateTransformation.new("flat")
  Sparse = VirtualMachineRelocateTransformation.new("sparse")
end

# {urn:vim25}VirtualMachineRelocateDiskMoveOptions
class VirtualMachineRelocateDiskMoveOptions < ::String
  CreateNewChildDiskBacking = VirtualMachineRelocateDiskMoveOptions.new("createNewChildDiskBacking")
  MoveAllDiskBackingsAndAllowSharing = VirtualMachineRelocateDiskMoveOptions.new("moveAllDiskBackingsAndAllowSharing")
  MoveAllDiskBackingsAndDisallowSharing = VirtualMachineRelocateDiskMoveOptions.new("moveAllDiskBackingsAndDisallowSharing")
  MoveChildMostDiskBacking = VirtualMachineRelocateDiskMoveOptions.new("moveChildMostDiskBacking")
end

# {urn:vim25}VirtualMachineScsiPassthroughType
class VirtualMachineScsiPassthroughType < ::String
  Cdrom = VirtualMachineScsiPassthroughType.new("cdrom")
  Com = VirtualMachineScsiPassthroughType.new("com")
  Disk = VirtualMachineScsiPassthroughType.new("disk")
  Media = VirtualMachineScsiPassthroughType.new("media")
  Optical = VirtualMachineScsiPassthroughType.new("optical")
  Printer = VirtualMachineScsiPassthroughType.new("printer")
  Processor = VirtualMachineScsiPassthroughType.new("processor")
  Raid = VirtualMachineScsiPassthroughType.new("raid")
  Scanner = VirtualMachineScsiPassthroughType.new("scanner")
  Tape = VirtualMachineScsiPassthroughType.new("tape")
  Unknown = VirtualMachineScsiPassthroughType.new("unknown")
  Worm = VirtualMachineScsiPassthroughType.new("worm")
end

# {urn:vim25}VirtualMachineTargetInfoConfigurationTag
class VirtualMachineTargetInfoConfigurationTag < ::String
  ClusterWide = VirtualMachineTargetInfoConfigurationTag.new("clusterWide")
  Compliant = VirtualMachineTargetInfoConfigurationTag.new("compliant")
end

# {urn:vim25}UpgradePolicy
class UpgradePolicy < ::String
  Manual = UpgradePolicy.new("manual")
  UpgradeAtPowerCycle = UpgradePolicy.new("upgradeAtPowerCycle")
end

# {urn:vim25}VirtualMachineUsbInfoSpeed
class VirtualMachineUsbInfoSpeed < ::String
  Full = VirtualMachineUsbInfoSpeed.new("full")
  High = VirtualMachineUsbInfoSpeed.new("high")
  Low = VirtualMachineUsbInfoSpeed.new("low")
  UnknownSpeed = VirtualMachineUsbInfoSpeed.new("unknownSpeed")
end

# {urn:vim25}VirtualMachineUsbInfoFamily
class VirtualMachineUsbInfoFamily < ::String
  Audio = VirtualMachineUsbInfoFamily.new("audio")
  Bluetooth = VirtualMachineUsbInfoFamily.new("bluetooth")
  Communication = VirtualMachineUsbInfoFamily.new("communication")
  Hid = VirtualMachineUsbInfoFamily.new("hid")
  Hid_bootable = VirtualMachineUsbInfoFamily.new("hid_bootable")
  Hub = VirtualMachineUsbInfoFamily.new("hub")
  Imaging = VirtualMachineUsbInfoFamily.new("imaging")
  Other = VirtualMachineUsbInfoFamily.new("other")
  Pda = VirtualMachineUsbInfoFamily.new("pda")
  Physical = VirtualMachineUsbInfoFamily.new("physical")
  Printer = VirtualMachineUsbInfoFamily.new("printer")
  Security = VirtualMachineUsbInfoFamily.new("security")
  Smart_card = VirtualMachineUsbInfoFamily.new("smart_card")
  Storage = VirtualMachineUsbInfoFamily.new("storage")
  UnknownFamily = VirtualMachineUsbInfoFamily.new("unknownFamily")
  Vendor_specific = VirtualMachineUsbInfoFamily.new("vendor_specific")
  Video = VirtualMachineUsbInfoFamily.new("video")
  Wireless = VirtualMachineUsbInfoFamily.new("wireless")
  Wusb = VirtualMachineUsbInfoFamily.new("wusb")
end

# {urn:vim25}CheckTestType
class CheckTestType < ::String
  DatastoreTests = CheckTestType.new("datastoreTests")
  HostTests = CheckTestType.new("hostTests")
  ResourcePoolTests = CheckTestType.new("resourcePoolTests")
  SourceTests = CheckTestType.new("sourceTests")
end

# {urn:vim25}CustomizationSysprepRebootOption
class CustomizationSysprepRebootOption < ::String
  Noreboot = CustomizationSysprepRebootOption.new("noreboot")
  Reboot = CustomizationSysprepRebootOption.new("reboot")
  Shutdown = CustomizationSysprepRebootOption.new("shutdown")
end

# {urn:vim25}CustomizationLicenseDataMode
class CustomizationLicenseDataMode < ::String
  PerSeat = CustomizationLicenseDataMode.new("perSeat")
  PerServer = CustomizationLicenseDataMode.new("perServer")
end

# {urn:vim25}CustomizationNetBIOSMode
class CustomizationNetBIOSMode < ::String
  DisableNetBIOS = CustomizationNetBIOSMode.new("disableNetBIOS")
  EnableNetBIOS = CustomizationNetBIOSMode.new("enableNetBIOS")
  EnableNetBIOSViaDhcp = CustomizationNetBIOSMode.new("enableNetBIOSViaDhcp")
end

# {urn:vim25}VirtualDeviceConnectInfoStatus
class VirtualDeviceConnectInfoStatus < ::String
  Ok = VirtualDeviceConnectInfoStatus.new("ok")
  RecoverableError = VirtualDeviceConnectInfoStatus.new("recoverableError")
  UnrecoverableError = VirtualDeviceConnectInfoStatus.new("unrecoverableError")
  Untried = VirtualDeviceConnectInfoStatus.new("untried")
end

# {urn:vim25}VirtualDeviceFileExtension
class VirtualDeviceFileExtension < ::String
  Dsk = VirtualDeviceFileExtension.new("dsk")
  Flp = VirtualDeviceFileExtension.new("flp")
  Iso = VirtualDeviceFileExtension.new("iso")
  Rdm = VirtualDeviceFileExtension.new("rdm")
  Vmdk = VirtualDeviceFileExtension.new("vmdk")
end

# {urn:vim25}VirtualDeviceURIBackingOptionDirection
class VirtualDeviceURIBackingOptionDirection < ::String
  Client = VirtualDeviceURIBackingOptionDirection.new("client")
  Server = VirtualDeviceURIBackingOptionDirection.new("server")
end

# {urn:vim25}VirtualDeviceConfigSpecOperation
class VirtualDeviceConfigSpecOperation < ::String
  Add = VirtualDeviceConfigSpecOperation.new("add")
  Edit = VirtualDeviceConfigSpecOperation.new("edit")
  Remove = VirtualDeviceConfigSpecOperation.new("remove")
end

# {urn:vim25}VirtualDeviceConfigSpecFileOperation
class VirtualDeviceConfigSpecFileOperation < ::String
  Create = VirtualDeviceConfigSpecFileOperation.new("create")
  Destroy = VirtualDeviceConfigSpecFileOperation.new("destroy")
  Replace = VirtualDeviceConfigSpecFileOperation.new("replace")
end

# {urn:vim25}VirtualDiskMode
class VirtualDiskMode < ::String
  Append = VirtualDiskMode.new("append")
  Independent_nonpersistent = VirtualDiskMode.new("independent_nonpersistent")
  Independent_persistent = VirtualDiskMode.new("independent_persistent")
  Nonpersistent = VirtualDiskMode.new("nonpersistent")
  Persistent = VirtualDiskMode.new("persistent")
  Undoable = VirtualDiskMode.new("undoable")
end

# {urn:vim25}VirtualDiskCompatibilityMode
class VirtualDiskCompatibilityMode < ::String
  PhysicalMode = VirtualDiskCompatibilityMode.new("physicalMode")
  VirtualMode = VirtualDiskCompatibilityMode.new("virtualMode")
end

# {urn:vim25}VirtualEthernetCardLegacyNetworkDeviceName
class VirtualEthernetCardLegacyNetworkDeviceName < ::String
  Bridged = VirtualEthernetCardLegacyNetworkDeviceName.new("bridged")
  Hostonly = VirtualEthernetCardLegacyNetworkDeviceName.new("hostonly")
  Nat = VirtualEthernetCardLegacyNetworkDeviceName.new("nat")
end

# {urn:vim25}VirtualEthernetCardMacType
class VirtualEthernetCardMacType < ::String
  Assigned = VirtualEthernetCardMacType.new("assigned")
  Generated = VirtualEthernetCardMacType.new("generated")
  Manual = VirtualEthernetCardMacType.new("manual")
end

# {urn:vim25}VirtualPointingDeviceHostChoice
class VirtualPointingDeviceHostChoice < ::String
  Autodetect = VirtualPointingDeviceHostChoice.new("autodetect")
  IntellimouseExplorer = VirtualPointingDeviceHostChoice.new("intellimouseExplorer")
  IntellimousePs2 = VirtualPointingDeviceHostChoice.new("intellimousePs2")
  LogitechMouseman = VirtualPointingDeviceHostChoice.new("logitechMouseman")
  Microsoft_serial = VirtualPointingDeviceHostChoice.new("microsoft_serial")
  MouseSystems = VirtualPointingDeviceHostChoice.new("mouseSystems")
  MousemanSerial = VirtualPointingDeviceHostChoice.new("mousemanSerial")
  Ps2 = VirtualPointingDeviceHostChoice.new("ps2")
end

# {urn:vim25}VirtualSCSISharing
class VirtualSCSISharing < ::String
  NoSharing = VirtualSCSISharing.new("noSharing")
  PhysicalSharing = VirtualSCSISharing.new("physicalSharing")
  VirtualSharing = VirtualSCSISharing.new("virtualSharing")
end

# {urn:vim25}VirtualSerialPortEndPoint
class VirtualSerialPortEndPoint < ::String
  Client = VirtualSerialPortEndPoint.new("client")
  Server = VirtualSerialPortEndPoint.new("server")
end

# {urn:vim25}AddAuthorizationRoleResponse
#   returnval - SOAP::SOAPInt
class AddAuthorizationRoleResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveAuthorizationRoleResponse
class RemoveAuthorizationRoleResponse
  def initialize
  end
end

# {urn:vim25}UpdateAuthorizationRoleResponse
class UpdateAuthorizationRoleResponse
  def initialize
  end
end

# {urn:vim25}MergePermissionsResponse
class MergePermissionsResponse
  def initialize
  end
end

# {urn:vim25}RetrieveRolePermissionsResponse
class RetrieveRolePermissionsResponse < ::Array
end

# {urn:vim25}RetrieveEntityPermissionsResponse
class RetrieveEntityPermissionsResponse < ::Array
end

# {urn:vim25}RetrieveAllPermissionsResponse
class RetrieveAllPermissionsResponse < ::Array
end

# {urn:vim25}SetEntityPermissionsResponse
class SetEntityPermissionsResponse
  def initialize
  end
end

# {urn:vim25}ResetEntityPermissionsResponse
class ResetEntityPermissionsResponse
  def initialize
  end
end

# {urn:vim25}RemoveEntityPermissionResponse
class RemoveEntityPermissionResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureCluster_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureCluster_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ApplyRecommendationResponse
class ApplyRecommendationResponse
  def initialize
  end
end

# {urn:vim25}CancelRecommendationResponse
class CancelRecommendationResponse
  def initialize
  end
end

# {urn:vim25}RecommendHostsForVmResponse
class RecommendHostsForVmResponse < ::Array
end

# {urn:vim25}AddHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AddHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MoveInto_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveInto_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MoveHostInto_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveHostInto_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshRecommendationResponse
class RefreshRecommendationResponse
  def initialize
  end
end

# {urn:vim25}RetrieveDasAdvancedRuntimeInfoResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ClusterDasAdvancedRuntimeInfo
class RetrieveDasAdvancedRuntimeInfoResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ReconfigureComputeResource_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureComputeResource_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AddCustomFieldDefResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::CustomFieldDef
class AddCustomFieldDefResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveCustomFieldDefResponse
class RemoveCustomFieldDefResponse
  def initialize
  end
end

# {urn:vim25}RenameCustomFieldDefResponse
class RenameCustomFieldDefResponse
  def initialize
  end
end

# {urn:vim25}SetFieldResponse
class SetFieldResponse
  def initialize
  end
end

# {urn:vim25}DoesCustomizationSpecExistResponse
#   returnval - SOAP::SOAPBoolean
class DoesCustomizationSpecExistResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}GetCustomizationSpecResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::CustomizationSpecItem
class GetCustomizationSpecResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateCustomizationSpecResponse
class CreateCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}OverwriteCustomizationSpecResponse
class OverwriteCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}DeleteCustomizationSpecResponse
class DeleteCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}DuplicateCustomizationSpecResponse
class DuplicateCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}RenameCustomizationSpecResponse
class RenameCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}CustomizationSpecItemToXmlResponse
#   returnval - SOAP::SOAPString
class CustomizationSpecItemToXmlResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}XmlToCustomizationSpecItemResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::CustomizationSpecItem
class XmlToCustomizationSpecItemResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CheckCustomizationResourcesResponse
class CheckCustomizationResourcesResponse
  def initialize
  end
end

# {urn:vim25}QueryConnectionInfoResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostConnectInfo
class QueryConnectionInfoResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerOnMultiVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOnMultiVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshDatastoreResponse
class RefreshDatastoreResponse
  def initialize
  end
end

# {urn:vim25}RefreshDatastoreStorageInfoResponse
class RefreshDatastoreStorageInfoResponse
  def initialize
  end
end

# {urn:vim25}UpdateVirtualMachineFiles_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpdateVirtualMachineFiles_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RenameDatastoreResponse
class RenameDatastoreResponse
  def initialize
  end
end

# {urn:vim25}DestroyDatastoreResponse
class DestroyDatastoreResponse
  def initialize
  end
end

# {urn:vim25}QueryDescriptionsResponse
class QueryDescriptionsResponse < ::Array
end

# {urn:vim25}BrowseDiagnosticLogResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::DiagnosticManagerLogHeader
class BrowseDiagnosticLogResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}GenerateLogBundles_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class GenerateLogBundles_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FetchDVPortKeysResponse
class FetchDVPortKeysResponse < ::Array
end

# {urn:vim25}FetchDVPortsResponse
class FetchDVPortsResponse < ::Array
end

# {urn:vim25}QueryUsedVlanIdInDvsResponse
class QueryUsedVlanIdInDvsResponse < ::Array
end

# {urn:vim25}ReconfigureDvs_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureDvs_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PerformDvsProductSpecOperation_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PerformDvsProductSpecOperation_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MergeDvs_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MergeDvs_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AddDVPortgroup_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AddDVPortgroup_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MoveDVPort_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveDVPort_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateDvsCapabilityResponse
class UpdateDvsCapabilityResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureDVPort_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureDVPort_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshDVPortStateResponse
class RefreshDVPortStateResponse
  def initialize
  end
end

# {urn:vim25}RectifyDvsHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RectifyDvsHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateNetworkResourcePoolResponse
class UpdateNetworkResourcePoolResponse
  def initialize
  end
end

# {urn:vim25}EnableNetworkResourceManagementResponse
class EnableNetworkResourceManagementResponse
  def initialize
  end
end

# {urn:vim25}QueryConfigOptionDescriptorResponse
class QueryConfigOptionDescriptorResponse < ::Array
end

# {urn:vim25}QueryConfigOptionResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::VirtualMachineConfigOption
class QueryConfigOptionResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryConfigTargetResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ConfigTarget
class QueryConfigTargetResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryTargetCapabilitiesResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostCapability
class QueryTargetCapabilitiesResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}setCustomValueResponse
class SetCustomValueResponse
  def initialize
  end
end

# {urn:vim25}UnregisterExtensionResponse
class UnregisterExtensionResponse
  def initialize
  end
end

# {urn:vim25}FindExtensionResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::Extension
class FindExtensionResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RegisterExtensionResponse
class RegisterExtensionResponse
  def initialize
  end
end

# {urn:vim25}UpdateExtensionResponse
class UpdateExtensionResponse
  def initialize
  end
end

# {urn:vim25}GetPublicKeyResponse
#   returnval - SOAP::SOAPString
class GetPublicKeyResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetPublicKeyResponse
class SetPublicKeyResponse
  def initialize
  end
end

# {urn:vim25}SetExtensionCertificateResponse
class SetExtensionCertificateResponse
  def initialize
  end
end

# {urn:vim25}MoveDatastoreFile_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveDatastoreFile_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CopyDatastoreFile_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CopyDatastoreFile_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DeleteDatastoreFile_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DeleteDatastoreFile_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MakeDirectoryResponse
class MakeDirectoryResponse
  def initialize
  end
end

# {urn:vim25}ChangeOwnerResponse
class ChangeOwnerResponse
  def initialize
  end
end

# {urn:vim25}CreateFolderResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateFolderResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MoveIntoFolder_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveIntoFolder_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RegisterVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RegisterVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateClusterResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateClusterResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateClusterExResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateClusterExResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AddStandaloneHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class AddStandaloneHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateDatacenterResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateDatacenterResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UnregisterAndDestroy_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnregisterAndDestroy_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateDVS_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateDVS_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetCollectorPageSizeResponse
class SetCollectorPageSizeResponse
  def initialize
  end
end

# {urn:vim25}RewindCollectorResponse
class RewindCollectorResponse
  def initialize
  end
end

# {urn:vim25}ResetCollectorResponse
class ResetCollectorResponse
  def initialize
  end
end

# {urn:vim25}DestroyCollectorResponse
class DestroyCollectorResponse
  def initialize
  end
end

# {urn:vim25}QueryHostConnectionInfoResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostConnectInfo
class QueryHostConnectionInfoResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateSystemResourcesResponse
class UpdateSystemResourcesResponse
  def initialize
  end
end

# {urn:vim25}ReconnectHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconnectHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DisconnectHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DisconnectHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}EnterMaintenanceMode_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EnterMaintenanceMode_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExitMaintenanceMode_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExitMaintenanceMode_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RebootHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RebootHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ShutdownHost_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ShutdownHost_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerDownHostToStandBy_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerDownHostToStandBy_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerUpHostFromStandBy_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerUpHostFromStandBy_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryMemoryOverheadResponse
#   returnval - SOAP::SOAPLong
class QueryMemoryOverheadResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryMemoryOverheadExResponse
#   returnval - SOAP::SOAPLong
class QueryMemoryOverheadExResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ReconfigureHostForDAS_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureHostForDAS_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateFlagsResponse
class UpdateFlagsResponse
  def initialize
  end
end

# {urn:vim25}EnterLockdownModeResponse
class EnterLockdownModeResponse
  def initialize
  end
end

# {urn:vim25}ExitLockdownModeResponse
class ExitLockdownModeResponse
  def initialize
  end
end

# {urn:vim25}AcquireCimServicesTicketResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostServiceTicket
class AcquireCimServicesTicketResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateIpmiResponse
class UpdateIpmiResponse
  def initialize
  end
end

# {urn:vim25}RetrieveHardwareUptimeResponse
#   returnval - SOAP::SOAPLong
class RetrieveHardwareUptimeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}HttpNfcLeaseGetManifestResponse
class HttpNfcLeaseGetManifestResponse < ::Array
end

# {urn:vim25}HttpNfcLeaseCompleteResponse
class HttpNfcLeaseCompleteResponse
  def initialize
  end
end

# {urn:vim25}HttpNfcLeaseAbortResponse
class HttpNfcLeaseAbortResponse
  def initialize
  end
end

# {urn:vim25}HttpNfcLeaseProgressResponse
class HttpNfcLeaseProgressResponse
  def initialize
  end
end

# {urn:vim25}QueryIpPoolsResponse
class QueryIpPoolsResponse < ::Array
end

# {urn:vim25}CreateIpPoolResponse
#   returnval - SOAP::SOAPInt
class CreateIpPoolResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateIpPoolResponse
class UpdateIpPoolResponse
  def initialize
  end
end

# {urn:vim25}DestroyIpPoolResponse
class DestroyIpPoolResponse
  def initialize
  end
end

# {urn:vim25}UpdateAssignedLicenseResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
class UpdateAssignedLicenseResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveAssignedLicenseResponse
class RemoveAssignedLicenseResponse
  def initialize
  end
end

# {urn:vim25}QueryAssignedLicensesResponse
class QueryAssignedLicensesResponse < ::Array
end

# {urn:vim25}QuerySupportedFeaturesResponse
class QuerySupportedFeaturesResponse < ::Array
end

# {urn:vim25}QueryLicenseSourceAvailabilityResponse
class QueryLicenseSourceAvailabilityResponse < ::Array
end

# {urn:vim25}QueryLicenseUsageResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::LicenseUsageInfo
class QueryLicenseUsageResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetLicenseEditionResponse
class SetLicenseEditionResponse
  def initialize
  end
end

# {urn:vim25}CheckLicenseFeatureResponse
#   returnval - SOAP::SOAPBoolean
class CheckLicenseFeatureResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}EnableFeatureResponse
#   returnval - SOAP::SOAPBoolean
class EnableFeatureResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DisableFeatureResponse
#   returnval - SOAP::SOAPBoolean
class DisableFeatureResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ConfigureLicenseSourceResponse
class ConfigureLicenseSourceResponse
  def initialize
  end
end

# {urn:vim25}UpdateLicenseResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
class UpdateLicenseResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AddLicenseResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
class AddLicenseResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveLicenseResponse
class RemoveLicenseResponse
  def initialize
  end
end

# {urn:vim25}DecodeLicenseResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::LicenseManagerLicenseInfo
class DecodeLicenseResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateLicenseLabelResponse
class UpdateLicenseLabelResponse
  def initialize
  end
end

# {urn:vim25}RemoveLicenseLabelResponse
class RemoveLicenseLabelResponse
  def initialize
  end
end

# {urn:vim25}ReloadResponse
class ReloadResponse
  def initialize
  end
end

# {urn:vim25}Rename_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class Rename_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}Destroy_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class Destroy_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DestroyNetworkResponse
class DestroyNetworkResponse
  def initialize
  end
end

# {urn:vim25}ValidateHostResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::OvfValidateHostResult
class ValidateHostResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ParseDescriptorResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::OvfParseDescriptorResult
class ParseDescriptorResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateImportSpecResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::OvfCreateImportSpecResult
class CreateImportSpecResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateDescriptorResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::OvfCreateDescriptorResult
class CreateDescriptorResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryPerfProviderSummaryResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::PerfProviderSummary
class QueryPerfProviderSummaryResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryAvailablePerfMetricResponse
class QueryAvailablePerfMetricResponse < ::Array
end

# {urn:vim25}QueryPerfCounterResponse
class QueryPerfCounterResponse < ::Array
end

# {urn:vim25}QueryPerfCounterByLevelResponse
class QueryPerfCounterByLevelResponse < ::Array
end

# {urn:vim25}QueryPerfResponse
class QueryPerfResponse < ::Array
end

# {urn:vim25}QueryPerfCompositeResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::PerfCompositeMetric
class QueryPerfCompositeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreatePerfIntervalResponse
class CreatePerfIntervalResponse
  def initialize
  end
end

# {urn:vim25}RemovePerfIntervalResponse
class RemovePerfIntervalResponse
  def initialize
  end
end

# {urn:vim25}UpdatePerfIntervalResponse
class UpdatePerfIntervalResponse
  def initialize
  end
end

# {urn:vim25}EstimateDatabaseSizeResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::DatabaseSizeEstimate
class EstimateDatabaseSizeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateConfigResponse
class UpdateConfigResponse
  def initialize
  end
end

# {urn:vim25}MoveIntoResourcePoolResponse
class MoveIntoResourcePoolResponse
  def initialize
  end
end

# {urn:vim25}UpdateChildResourceConfigurationResponse
class UpdateChildResourceConfigurationResponse
  def initialize
  end
end

# {urn:vim25}CreateResourcePoolResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateResourcePoolResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DestroyChildrenResponse
class DestroyChildrenResponse
  def initialize
  end
end

# {urn:vim25}CreateVAppResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVAppResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateChildVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateChildVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RegisterChildVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RegisterChildVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ImportVAppResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ImportVAppResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryResourceConfigOptionResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ResourceConfigOption
class QueryResourceConfigOptionResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshRuntimeResponse
class RefreshRuntimeResponse
  def initialize
  end
end

# {urn:vim25}FindByUuidResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindByUuidResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindByDatastorePathResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindByDatastorePathResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindByDnsNameResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindByDnsNameResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindByIpResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindByIpResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindByInventoryPathResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindByInventoryPathResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindChildResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class FindChildResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}FindAllByUuidResponse
class FindAllByUuidResponse < ::Array
end

# {urn:vim25}FindAllByDnsNameResponse
class FindAllByDnsNameResponse < ::Array
end

# {urn:vim25}FindAllByIpResponse
class FindAllByIpResponse < ::Array
end

# {urn:vim25}CurrentTimeResponse
#   returnval - SOAP::SOAPDateTime
class CurrentTimeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrieveServiceContentResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ServiceContent
class RetrieveServiceContentResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ValidateMigrationResponse
class ValidateMigrationResponse < ::Array
end

# {urn:vim25}QueryVMotionCompatibilityResponse
class QueryVMotionCompatibilityResponse < ::Array
end

# {urn:vim25}RetrieveProductComponentsResponse
class RetrieveProductComponentsResponse < ::Array
end

# {urn:vim25}UpdateServiceMessageResponse
class UpdateServiceMessageResponse
  def initialize
  end
end

# {urn:vim25}LoginResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class LoginResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}LoginBySSPIResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class LoginBySSPIResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}LogoutResponse
class LogoutResponse
  def initialize
  end
end

# {urn:vim25}AcquireLocalTicketResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::SessionManagerLocalTicket
class AcquireLocalTicketResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}TerminateSessionResponse
class TerminateSessionResponse
  def initialize
  end
end

# {urn:vim25}SetLocaleResponse
class SetLocaleResponse
  def initialize
  end
end

# {urn:vim25}LoginExtensionBySubjectNameResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class LoginExtensionBySubjectNameResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}LoginExtensionByCertificateResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class LoginExtensionByCertificateResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ImpersonateUserResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class ImpersonateUserResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SessionIsActiveResponse
#   returnval - SOAP::SOAPBoolean
class SessionIsActiveResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AcquireCloneTicketResponse
#   returnval - SOAP::SOAPString
class AcquireCloneTicketResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CloneSessionResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UserSession
class CloneSessionResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ConfigureDatastoreIORM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ConfigureDatastoreIORM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryIORMConfigOptionResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::StorageIORMConfigOption
class QueryIORMConfigOptionResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CancelTaskResponse
class CancelTaskResponse
  def initialize
  end
end

# {urn:vim25}UpdateProgressResponse
class UpdateProgressResponse
  def initialize
  end
end

# {urn:vim25}SetTaskStateResponse
class SetTaskStateResponse
  def initialize
  end
end

# {urn:vim25}SetTaskDescriptionResponse
class SetTaskDescriptionResponse
  def initialize
  end
end

# {urn:vim25}ReadNextTasksResponse
class ReadNextTasksResponse < ::Array
end

# {urn:vim25}ReadPreviousTasksResponse
class ReadPreviousTasksResponse < ::Array
end

# {urn:vim25}CreateCollectorForTasksResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateCollectorForTasksResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateTaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::TaskInfo
class CreateTaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrieveUserGroupsResponse
class RetrieveUserGroupsResponse < ::Array
end

# {urn:vim25}UpdateVAppConfigResponse
class UpdateVAppConfigResponse
  def initialize
  end
end

# {urn:vim25}UpdateLinkedChildrenResponse
class UpdateLinkedChildrenResponse
  def initialize
  end
end

# {urn:vim25}CloneVApp_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CloneVApp_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExportVAppResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExportVAppResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerOnVApp_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOnVApp_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerOffVApp_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOffVApp_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SuspendVApp_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SuspendVApp_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}unregisterVApp_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UnregisterVApp_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DeleteVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DeleteVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MoveVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MoveVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CopyVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CopyVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExtendVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExtendVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryVirtualDiskFragmentationResponse
#   returnval - SOAP::SOAPInt
class QueryVirtualDiskFragmentationResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DefragmentVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DefragmentVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ShrinkVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ShrinkVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}InflateVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InflateVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}EagerZeroVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EagerZeroVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ZeroFillVirtualDisk_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ZeroFillVirtualDisk_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetVirtualDiskUuidResponse
class SetVirtualDiskUuidResponse
  def initialize
  end
end

# {urn:vim25}QueryVirtualDiskUuidResponse
#   returnval - SOAP::SOAPString
class QueryVirtualDiskUuidResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryVirtualDiskGeometryResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostDiskDimensionsChs
class QueryVirtualDiskGeometryResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshStorageInfoResponse
class RefreshStorageInfoResponse
  def initialize
  end
end

# {urn:vim25}CreateSnapshot_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateSnapshot_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RevertToCurrentSnapshot_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RevertToCurrentSnapshot_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveAllSnapshots_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveAllSnapshots_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ReconfigVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpgradeVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpgradeVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExtractOvfEnvironmentResponse
#   returnval - SOAP::SOAPString
class ExtractOvfEnvironmentResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerOnVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOnVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PowerOffVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PowerOffVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SuspendVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SuspendVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ResetVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResetVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ShutdownGuestResponse
class ShutdownGuestResponse
  def initialize
  end
end

# {urn:vim25}RebootGuestResponse
class RebootGuestResponse
  def initialize
  end
end

# {urn:vim25}StandbyGuestResponse
class StandbyGuestResponse
  def initialize
  end
end

# {urn:vim25}AnswerVMResponse
class AnswerVMResponse
  def initialize
  end
end

# {urn:vim25}CustomizeVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CustomizeVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CheckCustomizationSpecResponse
class CheckCustomizationSpecResponse
  def initialize
  end
end

# {urn:vim25}MigrateVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MigrateVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RelocateVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RelocateVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CloneVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CloneVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExportVmResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExportVmResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MarkAsTemplateResponse
class MarkAsTemplateResponse
  def initialize
  end
end

# {urn:vim25}MarkAsVirtualMachineResponse
class MarkAsVirtualMachineResponse
  def initialize
  end
end

# {urn:vim25}UnregisterVMResponse
class UnregisterVMResponse
  def initialize
  end
end

# {urn:vim25}ResetGuestInformationResponse
class ResetGuestInformationResponse
  def initialize
  end
end

# {urn:vim25}MountToolsInstallerResponse
class MountToolsInstallerResponse
  def initialize
  end
end

# {urn:vim25}UnmountToolsInstallerResponse
class UnmountToolsInstallerResponse
  def initialize
  end
end

# {urn:vim25}UpgradeTools_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UpgradeTools_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AcquireMksTicketResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::VirtualMachineMksTicket
class AcquireMksTicketResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}AcquireTicketResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::VirtualMachineTicket
class AcquireTicketResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetScreenResolutionResponse
class SetScreenResolutionResponse
  def initialize
  end
end

# {urn:vim25}DefragmentAllDisksResponse
class DefragmentAllDisksResponse
  def initialize
  end
end

# {urn:vim25}CreateSecondaryVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateSecondaryVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}TurnOffFaultToleranceForVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TurnOffFaultToleranceForVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}MakePrimaryVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class MakePrimaryVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}TerminateFaultTolerantVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class TerminateFaultTolerantVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DisableSecondaryVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class DisableSecondaryVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}EnableSecondaryVM_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class EnableSecondaryVM_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SetDisplayTopologyResponse
class SetDisplayTopologyResponse
  def initialize
  end
end

# {urn:vim25}StartRecording_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StartRecording_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}StopRecording_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StopRecording_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}StartReplaying_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StartReplaying_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}StopReplaying_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StopReplaying_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}PromoteDisks_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class PromoteDisks_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateScreenshot_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateScreenshot_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryChangedDiskAreasResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::DiskChangeInfo
class QueryChangedDiskAreasResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryUnownedFilesResponse
class QueryUnownedFilesResponse < ::Array
end

# {urn:vim25}reloadVirtualMachineFromPath_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReloadVirtualMachineFromPath_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryFaultToleranceCompatibilityResponse
class QueryFaultToleranceCompatibilityResponse < ::Array
end

# {urn:vim25}RemoveAlarmResponse
class RemoveAlarmResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureAlarmResponse
class ReconfigureAlarmResponse
  def initialize
  end
end

# {urn:vim25}CreateAlarmResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateAlarmResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}GetAlarmResponse
class GetAlarmResponse < ::Array
end

# {urn:vim25}AreAlarmActionsEnabledResponse
#   returnval - SOAP::SOAPBoolean
class AreAlarmActionsEnabledResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}EnableAlarmActionsResponse
class EnableAlarmActionsResponse
  def initialize
  end
end

# {urn:vim25}GetAlarmStateResponse
class GetAlarmStateResponse < ::Array
end

# {urn:vim25}AcknowledgeAlarmResponse
class AcknowledgeAlarmResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureDVPortgroup_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ReconfigureDVPortgroup_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryAvailableDvsSpecResponse
class QueryAvailableDvsSpecResponse < ::Array
end

# {urn:vim25}QueryCompatibleHostForNewDvsResponse
class QueryCompatibleHostForNewDvsResponse < ::Array
end

# {urn:vim25}QueryCompatibleHostForExistingDvsResponse
class QueryCompatibleHostForExistingDvsResponse < ::Array
end

# {urn:vim25}QueryDvsCompatibleHostSpecResponse
class QueryDvsCompatibleHostSpecResponse < ::Array
end

# {urn:vim25}QueryDvsFeatureCapabilityResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::DVSFeatureCapability
class QueryDvsFeatureCapabilityResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryDvsByUuidResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryDvsByUuidResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryDvsConfigTargetResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::DVSManagerDvsConfigTarget
class QueryDvsConfigTargetResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryDvsCheckCompatibilityResponse
class QueryDvsCheckCompatibilityResponse < ::Array
end

# {urn:vim25}ReadNextEventsResponse
class ReadNextEventsResponse < ::Array
end

# {urn:vim25}ReadPreviousEventsResponse
class ReadPreviousEventsResponse < ::Array
end

# {urn:vim25}RetrieveArgumentDescriptionResponse
class RetrieveArgumentDescriptionResponse < ::Array
end

# {urn:vim25}CreateCollectorForEventsResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateCollectorForEventsResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}LogUserEventResponse
class LogUserEventResponse
  def initialize
  end
end

# {urn:vim25}QueryEventsResponse
class QueryEventsResponse < ::Array
end

# {urn:vim25}PostEventResponse
class PostEventResponse
  def initialize
  end
end

# {urn:vim25}JoinDomain_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class JoinDomain_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}LeaveCurrentDomain_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class LeaveCurrentDomain_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ReconfigureAutostartResponse
class ReconfigureAutostartResponse
  def initialize
  end
end

# {urn:vim25}AutoStartPowerOnResponse
class AutoStartPowerOnResponse
  def initialize
  end
end

# {urn:vim25}AutoStartPowerOffResponse
class AutoStartPowerOffResponse
  def initialize
  end
end

# {urn:vim25}QueryBootDevicesResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostBootDeviceInfo
class QueryBootDevicesResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateBootDeviceResponse
class UpdateBootDeviceResponse
  def initialize
  end
end

# {urn:vim25}EnableHyperThreadingResponse
class EnableHyperThreadingResponse
  def initialize
  end
end

# {urn:vim25}DisableHyperThreadingResponse
class DisableHyperThreadingResponse
  def initialize
  end
end

# {urn:vim25}SearchDatastore_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SearchDatastore_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SearchDatastoreSubFolders_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class SearchDatastoreSubFolders_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DeleteFileResponse
class DeleteFileResponse
  def initialize
  end
end

# {urn:vim25}UpdateLocalSwapDatastoreResponse
class UpdateLocalSwapDatastoreResponse
  def initialize
  end
end

# {urn:vim25}QueryAvailableDisksForVmfsResponse
class QueryAvailableDisksForVmfsResponse < ::Array
end

# {urn:vim25}QueryVmfsDatastoreCreateOptionsResponse
class QueryVmfsDatastoreCreateOptionsResponse < ::Array
end

# {urn:vim25}CreateVmfsDatastoreResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateVmfsDatastoreResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryVmfsDatastoreExtendOptionsResponse
class QueryVmfsDatastoreExtendOptionsResponse < ::Array
end

# {urn:vim25}QueryVmfsDatastoreExpandOptionsResponse
class QueryVmfsDatastoreExpandOptionsResponse < ::Array
end

# {urn:vim25}ExtendVmfsDatastoreResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExtendVmfsDatastoreResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExpandVmfsDatastoreResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ExpandVmfsDatastoreResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateNasDatastoreResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateNasDatastoreResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateLocalDatastoreResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateLocalDatastoreResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveDatastoreResponse
class RemoveDatastoreResponse
  def initialize
  end
end

# {urn:vim25}ConfigureDatastorePrincipalResponse
class ConfigureDatastorePrincipalResponse
  def initialize
  end
end

# {urn:vim25}QueryUnresolvedVmfsVolumesResponse
class QueryUnresolvedVmfsVolumesResponse < ::Array
end

# {urn:vim25}ResignatureUnresolvedVmfsVolume_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ResignatureUnresolvedVmfsVolume_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateDateTimeConfigResponse
class UpdateDateTimeConfigResponse
  def initialize
  end
end

# {urn:vim25}QueryAvailableTimeZonesResponse
class QueryAvailableTimeZonesResponse < ::Array
end

# {urn:vim25}QueryDateTimeResponse
#   returnval - SOAP::SOAPDateTime
class QueryDateTimeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateDateTimeResponse
class UpdateDateTimeResponse
  def initialize
  end
end

# {urn:vim25}RefreshDateTimeSystemResponse
class RefreshDateTimeSystemResponse
  def initialize
  end
end

# {urn:vim25}QueryAvailablePartitionResponse
class QueryAvailablePartitionResponse < ::Array
end

# {urn:vim25}SelectActivePartitionResponse
class SelectActivePartitionResponse
  def initialize
  end
end

# {urn:vim25}QueryPartitionCreateOptionsResponse
class QueryPartitionCreateOptionsResponse < ::Array
end

# {urn:vim25}QueryPartitionCreateDescResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostDiagnosticPartitionCreateDescription
class QueryPartitionCreateDescResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateDiagnosticPartitionResponse
class CreateDiagnosticPartitionResponse
  def initialize
  end
end

# {urn:vim25}UpdateDefaultPolicyResponse
class UpdateDefaultPolicyResponse
  def initialize
  end
end

# {urn:vim25}EnableRulesetResponse
class EnableRulesetResponse
  def initialize
  end
end

# {urn:vim25}DisableRulesetResponse
class DisableRulesetResponse
  def initialize
  end
end

# {urn:vim25}RefreshFirewallResponse
class RefreshFirewallResponse
  def initialize
  end
end

# {urn:vim25}ResetFirmwareToFactoryDefaultsResponse
class ResetFirmwareToFactoryDefaultsResponse
  def initialize
  end
end

# {urn:vim25}BackupFirmwareConfigurationResponse
#   returnval - SOAP::SOAPString
class BackupFirmwareConfigurationResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryFirmwareConfigUploadURLResponse
#   returnval - SOAP::SOAPString
class QueryFirmwareConfigUploadURLResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RestoreFirmwareConfigurationResponse
class RestoreFirmwareConfigurationResponse
  def initialize
  end
end

# {urn:vim25}RefreshHealthStatusSystemResponse
class RefreshHealthStatusSystemResponse
  def initialize
  end
end

# {urn:vim25}ResetSystemHealthInfoResponse
class ResetSystemHealthInfoResponse
  def initialize
  end
end

# {urn:vim25}QueryModulesResponse
class QueryModulesResponse < ::Array
end

# {urn:vim25}UpdateModuleOptionStringResponse
class UpdateModuleOptionStringResponse
  def initialize
  end
end

# {urn:vim25}QueryConfiguredModuleOptionStringResponse
#   returnval - SOAP::SOAPString
class QueryConfiguredModuleOptionStringResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateUserResponse
class CreateUserResponse
  def initialize
  end
end

# {urn:vim25}UpdateUserResponse
class UpdateUserResponse
  def initialize
  end
end

# {urn:vim25}CreateGroupResponse
class CreateGroupResponse
  def initialize
  end
end

# {urn:vim25}RemoveUserResponse
class RemoveUserResponse
  def initialize
  end
end

# {urn:vim25}RemoveGroupResponse
class RemoveGroupResponse
  def initialize
  end
end

# {urn:vim25}AssignUserToGroupResponse
class AssignUserToGroupResponse
  def initialize
  end
end

# {urn:vim25}UnassignUserFromGroupResponse
class UnassignUserFromGroupResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureServiceConsoleReservationResponse
class ReconfigureServiceConsoleReservationResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureVirtualMachineReservationResponse
class ReconfigureVirtualMachineReservationResponse
  def initialize
  end
end

# {urn:vim25}UpdateNetworkConfigResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostNetworkConfigResult
class UpdateNetworkConfigResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateDnsConfigResponse
class UpdateDnsConfigResponse
  def initialize
  end
end

# {urn:vim25}UpdateIpRouteConfigResponse
class UpdateIpRouteConfigResponse
  def initialize
  end
end

# {urn:vim25}UpdateConsoleIpRouteConfigResponse
class UpdateConsoleIpRouteConfigResponse
  def initialize
  end
end

# {urn:vim25}UpdateIpRouteTableConfigResponse
class UpdateIpRouteTableConfigResponse
  def initialize
  end
end

# {urn:vim25}AddVirtualSwitchResponse
class AddVirtualSwitchResponse
  def initialize
  end
end

# {urn:vim25}RemoveVirtualSwitchResponse
class RemoveVirtualSwitchResponse
  def initialize
  end
end

# {urn:vim25}UpdateVirtualSwitchResponse
class UpdateVirtualSwitchResponse
  def initialize
  end
end

# {urn:vim25}AddPortGroupResponse
class AddPortGroupResponse
  def initialize
  end
end

# {urn:vim25}RemovePortGroupResponse
class RemovePortGroupResponse
  def initialize
  end
end

# {urn:vim25}UpdatePortGroupResponse
class UpdatePortGroupResponse
  def initialize
  end
end

# {urn:vim25}UpdatePhysicalNicLinkSpeedResponse
class UpdatePhysicalNicLinkSpeedResponse
  def initialize
  end
end

# {urn:vim25}QueryNetworkHintResponse
class QueryNetworkHintResponse < ::Array
end

# {urn:vim25}AddVirtualNicResponse
#   returnval - SOAP::SOAPString
class AddVirtualNicResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveVirtualNicResponse
class RemoveVirtualNicResponse
  def initialize
  end
end

# {urn:vim25}UpdateVirtualNicResponse
class UpdateVirtualNicResponse
  def initialize
  end
end

# {urn:vim25}AddServiceConsoleVirtualNicResponse
#   returnval - SOAP::SOAPString
class AddServiceConsoleVirtualNicResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveServiceConsoleVirtualNicResponse
class RemoveServiceConsoleVirtualNicResponse
  def initialize
  end
end

# {urn:vim25}UpdateServiceConsoleVirtualNicResponse
class UpdateServiceConsoleVirtualNicResponse
  def initialize
  end
end

# {urn:vim25}RestartServiceConsoleVirtualNicResponse
class RestartServiceConsoleVirtualNicResponse
  def initialize
  end
end

# {urn:vim25}RefreshNetworkSystemResponse
class RefreshNetworkSystemResponse
  def initialize
  end
end

# {urn:vim25}CheckHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ScanHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ScanHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ScanHostPatchV2_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ScanHostPatchV2_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}StageHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class StageHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}InstallHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InstallHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}InstallHostPatchV2_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class InstallHostPatchV2_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UninstallHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class UninstallHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryHostPatch_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryHostPatch_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RefreshResponse
class RefreshResponse
  def initialize
  end
end

# {urn:vim25}UpdatePassthruConfigResponse
class UpdatePassthruConfigResponse
  def initialize
  end
end

# {urn:vim25}ConfigurePowerPolicyResponse
class ConfigurePowerPolicyResponse
  def initialize
  end
end

# {urn:vim25}UpdateServicePolicyResponse
class UpdateServicePolicyResponse
  def initialize
  end
end

# {urn:vim25}StartServiceResponse
class StartServiceResponse
  def initialize
  end
end

# {urn:vim25}StopServiceResponse
class StopServiceResponse
  def initialize
  end
end

# {urn:vim25}RestartServiceResponse
class RestartServiceResponse
  def initialize
  end
end

# {urn:vim25}UninstallServiceResponse
class UninstallServiceResponse
  def initialize
  end
end

# {urn:vim25}RefreshServicesResponse
class RefreshServicesResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureSnmpAgentResponse
class ReconfigureSnmpAgentResponse
  def initialize
  end
end

# {urn:vim25}SendTestNotificationResponse
class SendTestNotificationResponse
  def initialize
  end
end

# {urn:vim25}RetrieveDiskPartitionInfoResponse
class RetrieveDiskPartitionInfoResponse < ::Array
end

# {urn:vim25}ComputeDiskPartitionInfoResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionInfo
class ComputeDiskPartitionInfoResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ComputeDiskPartitionInfoForResizeResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostDiskPartitionInfo
class ComputeDiskPartitionInfoForResizeResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}UpdateDiskPartitionsResponse
class UpdateDiskPartitionsResponse
  def initialize
  end
end

# {urn:vim25}FormatVmfsResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostVmfsVolume
class FormatVmfsResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RescanVmfsResponse
class RescanVmfsResponse
  def initialize
  end
end

# {urn:vim25}AttachVmfsExtentResponse
class AttachVmfsExtentResponse
  def initialize
  end
end

# {urn:vim25}ExpandVmfsExtentResponse
class ExpandVmfsExtentResponse
  def initialize
  end
end

# {urn:vim25}UpgradeVmfsResponse
class UpgradeVmfsResponse
  def initialize
  end
end

# {urn:vim25}UpgradeVmLayoutResponse
class UpgradeVmLayoutResponse
  def initialize
  end
end

# {urn:vim25}QueryUnresolvedVmfsVolumeResponse
class QueryUnresolvedVmfsVolumeResponse < ::Array
end

# {urn:vim25}ResolveMultipleUnresolvedVmfsVolumesResponse
class ResolveMultipleUnresolvedVmfsVolumesResponse < ::Array
end

# {urn:vim25}UnmountForceMountedVmfsVolumeResponse
class UnmountForceMountedVmfsVolumeResponse
  def initialize
  end
end

# {urn:vim25}RescanHbaResponse
class RescanHbaResponse
  def initialize
  end
end

# {urn:vim25}RescanAllHbaResponse
class RescanAllHbaResponse
  def initialize
  end
end

# {urn:vim25}UpdateSoftwareInternetScsiEnabledResponse
class UpdateSoftwareInternetScsiEnabledResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiDiscoveryPropertiesResponse
class UpdateInternetScsiDiscoveryPropertiesResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiAuthenticationPropertiesResponse
class UpdateInternetScsiAuthenticationPropertiesResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiDigestPropertiesResponse
class UpdateInternetScsiDigestPropertiesResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiAdvancedOptionsResponse
class UpdateInternetScsiAdvancedOptionsResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiIPPropertiesResponse
class UpdateInternetScsiIPPropertiesResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiNameResponse
class UpdateInternetScsiNameResponse
  def initialize
  end
end

# {urn:vim25}UpdateInternetScsiAliasResponse
class UpdateInternetScsiAliasResponse
  def initialize
  end
end

# {urn:vim25}AddInternetScsiSendTargetsResponse
class AddInternetScsiSendTargetsResponse
  def initialize
  end
end

# {urn:vim25}RemoveInternetScsiSendTargetsResponse
class RemoveInternetScsiSendTargetsResponse
  def initialize
  end
end

# {urn:vim25}AddInternetScsiStaticTargetsResponse
class AddInternetScsiStaticTargetsResponse
  def initialize
  end
end

# {urn:vim25}RemoveInternetScsiStaticTargetsResponse
class RemoveInternetScsiStaticTargetsResponse
  def initialize
  end
end

# {urn:vim25}EnableMultipathPathResponse
class EnableMultipathPathResponse
  def initialize
  end
end

# {urn:vim25}DisableMultipathPathResponse
class DisableMultipathPathResponse
  def initialize
  end
end

# {urn:vim25}SetMultipathLunPolicyResponse
class SetMultipathLunPolicyResponse
  def initialize
  end
end

# {urn:vim25}QueryPathSelectionPolicyOptionsResponse
class QueryPathSelectionPolicyOptionsResponse < ::Array
end

# {urn:vim25}QueryStorageArrayTypePolicyOptionsResponse
class QueryStorageArrayTypePolicyOptionsResponse < ::Array
end

# {urn:vim25}UpdateScsiLunDisplayNameResponse
class UpdateScsiLunDisplayNameResponse
  def initialize
  end
end

# {urn:vim25}RefreshStorageSystemResponse
class RefreshStorageSystemResponse
  def initialize
  end
end

# {urn:vim25}UpdateIpConfigResponse
class UpdateIpConfigResponse
  def initialize
  end
end

# {urn:vim25}SelectVnicResponse
class SelectVnicResponse
  def initialize
  end
end

# {urn:vim25}DeselectVnicResponse
class DeselectVnicResponse
  def initialize
  end
end

# {urn:vim25}QueryNetConfigResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::VirtualNicManagerNetConfig
class QueryNetConfigResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}SelectVnicForNicTypeResponse
class SelectVnicForNicTypeResponse
  def initialize
  end
end

# {urn:vim25}DeselectVnicForNicTypeResponse
class DeselectVnicForNicTypeResponse
  def initialize
  end
end

# {urn:vim25}QueryOptionsResponse
class QueryOptionsResponse < ::Array
end

# {urn:vim25}UpdateOptionsResponse
class UpdateOptionsResponse
  def initialize
  end
end

# {urn:vim25}CheckCompliance_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckCompliance_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryComplianceStatusResponse
class QueryComplianceStatusResponse < ::Array
end

# {urn:vim25}ClearComplianceStatusResponse
class ClearComplianceStatusResponse
  def initialize
  end
end

# {urn:vim25}QueryExpressionMetadataResponse
class QueryExpressionMetadataResponse < ::Array
end

# {urn:vim25}DestroyProfileResponse
class DestroyProfileResponse
  def initialize
  end
end

# {urn:vim25}AssociateProfileResponse
class AssociateProfileResponse
  def initialize
  end
end

# {urn:vim25}DissociateProfileResponse
class DissociateProfileResponse
  def initialize
  end
end

# {urn:vim25}CheckProfileCompliance_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckProfileCompliance_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ExportProfileResponse
#   returnval - SOAP::SOAPString
class ExportProfileResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateProfileResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateProfileResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryPolicyMetadataResponse
class QueryPolicyMetadataResponse < ::Array
end

# {urn:vim25}FindAssociatedProfileResponse
class FindAssociatedProfileResponse < ::Array
end

# {urn:vim25}UpdateClusterProfileResponse
class UpdateClusterProfileResponse
  def initialize
  end
end

# {urn:vim25}UpdateReferenceHostResponse
class UpdateReferenceHostResponse
  def initialize
  end
end

# {urn:vim25}UpdateHostProfileResponse
class UpdateHostProfileResponse
  def initialize
  end
end

# {urn:vim25}ExecuteHostProfileResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ProfileExecuteResult
class ExecuteHostProfileResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ApplyHostConfig_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class ApplyHostConfig_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}GenerateConfigTaskListResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::HostProfileManagerConfigTaskList
class GenerateConfigTaskListResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryHostProfileMetadataResponse
class QueryHostProfileMetadataResponse < ::Array
end

# {urn:vim25}CreateDefaultProfileResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ApplyProfile
class CreateDefaultProfileResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveScheduledTaskResponse
class RemoveScheduledTaskResponse
  def initialize
  end
end

# {urn:vim25}ReconfigureScheduledTaskResponse
class ReconfigureScheduledTaskResponse
  def initialize
  end
end

# {urn:vim25}RunScheduledTaskResponse
class RunScheduledTaskResponse
  def initialize
  end
end

# {urn:vim25}CreateScheduledTaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateScheduledTaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrieveEntityScheduledTaskResponse
class RetrieveEntityScheduledTaskResponse < ::Array
end

# {urn:vim25}CreateObjectScheduledTaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateObjectScheduledTaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrieveObjectScheduledTaskResponse
class RetrieveObjectScheduledTaskResponse < ::Array
end

# {urn:vim25}OpenInventoryViewFolderResponse
class OpenInventoryViewFolderResponse < ::Array
end

# {urn:vim25}CloseInventoryViewFolderResponse
class CloseInventoryViewFolderResponse < ::Array
end

# {urn:vim25}ModifyListViewResponse
class ModifyListViewResponse < ::Array
end

# {urn:vim25}ResetListViewResponse
class ResetListViewResponse < ::Array
end

# {urn:vim25}ResetListViewFromViewResponse
class ResetListViewFromViewResponse
  def initialize
  end
end

# {urn:vim25}DestroyViewResponse
class DestroyViewResponse
  def initialize
  end
end

# {urn:vim25}CreateInventoryViewResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateInventoryViewResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateContainerViewResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateContainerViewResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateListViewResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateListViewResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CreateListViewFromViewResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateListViewFromViewResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RevertToSnapshot_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RevertToSnapshot_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RemoveSnapshot_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class RemoveSnapshot_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RenameSnapshotResponse
class RenameSnapshotResponse
  def initialize
  end
end

# {urn:vim25}CheckCompatibility_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckCompatibility_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}QueryVMotionCompatibilityEx_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class QueryVMotionCompatibilityEx_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CheckMigrate_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckMigrate_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CheckRelocate_TaskResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CheckRelocate_TaskResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DestroyPropertyFilterResponse
class DestroyPropertyFilterResponse
  def initialize
  end
end

# {urn:vim25}CreateFilterResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreateFilterResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrievePropertiesResponse
class RetrievePropertiesResponse < ::Array
end

# {urn:vim25}CheckForUpdatesResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UpdateSet
class CheckForUpdatesResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}WaitForUpdatesResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UpdateSet
class WaitForUpdatesResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CancelWaitForUpdatesResponse
class CancelWaitForUpdatesResponse
  def initialize
  end
end

# {urn:vim25}WaitForUpdatesExResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::UpdateSet
class WaitForUpdatesExResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}RetrievePropertiesExResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::RetrieveResult
class RetrievePropertiesExResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}ContinueRetrievePropertiesExResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::RetrieveResult
class ContinueRetrievePropertiesExResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}CancelRetrievePropertiesExResponse
class CancelRetrievePropertiesExResponse
  def initialize
  end
end

# {urn:vim25}CreatePropertyCollectorResponse
#   returnval - Bosh::Director::CloudProviders::VSphere::ManagedObjectReference
class CreatePropertyCollectorResponse
  attr_accessor :returnval

  def initialize(returnval = nil)
    @returnval = returnval
  end
end

# {urn:vim25}DestroyPropertyCollectorResponse
class DestroyPropertyCollectorResponse
  def initialize
  end
end


end; end; end; end
